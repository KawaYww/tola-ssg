<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1494" onload="init(evt)" viewBox="0 0 1200 1494" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1494" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1477.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1477.00"> </text><svg id="frames" x="10" width="1180" total_samples="621"><g><title>dyld4::Loader::applyCachePatches(dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;) const (1 samples, 0.16%)</title><rect x="0.0000%" y="1413" width="0.1610%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>dyld4::ProcessConfig::ProcessConfig(dyld4::KernelArgs const*, dyld4::SyscallDelegate&amp;, lsl::Allocator&amp;) (1 samples, 0.16%)</title><rect x="0.1610%" y="1413" width="0.1610%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.4110%" y="1423.50"></text></g><g><title>dyld4::ProcessConfig::DyldCache::DyldCache(dyld4::ProcessConfig::Process&amp;, dyld4::ProcessConfig::Security const&amp;, dyld4::ProcessConfig::Logging const&amp;, dyld4::SyscallDelegate&amp;, lsl::Allocator&amp;, dyld4::ProcessConfig const&amp;) (1 samples, 0.16%)</title><rect x="0.1610%" y="1397" width="0.1610%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.4110%" y="1407.50"></text></g><g><title>dyld4::CacheFinder::CacheFinder(dyld4::ProcessConfig::Process const&amp;, dyld4::ProcessConfig::Logging const&amp;, dyld4::SyscallDelegate&amp;) (1 samples, 0.16%)</title><rect x="0.1610%" y="1381" width="0.1610%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.4110%" y="1391.50"></text></g><g><title>ignite (1 samples, 0.16%)</title><rect x="0.1610%" y="1365" width="0.1610%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.4110%" y="1375.50"></text></g><g><title>boot_boot (1 samples, 0.16%)</title><rect x="0.1610%" y="1349" width="0.1610%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.4110%" y="1359.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="0.1610%" y="1333" width="0.1610%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.4110%" y="1343.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const (1 samples, 0.16%)</title><rect x="0.3221%" y="1381" width="0.1610%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1391.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const::$_0::operator()() const (1 samples, 0.16%)</title><rect x="0.3221%" y="1365" width="0.1610%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1375.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.16%)</title><rect x="0.3221%" y="1349" width="0.1610%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1359.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.16%)</title><rect x="0.3221%" y="1333" width="0.1610%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1343.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.16%)</title><rect x="0.3221%" y="1317" width="0.1610%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1327.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.16%)</title><rect x="0.3221%" y="1301" width="0.1610%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1311.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.16%)</title><rect x="0.3221%" y="1285" width="0.1610%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1295.50"></text></g><g><title>dyld4::RuntimeState::notifyObjCInit(dyld4::Loader const*) (1 samples, 0.16%)</title><rect x="0.3221%" y="1269" width="0.1610%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1279.50"></text></g><g><title>load_images (1 samples, 0.16%)</title><rect x="0.3221%" y="1253" width="0.1610%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1263.50"></text></g><g><title>_NSInitializePlatform (1 samples, 0.16%)</title><rect x="0.3221%" y="1237" width="0.1610%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1247.50"></text></g><g><title>@objc static _NSSwiftProcessInfo.processInfo.getter (1 samples, 0.16%)</title><rect x="0.3221%" y="1221" width="0.1610%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1231.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.16%)</title><rect x="0.3221%" y="1205" width="0.1610%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1215.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.16%)</title><rect x="0.3221%" y="1189" width="0.1610%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1199.50"></text></g><g><title>one-time initialization function for _shared (1 samples, 0.16%)</title><rect x="0.3221%" y="1173" width="0.1610%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1183.50"></text></g><g><title>@objc _NSSwiftProcessInfo.init() (1 samples, 0.16%)</title><rect x="0.3221%" y="1157" width="0.1610%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1167.50"></text></g><g><title>_NSSwiftProcessInfo.init() (1 samples, 0.16%)</title><rect x="0.3221%" y="1141" width="0.1610%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1151.50"></text></g><g><title>__swift_instantiateConcreteTypeFromMangledName (1 samples, 0.16%)</title><rect x="0.3221%" y="1125" width="0.1610%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1135.50"></text></g><g><title>swift_getTypeByMangledNameInContextImpl(char const*, unsigned long, swift::TargetContextDescriptor&lt;swift::InProcess&gt; const*, void const* const*) (1 samples, 0.16%)</title><rect x="0.3221%" y="1109" width="0.1610%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1119.50"></text></g><g><title>swift_getTypeByMangledName (1 samples, 0.16%)</title><rect x="0.3221%" y="1093" width="0.1610%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1103.50"></text></g><g><title>swift_getTypeByMangledNameSlow(swift::MetadataRequest, __swift::__runtime::llvm::StringRef, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;, std::__1::atomic&lt;unsigned long&gt;&amp;, unsigned long, swift::TypeLookupErrorOr&lt;swift::TypeInfo&gt; (swift::MetadataRequest, __swift::__runtime::llvm::StringRef, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) swiftcall*) (1 samples, 0.16%)</title><rect x="0.3221%" y="1077" width="0.1610%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1087.50"></text></g><g><title>swift_getTypeByMangledNameImpl(swift::MetadataRequest, __swift::__runtime::llvm::StringRef, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.16%)</title><rect x="0.3221%" y="1061" width="0.1610%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1071.50"></text></g><g><title>swift_getTypeByMangledNode (1 samples, 0.16%)</title><rect x="0.3221%" y="1045" width="0.1610%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1055.50"></text></g><g><title>swift_getTypeByMangledNodeSlow(swift::MetadataRequest, swift::Demangle::__runtime::Demangler&amp;, swift::Demangle::__runtime::Node*, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;, std::__1::atomic&lt;unsigned long&gt;&amp;, unsigned long, swift::TypeLookupErrorOr&lt;swift::TypeInfo&gt; (swift::MetadataRequest, swift::Demangle::__runtime::Demangler&amp;, swift::Demangle::__runtime::Node*, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) swiftcall*) (1 samples, 0.16%)</title><rect x="0.3221%" y="1029" width="0.1610%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1039.50"></text></g><g><title>swift_getTypeByMangledNodeImpl(swift::MetadataRequest, swift::Demangle::__runtime::Demangler&amp;, swift::Demangle::__runtime::Node*, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.16%)</title><rect x="0.3221%" y="1013" width="0.1610%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1023.50"></text></g><g><title>swift::Demangle::__runtime::TypeDecoder&lt;(anonymous namespace)::DecodedMetadataBuilder&gt;::decodeMangledType(swift::Demangle::__runtime::Node*, unsigned int, bool) (1 samples, 0.16%)</title><rect x="0.3221%" y="997" width="0.1610%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="1"/><text x="0.5721%" y="1007.50"></text></g><g><title>(anonymous namespace)::DecodedMetadataBuilder::createBoundGenericType(swift::TargetContextDescriptor&lt;swift::InProcess&gt; const*, __swift::__runtime::llvm::ArrayRef&lt;swift::MetadataPackOrValue&gt;, swift::MetadataPackOrValue) const (1 samples, 0.16%)</title><rect x="0.3221%" y="981" width="0.1610%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="1"/><text x="0.5721%" y="991.50"></text></g><g><title>__swift_instantiateGenericMetadata (1 samples, 0.16%)</title><rect x="0.3221%" y="965" width="0.1610%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="1"/><text x="0.5721%" y="975.50"></text></g><g><title>_swift_getGenericMetadata(swift::MetadataRequest, void const* const*, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*) (1 samples, 0.16%)</title><rect x="0.3221%" y="949" width="0.1610%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="1"/><text x="0.5721%" y="959.50"></text></g><g><title>std::__1::pair&lt;swift::GenericCacheEntry*, swift::MetadataResponse&gt; swift::LockingConcurrentMap&lt;swift::GenericCacheEntry, swift::LockingConcurrentMapStorage&lt;swift::GenericCacheEntry, (unsigned short)14&gt;&gt;::getOrInsert&lt;swift::MetadataCacheKey, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;&gt;(swift::MetadataCacheKey, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;) (1 samples, 0.16%)</title><rect x="0.3221%" y="933" width="0.1610%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="1"/><text x="0.5721%" y="943.50"></text></g><g><title>swift::MetadataCacheEntryBase&lt;swift::GenericCacheEntry, void const*&gt;::doInitialization(swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest) (1 samples, 0.16%)</title><rect x="0.3221%" y="917" width="0.1610%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="1"/><text x="0.5721%" y="927.50"></text></g><g><title>swift::GenericCacheEntry::tryInitialize(swift::TargetMetadata&lt;swift::InProcess&gt;*, swift::PrivateMetadataState, swift::PrivateMetadataCompletionContext*) (1 samples, 0.16%)</title><rect x="0.3221%" y="901" width="0.1610%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="1"/><text x="0.5721%" y="911.50"></text></g><g><title>type metadata completion function for LockedState._Buffer (1 samples, 0.16%)</title><rect x="0.3221%" y="885" width="0.1610%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="1"/><text x="0.5721%" y="895.50"></text></g><g><title>_swift_initClassMetadataImpl(swift::TargetClassMetadata&lt;swift::InProcess, swift::TargetAnyClassMetadataObjCInterop&lt;swift::InProcess&gt;&gt;*, swift::ClassLayoutFlags, unsigned long, swift::TargetTypeLayout&lt;swift::InProcess&gt; const* const*, unsigned long*, bool) (1 samples, 0.16%)</title><rect x="0.3221%" y="869" width="0.1610%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="1"/><text x="0.5721%" y="879.50"></text></g><g><title>getSuperclassMetadata (1 samples, 0.16%)</title><rect x="0.3221%" y="853" width="0.1610%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="1"/><text x="0.5721%" y="863.50"></text></g><g><title>swift_getTypeByMangledName (1 samples, 0.16%)</title><rect x="0.3221%" y="837" width="0.1610%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="1"/><text x="0.5721%" y="847.50"></text></g><g><title>swift_getTypeByMangledNameImpl(swift::MetadataRequest, __swift::__runtime::llvm::StringRef, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.16%)</title><rect x="0.3221%" y="821" width="0.1610%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="1"/><text x="0.5721%" y="831.50"></text></g><g><title>swift_getTypeByMangledNode (1 samples, 0.16%)</title><rect x="0.3221%" y="805" width="0.1610%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="1"/><text x="0.5721%" y="815.50"></text></g><g><title>swift_getTypeByMangledNodeImpl(swift::MetadataRequest, swift::Demangle::__runtime::Demangler&amp;, swift::Demangle::__runtime::Node*, void const* const*, std::__1::function&lt;void const* (unsigned int, unsigned int)&gt;, std::__1::function&lt;swift::TargetWitnessTable&lt;swift::InProcess&gt; const* (swift::TargetMetadata&lt;swift::InProcess&gt; const*, unsigned int)&gt;) (1 samples, 0.16%)</title><rect x="0.3221%" y="789" width="0.1610%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="1"/><text x="0.5721%" y="799.50"></text></g><g><title>swift::Demangle::__runtime::TypeDecoder&lt;(anonymous namespace)::DecodedMetadataBuilder&gt;::decodeMangledType(swift::Demangle::__runtime::Node*, unsigned int, bool) (1 samples, 0.16%)</title><rect x="0.3221%" y="773" width="0.1610%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="1"/><text x="0.5721%" y="783.50"></text></g><g><title>(anonymous namespace)::DecodedMetadataBuilder::createBoundGenericType(swift::TargetContextDescriptor&lt;swift::InProcess&gt; const*, __swift::__runtime::llvm::ArrayRef&lt;swift::MetadataPackOrValue&gt;, swift::MetadataPackOrValue) const (1 samples, 0.16%)</title><rect x="0.3221%" y="757" width="0.1610%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="1"/><text x="0.5721%" y="767.50"></text></g><g><title>__swift_instantiateGenericMetadata (1 samples, 0.16%)</title><rect x="0.3221%" y="741" width="0.1610%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="1"/><text x="0.5721%" y="751.50"></text></g><g><title>_swift_getGenericMetadata(swift::MetadataRequest, void const* const*, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*) (1 samples, 0.16%)</title><rect x="0.3221%" y="725" width="0.1610%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="1"/><text x="0.5721%" y="735.50"></text></g><g><title>std::__1::pair&lt;swift::GenericCacheEntry*, swift::MetadataResponse&gt; swift::LockingConcurrentMap&lt;swift::GenericCacheEntry, swift::LockingConcurrentMapStorage&lt;swift::GenericCacheEntry, (unsigned short)14&gt;&gt;::getOrInsert&lt;swift::MetadataCacheKey, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;&gt;(swift::MetadataCacheKey, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;) (1 samples, 0.16%)</title><rect x="0.3221%" y="709" width="0.1610%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="1"/><text x="0.5721%" y="719.50"></text></g><g><title>std::__1::pair&lt;swift::GenericCacheEntry*, bool&gt; swift::StableAddressConcurrentReadableHashMap&lt;swift::GenericCacheEntry, swift::TaggedMetadataAllocator&lt;(unsigned short)14&gt;, swift::Mutex&gt;::getOrInsert&lt;swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;&gt;(swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;) (1 samples, 0.16%)</title><rect x="0.3221%" y="693" width="0.1610%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="1"/><text x="0.5721%" y="703.50"></text></g><g><title>void swift::ConcurrentReadableHashMap&lt;swift::HashMapElementWrapper&lt;swift::GenericCacheEntry&gt;, swift::Mutex&gt;::getOrInsert&lt;swift::MetadataCacheKey, std::__1::pair&lt;swift::GenericCacheEntry*, bool&gt; swift::StableAddressConcurrentReadableHashMap&lt;swift::GenericCacheEntry, swift::TaggedMetadataAllocator&lt;(unsigned short)14&gt;, swift::Mutex&gt;::getOrInsert&lt;swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;&gt;(swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;)::&apos;lambda&apos;(swift::HashMapElementWrapper&lt;swift::GenericCacheEntry&gt;*, bool)&gt;(swift::MetadataCacheKey, std::__1::pair&lt;swift::GenericCacheEntry*, bool&gt; swift::StableAddressConcurrentReadableHashMap&lt;swift::GenericCacheEntry, swift::TaggedMetadataAllocator&lt;(unsigned short)14&gt;, swift::Mutex&gt;::getOrInsert&lt;swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;&gt;(swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;)::&apos;lambda&apos;(swift::HashMapElementWrapper&lt;swift::GenericCacheEntry&gt;*, bool) const&amp;) (1 samples, 0.16%)</title><rect x="0.3221%" y="677" width="0.1610%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="1"/><text x="0.5721%" y="687.50"></text></g><g><title>std::__1::pair&lt;swift::GenericCacheEntry*, bool&gt; swift::StableAddressConcurrentReadableHashMap&lt;swift::GenericCacheEntry, swift::TaggedMetadataAllocator&lt;(unsigned short)14&gt;, swift::Mutex&gt;::getOrInsert&lt;swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;&gt;(swift::MetadataCacheKey, swift::MetadataWaitQueue::Worker&amp;, swift::MetadataRequest&amp;, swift::TargetTypeContextDescriptor&lt;swift::InProcess&gt; const*&amp;, void const* const*&amp;)::&apos;lambda&apos;(swift::HashMapElementWrapper&lt;swift::GenericCacheEntry&gt;*, bool)::operator()(swift::HashMapElementWrapper&lt;swift::GenericCacheEntry&gt;*, bool) const (1 samples, 0.16%)</title><rect x="0.3221%" y="661" width="0.1610%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="1"/><text x="0.5721%" y="671.50"></text></g><g><title>swift::MetadataAllocator::Allocate(unsigned long, unsigned long) (1 samples, 0.16%)</title><rect x="0.3221%" y="645" width="0.1610%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="1"/><text x="0.5721%" y="655.50"></text></g><g><title>__malloc_init (1 samples, 0.16%)</title><rect x="0.4831%" y="1237" width="0.1610%" height="15" fill="rgb(231,145,46)" fg:x="3" fg:w="1"/><text x="0.7331%" y="1247.50"></text></g><g><title>create_scalable_szone (1 samples, 0.16%)</title><rect x="0.4831%" y="1221" width="0.1610%" height="15" fill="rgb(251,118,11)" fg:x="3" fg:w="1"/><text x="0.7331%" y="1231.50"></text></g><g><title>dyld4::APIs::runAllInitializersForMain() (3 samples, 0.48%)</title><rect x="0.3221%" y="1397" width="0.4831%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="3"/><text x="0.5721%" y="1407.50"></text></g><g><title>dyld4::PrebuiltLoader::runInitializers(dyld4::RuntimeState&amp;) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1381" width="0.3221%" height="15" fill="rgb(247,81,37)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1391.50"></text></g><g><title>dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1365" width="0.3221%" height="15" fill="rgb(209,12,38)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1375.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1349" width="0.3221%" height="15" fill="rgb(227,1,9)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1359.50"></text></g><g><title>mach_o::Header::forEachSection(void (mach_o::Header::SectionInfo const&amp;, bool&amp;) block_pointer) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1333" width="0.3221%" height="15" fill="rgb(248,47,43)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1343.50"></text></g><g><title>mach_o::Header::forEachLoadCommand(void (load_command const*, bool&amp;) block_pointer) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1317" width="0.3221%" height="15" fill="rgb(221,10,30)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1327.50"></text></g><g><title>invocation function for block in mach_o::Header::forEachSection(void (mach_o::Header::SectionInfo const&amp;, bool&amp;) block_pointer) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1301" width="0.3221%" height="15" fill="rgb(210,229,1)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1311.50"></text></g><g><title>invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1285" width="0.3221%" height="15" fill="rgb(222,148,37)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1295.50"></text></g><g><title>invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (2 samples, 0.32%)</title><rect x="0.4831%" y="1269" width="0.3221%" height="15" fill="rgb(234,67,33)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1279.50"></text></g><g><title>libSystem_initializer (2 samples, 0.32%)</title><rect x="0.4831%" y="1253" width="0.3221%" height="15" fill="rgb(247,98,35)" fg:x="3" fg:w="2"/><text x="0.7331%" y="1263.50"></text></g><g><title>libdispatch_init (1 samples, 0.16%)</title><rect x="0.6441%" y="1237" width="0.1610%" height="15" fill="rgb(247,138,52)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1247.50"></text></g><g><title>_os_object_init (1 samples, 0.16%)</title><rect x="0.6441%" y="1221" width="0.1610%" height="15" fill="rgb(213,79,30)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1231.50"></text></g><g><title>_objc_init (1 samples, 0.16%)</title><rect x="0.6441%" y="1205" width="0.1610%" height="15" fill="rgb(246,177,23)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1215.50"></text></g><g><title>_dyld_objc_register_callbacks (1 samples, 0.16%)</title><rect x="0.6441%" y="1189" width="0.1610%" height="15" fill="rgb(230,62,27)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1199.50"></text></g><g><title>dyld4::APIs::_dyld_objc_register_callbacks(dyld4::ObjCCallbacks const*) (1 samples, 0.16%)</title><rect x="0.6441%" y="1173" width="0.1610%" height="15" fill="rgb(216,154,8)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1183.50"></text></g><g><title>dyld4::RuntimeState::setObjCNotifiers(dyld4::ReadOnlyCallback&lt;void (*)(char const*, mach_header const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(mach_header const*, void*, mach_header const*, void const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(_dyld_objc_notify_mapped_info const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(unsigned int, _dyld_objc_notify_mapped_info const*, void (unsigned int) block_pointer)&gt;) (1 samples, 0.16%)</title><rect x="0.6441%" y="1157" width="0.1610%" height="15" fill="rgb(244,35,45)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1167.50"></text></g><g><title>dyld4::RuntimeLocks::withLoadersReadLock(void () block_pointer) (1 samples, 0.16%)</title><rect x="0.6441%" y="1141" width="0.1610%" height="15" fill="rgb(251,115,12)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1151.50"></text></g><g><title>invocation function for block in dyld4::RuntimeState::setObjCNotifiers(dyld4::ReadOnlyCallback&lt;void (*)(char const*, mach_header const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(mach_header const*, void*, mach_header const*, void const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(_dyld_objc_notify_mapped_info const*)&gt;, dyld4::ReadOnlyCallback&lt;void (*)(unsigned int, _dyld_objc_notify_mapped_info const*, void (unsigned int) block_pointer)&gt;)::$_0::operator()() const (1 samples, 0.16%)</title><rect x="0.6441%" y="1125" width="0.1610%" height="15" fill="rgb(240,54,50)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1135.50"></text></g><g><title>map_images (1 samples, 0.16%)</title><rect x="0.6441%" y="1109" width="0.1610%" height="15" fill="rgb(233,84,52)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1119.50"></text></g><g><title>map_images_nolock (1 samples, 0.16%)</title><rect x="0.6441%" y="1093" width="0.1610%" height="15" fill="rgb(207,117,47)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1103.50"></text></g><g><title>realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 0.16%)</title><rect x="0.6441%" y="1077" width="0.1610%" height="15" fill="rgb(249,43,39)" fg:x="4" fg:w="1"/><text x="0.8941%" y="1087.50"></text></g><g><title>dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const (19 samples, 3.06%)</title><rect x="0.8052%" y="1381" width="3.0596%" height="15" fill="rgb(209,38,44)" fg:x="5" fg:w="19"/><text x="1.0552%" y="1391.50">dyl..</text></g><g><title>dyld3::MachOAnalyzer::forEachRebaseLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, bool&amp;) block_pointer) const (19 samples, 3.06%)</title><rect x="0.8052%" y="1365" width="3.0596%" height="15" fill="rgb(236,212,23)" fg:x="5" fg:w="19"/><text x="1.0552%" y="1375.50">dyl..</text></g><g><title>dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, mach_o::Header::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, mach_o::Header::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const (19 samples, 3.06%)</title><rect x="0.8052%" y="1349" width="3.0596%" height="15" fill="rgb(242,79,21)" fg:x="5" fg:w="19"/><text x="1.0552%" y="1359.50">dyl..</text></g><g><title>invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const (19 samples, 3.06%)</title><rect x="0.8052%" y="1333" width="3.0596%" height="15" fill="rgb(211,96,35)" fg:x="5" fg:w="19"/><text x="1.0552%" y="1343.50">inv..</text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (2 samples, 0.32%)</title><rect x="3.8647%" y="1221" width="0.3221%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="2"/><text x="4.1147%" y="1231.50"></text></g><g><title>dyld4::PrebuiltLoader::dependent(dyld4::RuntimeState const&amp;, unsigned int, mach_o::LinkedDylibAttributes*) const (1 samples, 0.16%)</title><rect x="4.0258%" y="1205" width="0.1610%" height="15" fill="rgb(211,81,21)" fg:x="25" fg:w="1"/><text x="4.2758%" y="1215.50"></text></g><g><title>dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool, lsl::Vector&lt;std::__1::pair&lt;dyld4::Loader const*, char const*&gt;&gt;*) const (22 samples, 3.54%)</title><rect x="0.8052%" y="1397" width="3.5427%" height="15" fill="rgb(208,190,38)" fg:x="5" fg:w="22"/><text x="1.0552%" y="1407.50">dyld..</text></g><g><title>dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1381" width="0.4831%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1391.50"></text></g><g><title>dyld3::MachOAnalyzer::withVMLayout(Diagnostics&amp;, void (mach_o::Layout const&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1365" width="0.4831%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1375.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1349" width="0.4831%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1359.50"></text></g><g><title>mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1333" width="0.4831%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1343.50"></text></g><g><title>mach_o::Fixups::forEachBindUnified_Opcodes(Diagnostics&amp;, bool, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1317" width="0.4831%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1327.50"></text></g><g><title>mach_o::Fixups::forEachBind_OpcodesLazy(Diagnostics&amp;, void (char const*, bool, bool, unsigned int, int, unsigned int, unsigned int, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1301" width="0.4831%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1311.50"></text></g><g><title>invocation function for block in mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1285" width="0.4831%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1295.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1269" width="0.4831%" height="15" fill="rgb(250,166,2)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1279.50"></text></g><g><title>dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1253" width="0.4831%" height="15" fill="rgb(242,216,29)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1263.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (3 samples, 0.48%)</title><rect x="3.8647%" y="1237" width="0.4831%" height="15" fill="rgb(230,116,27)" fg:x="24" fg:w="3"/><text x="4.1147%" y="1247.50"></text></g><g><title>dyld4::PrebuiltLoader::dependent(dyld4::RuntimeState const&amp;, unsigned int, mach_o::LinkedDylibAttributes*) const (1 samples, 0.16%)</title><rect x="4.1868%" y="1221" width="0.1610%" height="15" fill="rgb(228,99,48)" fg:x="26" fg:w="1"/><text x="4.4368%" y="1231.50"></text></g><g><title>dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.16%)</title><rect x="4.3478%" y="1397" width="0.1610%" height="15" fill="rgb(253,11,6)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1407.50"></text></g><g><title>dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.16%)</title><rect x="4.3478%" y="1381" width="0.1610%" height="15" fill="rgb(247,143,39)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1391.50"></text></g><g><title>mach_o::Header::forEachLinkedDylib(void (char const*, mach_o::LinkedDylibAttributes, mach_o::Version32, mach_o::Version32, bool, bool&amp;) block_pointer) const (1 samples, 0.16%)</title><rect x="4.3478%" y="1365" width="0.1610%" height="15" fill="rgb(236,97,10)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1375.50"></text></g><g><title>mach_o::Header::forEachLoadCommand(void (load_command const*, bool&amp;) block_pointer) const (1 samples, 0.16%)</title><rect x="4.3478%" y="1349" width="0.1610%" height="15" fill="rgb(233,208,19)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1359.50"></text></g><g><title>invocation function for block in mach_o::Header::forEachLinkedDylib(void (char const*, mach_o::LinkedDylibAttributes, mach_o::Version32, mach_o::Version32, bool, bool&amp;) block_pointer) const (1 samples, 0.16%)</title><rect x="4.3478%" y="1333" width="0.1610%" height="15" fill="rgb(216,164,2)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1343.50"></text></g><g><title>invocation function for block in dyld4::JustInTimeLoader::loadDependents(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.16%)</title><rect x="4.3478%" y="1317" width="0.1610%" height="15" fill="rgb(220,129,5)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1327.50"></text></g><g><title>dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.16%)</title><rect x="4.3478%" y="1301" width="0.1610%" height="15" fill="rgb(242,17,10)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1311.50"></text></g><g><title>dyld4::Loader::forEachPath(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) (1 samples, 0.16%)</title><rect x="4.3478%" y="1285" width="0.1610%" height="15" fill="rgb(242,107,0)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1295.50"></text></g><g><title>dyld4::ProcessConfig::PathOverrides::forEachPathVariant(char const*, mach_o::Platform, bool, bool, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) const (1 samples, 0.16%)</title><rect x="4.3478%" y="1269" width="0.1610%" height="15" fill="rgb(251,28,31)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1279.50"></text></g><g><title>dyld4::Loader::forEachResolvedAtPathVar(dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;, void (char const*, dyld4::ProcessConfig::PathOverrides::Type, bool&amp;) block_pointer) (1 samples, 0.16%)</title><rect x="4.3478%" y="1253" width="0.1610%" height="15" fill="rgb(233,223,10)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1263.50"></text></g><g><title>invocation function for block in dyld4::Loader::getLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;) (1 samples, 0.16%)</title><rect x="4.3478%" y="1237" width="0.1610%" height="15" fill="rgb(215,21,27)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1247.50"></text></g><g><title>dyld4::Loader::makeDiskLoader(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::LoadOptions const&amp;, bool, unsigned int, mach_o::Layout const*) (1 samples, 0.16%)</title><rect x="4.3478%" y="1221" width="0.1610%" height="15" fill="rgb(232,23,21)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1231.50"></text></g><g><title>mach_o::Header::hasCodeSignature(unsigned int&amp;, unsigned int&amp;) const (1 samples, 0.16%)</title><rect x="4.3478%" y="1205" width="0.1610%" height="15" fill="rgb(244,5,23)" fg:x="27" fg:w="1"/><text x="4.5978%" y="1215.50"></text></g><g><title>dyld4::prepare(dyld4::APIs&amp;, mach_o::Header const*) (27 samples, 4.35%)</title><rect x="0.3221%" y="1413" width="4.3478%" height="15" fill="rgb(226,81,46)" fg:x="2" fg:w="27"/><text x="0.5721%" y="1423.50">dyld4..</text></g><g><title>dyld4::RuntimeState::notifyDebuggerLoad(std::__1::span&lt;dyld4::Loader const*, 18446744073709551615ul&gt; const&amp;) (1 samples, 0.16%)</title><rect x="4.5089%" y="1397" width="0.1610%" height="15" fill="rgb(247,70,30)" fg:x="28" fg:w="1"/><text x="4.7589%" y="1407.50"></text></g><g><title>dyld4::ExternallyViewableState::addImages(lsl::Allocator&amp;, lsl::Allocator&amp;, std::__1::span&lt;dyld4::ExternallyViewableState::ImageInfo, 18446744073709551615ul&gt; const&amp;) (1 samples, 0.16%)</title><rect x="4.5089%" y="1381" width="0.1610%" height="15" fill="rgb(212,68,19)" fg:x="28" fg:w="1"/><text x="4.7589%" y="1391.50"></text></g><g><title>dyld4::ExternallyViewableState::activateAtlas(lsl::Allocator&amp;, ByteStream&amp;) (1 samples, 0.16%)</title><rect x="4.5089%" y="1365" width="0.1610%" height="15" fill="rgb(240,187,13)" fg:x="28" fg:w="1"/><text x="4.7589%" y="1375.50"></text></g><g><title>lsl::Allocator::aligned_alloc(unsigned long long, unsigned long long) (1 samples, 0.16%)</title><rect x="4.5089%" y="1349" width="0.1610%" height="15" fill="rgb(223,113,26)" fg:x="28" fg:w="1"/><text x="4.7589%" y="1359.50"></text></g><g><title>lsl::Allocator::Pool::aligned_alloc_best_fit(unsigned long long, unsigned long long) (1 samples, 0.16%)</title><rect x="4.5089%" y="1333" width="0.1610%" height="15" fill="rgb(206,192,2)" fg:x="28" fg:w="1"/><text x="4.7589%" y="1343.50"></text></g><g><title>&lt;tola::cli::Cli as clap_builder::derive::CommandFactory&gt;::command (1 samples, 0.16%)</title><rect x="4.6699%" y="1381" width="0.1610%" height="15" fill="rgb(241,108,4)" fg:x="29" fg:w="1"/><text x="4.9199%" y="1391.50"></text></g><g><title>&lt;tola::cli::Cli as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.16%)</title><rect x="4.6699%" y="1365" width="0.1610%" height="15" fill="rgb(247,173,49)" fg:x="29" fg:w="1"/><text x="4.9199%" y="1375.50"></text></g><g><title>start (31 samples, 4.99%)</title><rect x="0.0000%" y="1429" width="4.9919%" height="15" fill="rgb(224,114,35)" fg:x="0" fg:w="31"/><text x="0.2500%" y="1439.50">start</text></g><g><title>main (2 samples, 0.32%)</title><rect x="4.6699%" y="1413" width="0.3221%" height="15" fill="rgb(245,159,27)" fg:x="29" fg:w="2"/><text x="4.9199%" y="1423.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.32%)</title><rect x="4.6699%" y="1397" width="0.3221%" height="15" fill="rgb(245,172,44)" fg:x="29" fg:w="2"/><text x="4.9199%" y="1407.50"></text></g><g><title>tola::config::SiteConfig::validate (1 samples, 0.16%)</title><rect x="4.8309%" y="1381" width="0.1610%" height="15" fill="rgb(236,23,11)" fg:x="30" fg:w="1"/><text x="5.0809%" y="1391.50"></text></g><g><title>std::fs::metadata (1 samples, 0.16%)</title><rect x="4.8309%" y="1365" width="0.1610%" height="15" fill="rgb(205,117,38)" fg:x="30" fg:w="1"/><text x="5.0809%" y="1375.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="4.8309%" y="1349" width="0.1610%" height="15" fill="rgb(237,72,25)" fg:x="30" fg:w="1"/><text x="5.0809%" y="1359.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="4.9919%" y="1253" width="0.1610%" height="15" fill="rgb(244,70,9)" fg:x="31" fg:w="1"/><text x="5.2419%" y="1263.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="4.9919%" y="1237" width="0.1610%" height="15" fill="rgb(217,125,39)" fg:x="31" fg:w="1"/><text x="5.2419%" y="1247.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="4.9919%" y="1221" width="0.1610%" height="15" fill="rgb(235,36,10)" fg:x="31" fg:w="1"/><text x="5.2419%" y="1231.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="4.9919%" y="1205" width="0.1610%" height="15" fill="rgb(251,123,47)" fg:x="31" fg:w="1"/><text x="5.2419%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.1530%" y="1109" width="0.1610%" height="15" fill="rgb(221,13,13)" fg:x="32" fg:w="1"/><text x="5.4030%" y="1119.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="5.1530%" y="1093" width="0.1610%" height="15" fill="rgb(238,131,9)" fg:x="32" fg:w="1"/><text x="5.4030%" y="1103.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="5.1530%" y="1077" width="0.1610%" height="15" fill="rgb(211,50,8)" fg:x="32" fg:w="1"/><text x="5.4030%" y="1087.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="5.1530%" y="1061" width="0.1610%" height="15" fill="rgb(245,182,24)" fg:x="32" fg:w="1"/><text x="5.4030%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.3140%" y="917" width="0.1610%" height="15" fill="rgb(242,14,37)" fg:x="33" fg:w="1"/><text x="5.5640%" y="927.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="5.3140%" y="901" width="0.1610%" height="15" fill="rgb(246,228,12)" fg:x="33" fg:w="1"/><text x="5.5640%" y="911.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="5.3140%" y="885" width="0.1610%" height="15" fill="rgb(213,55,15)" fg:x="33" fg:w="1"/><text x="5.5640%" y="895.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="5.3140%" y="869" width="0.1610%" height="15" fill="rgb(209,9,3)" fg:x="33" fg:w="1"/><text x="5.5640%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.4750%" y="789" width="0.1610%" height="15" fill="rgb(230,59,30)" fg:x="34" fg:w="1"/><text x="5.7250%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.4750%" y="773" width="0.1610%" height="15" fill="rgb(209,121,21)" fg:x="34" fg:w="1"/><text x="5.7250%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.4750%" y="757" width="0.1610%" height="15" fill="rgb(220,109,13)" fg:x="34" fg:w="1"/><text x="5.7250%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.4750%" y="741" width="0.1610%" height="15" fill="rgb(232,18,1)" fg:x="34" fg:w="1"/><text x="5.7250%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.4750%" y="725" width="0.1610%" height="15" fill="rgb(215,41,42)" fg:x="34" fg:w="1"/><text x="5.7250%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.4750%" y="709" width="0.1610%" height="15" fill="rgb(224,123,36)" fg:x="34" fg:w="1"/><text x="5.7250%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.4750%" y="693" width="0.1610%" height="15" fill="rgb(240,125,3)" fg:x="34" fg:w="1"/><text x="5.7250%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.4750%" y="677" width="0.1610%" height="15" fill="rgb(205,98,50)" fg:x="34" fg:w="1"/><text x="5.7250%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.4750%" y="661" width="0.1610%" height="15" fill="rgb(205,185,37)" fg:x="34" fg:w="1"/><text x="5.7250%" y="671.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="5.4750%" y="645" width="0.1610%" height="15" fill="rgb(238,207,15)" fg:x="34" fg:w="1"/><text x="5.7250%" y="655.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="5.4750%" y="629" width="0.1610%" height="15" fill="rgb(213,199,42)" fg:x="34" fg:w="1"/><text x="5.7250%" y="639.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="5.4750%" y="613" width="0.1610%" height="15" fill="rgb(235,201,11)" fg:x="34" fg:w="1"/><text x="5.7250%" y="623.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.64%)</title><rect x="5.1530%" y="1205" width="0.6441%" height="15" fill="rgb(207,46,11)" fg:x="32" fg:w="4"/><text x="5.4030%" y="1215.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (4 samples, 0.64%)</title><rect x="5.1530%" y="1189" width="0.6441%" height="15" fill="rgb(241,35,35)" fg:x="32" fg:w="4"/><text x="5.4030%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (4 samples, 0.64%)</title><rect x="5.1530%" y="1173" width="0.6441%" height="15" fill="rgb(243,32,47)" fg:x="32" fg:w="4"/><text x="5.4030%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.64%)</title><rect x="5.1530%" y="1157" width="0.6441%" height="15" fill="rgb(247,202,23)" fg:x="32" fg:w="4"/><text x="5.4030%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 0.64%)</title><rect x="5.1530%" y="1141" width="0.6441%" height="15" fill="rgb(219,102,11)" fg:x="32" fg:w="4"/><text x="5.4030%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.64%)</title><rect x="5.1530%" y="1125" width="0.6441%" height="15" fill="rgb(243,110,44)" fg:x="32" fg:w="4"/><text x="5.4030%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="5.3140%" y="1109" width="0.4831%" height="15" fill="rgb(222,74,54)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1119.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="5.3140%" y="1093" width="0.4831%" height="15" fill="rgb(216,99,12)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="5.3140%" y="1077" width="0.4831%" height="15" fill="rgb(226,22,26)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="5.3140%" y="1061" width="0.4831%" height="15" fill="rgb(217,163,10)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="5.3140%" y="1045" width="0.4831%" height="15" fill="rgb(213,25,53)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1055.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="5.3140%" y="1029" width="0.4831%" height="15" fill="rgb(252,105,26)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="5.3140%" y="1013" width="0.4831%" height="15" fill="rgb(220,39,43)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1023.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="5.3140%" y="997" width="0.4831%" height="15" fill="rgb(229,68,48)" fg:x="33" fg:w="3"/><text x="5.5640%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="5.3140%" y="981" width="0.4831%" height="15" fill="rgb(252,8,32)" fg:x="33" fg:w="3"/><text x="5.5640%" y="991.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="5.3140%" y="965" width="0.4831%" height="15" fill="rgb(223,20,43)" fg:x="33" fg:w="3"/><text x="5.5640%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="5.3140%" y="949" width="0.4831%" height="15" fill="rgb(229,81,49)" fg:x="33" fg:w="3"/><text x="5.5640%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="5.3140%" y="933" width="0.4831%" height="15" fill="rgb(236,28,36)" fg:x="33" fg:w="3"/><text x="5.5640%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="5.4750%" y="917" width="0.3221%" height="15" fill="rgb(249,185,26)" fg:x="34" fg:w="2"/><text x="5.7250%" y="927.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="5.4750%" y="901" width="0.3221%" height="15" fill="rgb(249,174,33)" fg:x="34" fg:w="2"/><text x="5.7250%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.4750%" y="885" width="0.3221%" height="15" fill="rgb(233,201,37)" fg:x="34" fg:w="2"/><text x="5.7250%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.4750%" y="869" width="0.3221%" height="15" fill="rgb(221,78,26)" fg:x="34" fg:w="2"/><text x="5.7250%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="5.4750%" y="853" width="0.3221%" height="15" fill="rgb(250,127,30)" fg:x="34" fg:w="2"/><text x="5.7250%" y="863.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="5.4750%" y="837" width="0.3221%" height="15" fill="rgb(230,49,44)" fg:x="34" fg:w="2"/><text x="5.7250%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.4750%" y="821" width="0.3221%" height="15" fill="rgb(229,67,23)" fg:x="34" fg:w="2"/><text x="5.7250%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.4750%" y="805" width="0.3221%" height="15" fill="rgb(249,83,47)" fg:x="34" fg:w="2"/><text x="5.7250%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="5.6361%" y="789" width="0.1610%" height="15" fill="rgb(215,43,3)" fg:x="35" fg:w="1"/><text x="5.8861%" y="799.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="5.6361%" y="773" width="0.1610%" height="15" fill="rgb(238,154,13)" fg:x="35" fg:w="1"/><text x="5.8861%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.6361%" y="757" width="0.1610%" height="15" fill="rgb(219,56,2)" fg:x="35" fg:w="1"/><text x="5.8861%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.6361%" y="741" width="0.1610%" height="15" fill="rgb(233,0,4)" fg:x="35" fg:w="1"/><text x="5.8861%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.6361%" y="725" width="0.1610%" height="15" fill="rgb(235,30,7)" fg:x="35" fg:w="1"/><text x="5.8861%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.6361%" y="709" width="0.1610%" height="15" fill="rgb(250,79,13)" fg:x="35" fg:w="1"/><text x="5.8861%" y="719.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="5.6361%" y="693" width="0.1610%" height="15" fill="rgb(211,146,34)" fg:x="35" fg:w="1"/><text x="5.8861%" y="703.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="5.6361%" y="677" width="0.1610%" height="15" fill="rgb(228,22,38)" fg:x="35" fg:w="1"/><text x="5.8861%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.6361%" y="661" width="0.1610%" height="15" fill="rgb(235,168,5)" fg:x="35" fg:w="1"/><text x="5.8861%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.6361%" y="645" width="0.1610%" height="15" fill="rgb(221,155,16)" fg:x="35" fg:w="1"/><text x="5.8861%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.6361%" y="629" width="0.1610%" height="15" fill="rgb(215,215,53)" fg:x="35" fg:w="1"/><text x="5.8861%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.6361%" y="613" width="0.1610%" height="15" fill="rgb(223,4,10)" fg:x="35" fg:w="1"/><text x="5.8861%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.6361%" y="597" width="0.1610%" height="15" fill="rgb(234,103,6)" fg:x="35" fg:w="1"/><text x="5.8861%" y="607.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="5.6361%" y="581" width="0.1610%" height="15" fill="rgb(227,97,0)" fg:x="35" fg:w="1"/><text x="5.8861%" y="591.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="5.6361%" y="565" width="0.1610%" height="15" fill="rgb(234,150,53)" fg:x="35" fg:w="1"/><text x="5.8861%" y="575.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="5.6361%" y="549" width="0.1610%" height="15" fill="rgb(228,201,54)" fg:x="35" fg:w="1"/><text x="5.8861%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.7971%" y="789" width="0.1610%" height="15" fill="rgb(222,22,37)" fg:x="36" fg:w="1"/><text x="6.0471%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.7971%" y="773" width="0.1610%" height="15" fill="rgb(237,53,32)" fg:x="36" fg:w="1"/><text x="6.0471%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.7971%" y="757" width="0.1610%" height="15" fill="rgb(233,25,53)" fg:x="36" fg:w="1"/><text x="6.0471%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.7971%" y="741" width="0.1610%" height="15" fill="rgb(210,40,34)" fg:x="36" fg:w="1"/><text x="6.0471%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.7971%" y="725" width="0.1610%" height="15" fill="rgb(241,220,44)" fg:x="36" fg:w="1"/><text x="6.0471%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.7971%" y="709" width="0.1610%" height="15" fill="rgb(235,28,35)" fg:x="36" fg:w="1"/><text x="6.0471%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.7971%" y="693" width="0.1610%" height="15" fill="rgb(210,56,17)" fg:x="36" fg:w="1"/><text x="6.0471%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.7971%" y="677" width="0.1610%" height="15" fill="rgb(224,130,29)" fg:x="36" fg:w="1"/><text x="6.0471%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.7971%" y="661" width="0.1610%" height="15" fill="rgb(235,212,8)" fg:x="36" fg:w="1"/><text x="6.0471%" y="671.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="5.7971%" y="645" width="0.1610%" height="15" fill="rgb(223,33,50)" fg:x="36" fg:w="1"/><text x="6.0471%" y="655.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="5.7971%" y="629" width="0.1610%" height="15" fill="rgb(219,149,13)" fg:x="36" fg:w="1"/><text x="6.0471%" y="639.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="5.7971%" y="613" width="0.1610%" height="15" fill="rgb(250,156,29)" fg:x="36" fg:w="1"/><text x="6.0471%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="1157" width="0.3221%" height="15" fill="rgb(216,193,19)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1167.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.32%)</title><rect x="5.7971%" y="1141" width="0.3221%" height="15" fill="rgb(216,135,14)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1151.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="1125" width="0.3221%" height="15" fill="rgb(241,47,5)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (2 samples, 0.32%)</title><rect x="5.7971%" y="1109" width="0.3221%" height="15" fill="rgb(233,42,35)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.7971%" y="1093" width="0.3221%" height="15" fill="rgb(231,13,6)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="1077" width="0.3221%" height="15" fill="rgb(207,181,40)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.7971%" y="1061" width="0.3221%" height="15" fill="rgb(254,173,49)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1071.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="5.7971%" y="1045" width="0.3221%" height="15" fill="rgb(221,1,38)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1055.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="5.7971%" y="1029" width="0.3221%" height="15" fill="rgb(206,124,46)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="1013" width="0.3221%" height="15" fill="rgb(249,21,11)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1023.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.7971%" y="997" width="0.3221%" height="15" fill="rgb(222,201,40)" fg:x="36" fg:w="2"/><text x="6.0471%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="5.7971%" y="981" width="0.3221%" height="15" fill="rgb(235,61,29)" fg:x="36" fg:w="2"/><text x="6.0471%" y="991.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="5.7971%" y="965" width="0.3221%" height="15" fill="rgb(219,207,3)" fg:x="36" fg:w="2"/><text x="6.0471%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="949" width="0.3221%" height="15" fill="rgb(222,56,46)" fg:x="36" fg:w="2"/><text x="6.0471%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.7971%" y="933" width="0.3221%" height="15" fill="rgb(239,76,54)" fg:x="36" fg:w="2"/><text x="6.0471%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="5.7971%" y="917" width="0.3221%" height="15" fill="rgb(231,124,27)" fg:x="36" fg:w="2"/><text x="6.0471%" y="927.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="5.7971%" y="901" width="0.3221%" height="15" fill="rgb(249,195,6)" fg:x="36" fg:w="2"/><text x="6.0471%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="885" width="0.3221%" height="15" fill="rgb(237,174,47)" fg:x="36" fg:w="2"/><text x="6.0471%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.7971%" y="869" width="0.3221%" height="15" fill="rgb(206,201,31)" fg:x="36" fg:w="2"/><text x="6.0471%" y="879.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="5.7971%" y="853" width="0.3221%" height="15" fill="rgb(231,57,52)" fg:x="36" fg:w="2"/><text x="6.0471%" y="863.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="5.7971%" y="837" width="0.3221%" height="15" fill="rgb(248,177,22)" fg:x="36" fg:w="2"/><text x="6.0471%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="5.7971%" y="821" width="0.3221%" height="15" fill="rgb(215,211,37)" fg:x="36" fg:w="2"/><text x="6.0471%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="5.7971%" y="805" width="0.3221%" height="15" fill="rgb(241,128,51)" fg:x="36" fg:w="2"/><text x="6.0471%" y="815.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="5.9581%" y="789" width="0.1610%" height="15" fill="rgb(227,165,31)" fg:x="37" fg:w="1"/><text x="6.2081%" y="799.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="5.9581%" y="773" width="0.1610%" height="15" fill="rgb(228,167,24)" fg:x="37" fg:w="1"/><text x="6.2081%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.9581%" y="757" width="0.1610%" height="15" fill="rgb(228,143,12)" fg:x="37" fg:w="1"/><text x="6.2081%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.9581%" y="741" width="0.1610%" height="15" fill="rgb(249,149,8)" fg:x="37" fg:w="1"/><text x="6.2081%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.9581%" y="725" width="0.1610%" height="15" fill="rgb(243,35,44)" fg:x="37" fg:w="1"/><text x="6.2081%" y="735.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.9581%" y="709" width="0.1610%" height="15" fill="rgb(246,89,9)" fg:x="37" fg:w="1"/><text x="6.2081%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.9581%" y="693" width="0.1610%" height="15" fill="rgb(233,213,13)" fg:x="37" fg:w="1"/><text x="6.2081%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="5.9581%" y="677" width="0.1610%" height="15" fill="rgb(233,141,41)" fg:x="37" fg:w="1"/><text x="6.2081%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="5.9581%" y="661" width="0.1610%" height="15" fill="rgb(239,167,4)" fg:x="37" fg:w="1"/><text x="6.2081%" y="671.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="5.9581%" y="645" width="0.1610%" height="15" fill="rgb(209,217,16)" fg:x="37" fg:w="1"/><text x="6.2081%" y="655.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="5.9581%" y="629" width="0.1610%" height="15" fill="rgb(219,88,35)" fg:x="37" fg:w="1"/><text x="6.2081%" y="639.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="5.9581%" y="613" width="0.1610%" height="15" fill="rgb(220,193,23)" fg:x="37" fg:w="1"/><text x="6.2081%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.1192%" y="997" width="0.1610%" height="15" fill="rgb(230,90,52)" fg:x="38" fg:w="1"/><text x="6.3692%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.1192%" y="981" width="0.1610%" height="15" fill="rgb(252,106,19)" fg:x="38" fg:w="1"/><text x="6.3692%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.1192%" y="965" width="0.1610%" height="15" fill="rgb(206,74,20)" fg:x="38" fg:w="1"/><text x="6.3692%" y="975.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="6.1192%" y="949" width="0.1610%" height="15" fill="rgb(230,138,44)" fg:x="38" fg:w="1"/><text x="6.3692%" y="959.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="6.1192%" y="933" width="0.1610%" height="15" fill="rgb(235,182,43)" fg:x="38" fg:w="1"/><text x="6.3692%" y="943.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="6.1192%" y="917" width="0.1610%" height="15" fill="rgb(242,16,51)" fg:x="38" fg:w="1"/><text x="6.3692%" y="927.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 1.45%)</title><rect x="4.9919%" y="1317" width="1.4493%" height="15" fill="rgb(248,9,4)" fg:x="31" fg:w="9"/><text x="5.2419%" y="1327.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (9 samples, 1.45%)</title><rect x="4.9919%" y="1301" width="1.4493%" height="15" fill="rgb(210,31,22)" fg:x="31" fg:w="9"/><text x="5.2419%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (9 samples, 1.45%)</title><rect x="4.9919%" y="1285" width="1.4493%" height="15" fill="rgb(239,54,39)" fg:x="31" fg:w="9"/><text x="5.2419%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 1.45%)</title><rect x="4.9919%" y="1269" width="1.4493%" height="15" fill="rgb(230,99,41)" fg:x="31" fg:w="9"/><text x="5.2419%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (8 samples, 1.29%)</title><rect x="5.1530%" y="1253" width="1.2882%" height="15" fill="rgb(253,106,12)" fg:x="32" fg:w="8"/><text x="5.4030%" y="1263.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 1.29%)</title><rect x="5.1530%" y="1237" width="1.2882%" height="15" fill="rgb(213,46,41)" fg:x="32" fg:w="8"/><text x="5.4030%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (8 samples, 1.29%)</title><rect x="5.1530%" y="1221" width="1.2882%" height="15" fill="rgb(215,133,35)" fg:x="32" fg:w="8"/><text x="5.4030%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.64%)</title><rect x="5.7971%" y="1205" width="0.6441%" height="15" fill="rgb(213,28,5)" fg:x="36" fg:w="4"/><text x="6.0471%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 0.64%)</title><rect x="5.7971%" y="1189" width="0.6441%" height="15" fill="rgb(215,77,49)" fg:x="36" fg:w="4"/><text x="6.0471%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.64%)</title><rect x="5.7971%" y="1173" width="0.6441%" height="15" fill="rgb(248,100,22)" fg:x="36" fg:w="4"/><text x="6.0471%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="6.1192%" y="1157" width="0.3221%" height="15" fill="rgb(208,67,9)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1167.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="6.1192%" y="1141" width="0.3221%" height="15" fill="rgb(219,133,21)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.1192%" y="1125" width="0.3221%" height="15" fill="rgb(246,46,29)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.1192%" y="1109" width="0.3221%" height="15" fill="rgb(246,185,52)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.1192%" y="1093" width="0.3221%" height="15" fill="rgb(252,136,11)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.1192%" y="1077" width="0.3221%" height="15" fill="rgb(219,138,53)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.1192%" y="1061" width="0.3221%" height="15" fill="rgb(211,51,23)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.1192%" y="1045" width="0.3221%" height="15" fill="rgb(247,221,28)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.1192%" y="1029" width="0.3221%" height="15" fill="rgb(251,222,45)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.1192%" y="1013" width="0.3221%" height="15" fill="rgb(217,162,53)" fg:x="38" fg:w="2"/><text x="6.3692%" y="1023.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="6.2802%" y="997" width="0.1610%" height="15" fill="rgb(229,93,14)" fg:x="39" fg:w="1"/><text x="6.5302%" y="1007.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="6.2802%" y="981" width="0.1610%" height="15" fill="rgb(209,67,49)" fg:x="39" fg:w="1"/><text x="6.5302%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.2802%" y="965" width="0.1610%" height="15" fill="rgb(213,87,29)" fg:x="39" fg:w="1"/><text x="6.5302%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.2802%" y="949" width="0.1610%" height="15" fill="rgb(205,151,52)" fg:x="39" fg:w="1"/><text x="6.5302%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.2802%" y="933" width="0.1610%" height="15" fill="rgb(253,215,39)" fg:x="39" fg:w="1"/><text x="6.5302%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.2802%" y="917" width="0.1610%" height="15" fill="rgb(221,220,41)" fg:x="39" fg:w="1"/><text x="6.5302%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.2802%" y="901" width="0.1610%" height="15" fill="rgb(218,133,21)" fg:x="39" fg:w="1"/><text x="6.5302%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.2802%" y="885" width="0.1610%" height="15" fill="rgb(221,193,43)" fg:x="39" fg:w="1"/><text x="6.5302%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.2802%" y="869" width="0.1610%" height="15" fill="rgb(240,128,52)" fg:x="39" fg:w="1"/><text x="6.5302%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.2802%" y="853" width="0.1610%" height="15" fill="rgb(253,114,12)" fg:x="39" fg:w="1"/><text x="6.5302%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.2802%" y="837" width="0.1610%" height="15" fill="rgb(215,223,47)" fg:x="39" fg:w="1"/><text x="6.5302%" y="847.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="6.2802%" y="821" width="0.1610%" height="15" fill="rgb(248,225,23)" fg:x="39" fg:w="1"/><text x="6.5302%" y="831.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="6.2802%" y="805" width="0.1610%" height="15" fill="rgb(250,108,0)" fg:x="39" fg:w="1"/><text x="6.5302%" y="815.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="6.2802%" y="789" width="0.1610%" height="15" fill="rgb(228,208,7)" fg:x="39" fg:w="1"/><text x="6.5302%" y="799.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="6.4412%" y="869" width="0.1610%" height="15" fill="rgb(244,45,10)" fg:x="40" fg:w="1"/><text x="6.6912%" y="879.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="6.4412%" y="853" width="0.1610%" height="15" fill="rgb(207,125,25)" fg:x="40" fg:w="1"/><text x="6.6912%" y="863.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="6.4412%" y="837" width="0.1610%" height="15" fill="rgb(210,195,18)" fg:x="40" fg:w="1"/><text x="6.6912%" y="847.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.32%)</title><rect x="6.4412%" y="1285" width="0.3221%" height="15" fill="rgb(249,80,12)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1295.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="1269" width="0.3221%" height="15" fill="rgb(221,65,9)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (2 samples, 0.32%)</title><rect x="6.4412%" y="1253" width="0.3221%" height="15" fill="rgb(235,49,36)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="1237" width="0.3221%" height="15" fill="rgb(225,32,20)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="1221" width="0.3221%" height="15" fill="rgb(215,141,46)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="1205" width="0.3221%" height="15" fill="rgb(250,160,47)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="1189" width="0.3221%" height="15" fill="rgb(216,222,40)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="1173" width="0.3221%" height="15" fill="rgb(234,217,39)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="6.4412%" y="1157" width="0.3221%" height="15" fill="rgb(207,178,40)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1167.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="6.4412%" y="1141" width="0.3221%" height="15" fill="rgb(221,136,13)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="1125" width="0.3221%" height="15" fill="rgb(249,199,10)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1135.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.32%)</title><rect x="6.4412%" y="1109" width="0.3221%" height="15" fill="rgb(249,222,13)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1119.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="1093" width="0.3221%" height="15" fill="rgb(244,185,38)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (2 samples, 0.32%)</title><rect x="6.4412%" y="1077" width="0.3221%" height="15" fill="rgb(236,202,9)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="1061" width="0.3221%" height="15" fill="rgb(250,229,37)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="1045" width="0.3221%" height="15" fill="rgb(206,174,23)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="1029" width="0.3221%" height="15" fill="rgb(211,33,43)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1039.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="6.4412%" y="1013" width="0.3221%" height="15" fill="rgb(245,58,50)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1023.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="6.4412%" y="997" width="0.3221%" height="15" fill="rgb(244,68,36)" fg:x="40" fg:w="2"/><text x="6.6912%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="981" width="0.3221%" height="15" fill="rgb(232,229,15)" fg:x="40" fg:w="2"/><text x="6.6912%" y="991.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="965" width="0.3221%" height="15" fill="rgb(254,30,23)" fg:x="40" fg:w="2"/><text x="6.6912%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="949" width="0.3221%" height="15" fill="rgb(235,160,14)" fg:x="40" fg:w="2"/><text x="6.6912%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="6.4412%" y="933" width="0.3221%" height="15" fill="rgb(212,155,44)" fg:x="40" fg:w="2"/><text x="6.6912%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="6.4412%" y="917" width="0.3221%" height="15" fill="rgb(226,2,50)" fg:x="40" fg:w="2"/><text x="6.6912%" y="927.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="6.4412%" y="901" width="0.3221%" height="15" fill="rgb(234,177,6)" fg:x="40" fg:w="2"/><text x="6.6912%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="6.4412%" y="885" width="0.3221%" height="15" fill="rgb(217,24,9)" fg:x="40" fg:w="2"/><text x="6.6912%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.6023%" y="869" width="0.1610%" height="15" fill="rgb(220,13,46)" fg:x="41" fg:w="1"/><text x="6.8523%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.6023%" y="853" width="0.1610%" height="15" fill="rgb(239,221,27)" fg:x="41" fg:w="1"/><text x="6.8523%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.6023%" y="837" width="0.1610%" height="15" fill="rgb(222,198,25)" fg:x="41" fg:w="1"/><text x="6.8523%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.6023%" y="821" width="0.1610%" height="15" fill="rgb(211,99,13)" fg:x="41" fg:w="1"/><text x="6.8523%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.6023%" y="805" width="0.1610%" height="15" fill="rgb(232,111,31)" fg:x="41" fg:w="1"/><text x="6.8523%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.6023%" y="789" width="0.1610%" height="15" fill="rgb(245,82,37)" fg:x="41" fg:w="1"/><text x="6.8523%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="6.6023%" y="773" width="0.1610%" height="15" fill="rgb(227,149,46)" fg:x="41" fg:w="1"/><text x="6.8523%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="6.6023%" y="757" width="0.1610%" height="15" fill="rgb(218,36,50)" fg:x="41" fg:w="1"/><text x="6.8523%" y="767.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="6.6023%" y="741" width="0.1610%" height="15" fill="rgb(226,80,48)" fg:x="41" fg:w="1"/><text x="6.8523%" y="751.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="6.6023%" y="725" width="0.1610%" height="15" fill="rgb(238,224,15)" fg:x="41" fg:w="1"/><text x="6.8523%" y="735.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="6.6023%" y="709" width="0.1610%" height="15" fill="rgb(241,136,10)" fg:x="41" fg:w="1"/><text x="6.8523%" y="719.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="6.7633%" y="1253" width="0.1610%" height="15" fill="rgb(208,32,45)" fg:x="42" fg:w="1"/><text x="7.0133%" y="1263.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="6.7633%" y="1237" width="0.1610%" height="15" fill="rgb(207,135,9)" fg:x="42" fg:w="1"/><text x="7.0133%" y="1247.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="6.7633%" y="1221" width="0.1610%" height="15" fill="rgb(206,86,44)" fg:x="42" fg:w="1"/><text x="7.0133%" y="1231.50"></text></g><g><title>mkdir (1 samples, 0.16%)</title><rect x="6.9243%" y="1125" width="0.1610%" height="15" fill="rgb(245,177,15)" fg:x="43" fg:w="1"/><text x="7.1743%" y="1135.50"></text></g><g><title>std::fs::DirBuilder::create (2 samples, 0.32%)</title><rect x="6.9243%" y="1141" width="0.3221%" height="15" fill="rgb(206,64,50)" fg:x="43" fg:w="2"/><text x="7.1743%" y="1151.50"></text></g><g><title>std::fs::DirBuilder::create_dir_all (1 samples, 0.16%)</title><rect x="7.0853%" y="1125" width="0.1610%" height="15" fill="rgb(234,36,40)" fg:x="44" fg:w="1"/><text x="7.3353%" y="1135.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="7.0853%" y="1109" width="0.1610%" height="15" fill="rgb(213,64,8)" fg:x="44" fg:w="1"/><text x="7.3353%" y="1119.50"></text></g><g><title>close (1 samples, 0.16%)</title><rect x="7.2464%" y="1125" width="0.1610%" height="15" fill="rgb(210,75,36)" fg:x="45" fg:w="1"/><text x="7.4964%" y="1135.50"></text></g><g><title>fclonefileat (113 samples, 18.20%)</title><rect x="7.4074%" y="1125" width="18.1965%" height="15" fill="rgb(229,88,21)" fg:x="46" fg:w="113"/><text x="7.6574%" y="1135.50">fclonefileat</text></g><g><title>std::fs::copy (147 samples, 23.67%)</title><rect x="7.2464%" y="1141" width="23.6715%" height="15" fill="rgb(252,204,47)" fg:x="45" fg:w="147"/><text x="7.4964%" y="1151.50">std::fs::copy</text></g><g><title>std::fs::OpenOptions::open (33 samples, 5.31%)</title><rect x="25.6039%" y="1125" width="5.3140%" height="15" fill="rgb(208,77,27)" fg:x="159" fg:w="33"/><text x="25.8539%" y="1135.50">std::fs..</text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (33 samples, 5.31%)</title><rect x="25.6039%" y="1109" width="5.3140%" height="15" fill="rgb(221,76,26)" fg:x="159" fg:w="33"/><text x="25.8539%" y="1119.50">std::sy..</text></g><g><title>__open (33 samples, 5.31%)</title><rect x="25.6039%" y="1093" width="5.3140%" height="15" fill="rgb(225,139,18)" fg:x="159" fg:w="33"/><text x="25.8539%" y="1103.50">__open</text></g><g><title>std::fs::remove_file (45 samples, 7.25%)</title><rect x="30.9179%" y="1141" width="7.2464%" height="15" fill="rgb(230,137,11)" fg:x="192" fg:w="45"/><text x="31.1679%" y="1151.50">std::fs::r..</text></g><g><title>std::sys::fs::unix::unlink (45 samples, 7.25%)</title><rect x="30.9179%" y="1125" width="7.2464%" height="15" fill="rgb(212,28,1)" fg:x="192" fg:w="45"/><text x="31.1679%" y="1135.50">std::sys::..</text></g><g><title>__unlink (45 samples, 7.25%)</title><rect x="30.9179%" y="1109" width="7.2464%" height="15" fill="rgb(248,164,17)" fg:x="192" fg:w="45"/><text x="31.1679%" y="1119.50">__unlink</text></g><g><title>std::fs::OpenOptions::open (14 samples, 2.25%)</title><rect x="38.1643%" y="1125" width="2.2544%" height="15" fill="rgb(222,171,42)" fg:x="237" fg:w="14"/><text x="38.4143%" y="1135.50">s..</text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (14 samples, 2.25%)</title><rect x="38.1643%" y="1109" width="2.2544%" height="15" fill="rgb(243,84,45)" fg:x="237" fg:w="14"/><text x="38.4143%" y="1119.50">s..</text></g><g><title>__open (14 samples, 2.25%)</title><rect x="38.1643%" y="1093" width="2.2544%" height="15" fill="rgb(252,49,23)" fg:x="237" fg:w="14"/><text x="38.4143%" y="1103.50">_..</text></g><g><title>tola::utils::build::process_asset (15 samples, 2.42%)</title><rect x="38.1643%" y="1141" width="2.4155%" height="15" fill="rgb(215,19,7)" fg:x="237" fg:w="15"/><text x="38.4143%" y="1151.50">to..</text></g><g><title>tola::utils::log::log (1 samples, 0.16%)</title><rect x="40.4187%" y="1125" width="0.1610%" height="15" fill="rgb(238,81,41)" fg:x="251" fg:w="1"/><text x="40.6687%" y="1135.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.16%)</title><rect x="40.4187%" y="1109" width="0.1610%" height="15" fill="rgb(210,199,37)" fg:x="251" fg:w="1"/><text x="40.6687%" y="1119.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.16%)</title><rect x="40.4187%" y="1093" width="0.1610%" height="15" fill="rgb(244,192,49)" fg:x="251" fg:w="1"/><text x="40.6687%" y="1103.50"></text></g><g><title>__psynch_mutexwait (1 samples, 0.16%)</title><rect x="40.4187%" y="1077" width="0.1610%" height="15" fill="rgb(226,211,11)" fg:x="251" fg:w="1"/><text x="40.6687%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (212 samples, 34.14%)</title><rect x="6.9243%" y="1173" width="34.1385%" height="15" fill="rgb(236,162,54)" fg:x="43" fg:w="212"/><text x="7.1743%" y="1183.50">rayon::iter::plumbing::bridge_producer_consumer::helper..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (212 samples, 34.14%)</title><rect x="6.9243%" y="1157" width="34.1385%" height="15" fill="rgb(220,229,9)" fg:x="43" fg:w="212"/><text x="7.1743%" y="1167.50">tola::build::build_site::_{{closure}}::_{{closure}}::_{..</text></g><g><title>tola::utils::build::process_content (3 samples, 0.48%)</title><rect x="40.5797%" y="1141" width="0.4831%" height="15" fill="rgb(250,87,22)" fg:x="252" fg:w="3"/><text x="40.8297%" y="1151.50"></text></g><g><title>tola::utils::command::run_command (3 samples, 0.48%)</title><rect x="40.5797%" y="1125" width="0.4831%" height="15" fill="rgb(239,43,17)" fg:x="252" fg:w="3"/><text x="40.8297%" y="1135.50"></text></g><g><title>std::sys::process::output (3 samples, 0.48%)</title><rect x="40.5797%" y="1109" width="0.4831%" height="15" fill="rgb(231,177,25)" fg:x="252" fg:w="3"/><text x="40.8297%" y="1119.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (3 samples, 0.48%)</title><rect x="40.5797%" y="1093" width="0.4831%" height="15" fill="rgb(219,179,1)" fg:x="252" fg:w="3"/><text x="40.8297%" y="1103.50"></text></g><g><title>posix_spawnp (3 samples, 0.48%)</title><rect x="40.5797%" y="1077" width="0.4831%" height="15" fill="rgb(238,219,53)" fg:x="252" fg:w="3"/><text x="40.8297%" y="1087.50"></text></g><g><title>__posix_spawn (3 samples, 0.48%)</title><rect x="40.5797%" y="1061" width="0.4831%" height="15" fill="rgb(232,167,36)" fg:x="252" fg:w="3"/><text x="40.8297%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (213 samples, 34.30%)</title><rect x="6.9243%" y="1189" width="34.2995%" height="15" fill="rgb(244,19,51)" fg:x="43" fg:w="213"/><text x="7.1743%" y="1199.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="41.0628%" y="1173" width="0.1610%" height="15" fill="rgb(224,6,22)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1183.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="41.0628%" y="1157" width="0.1610%" height="15" fill="rgb(224,145,5)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="41.0628%" y="1141" width="0.1610%" height="15" fill="rgb(234,130,49)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="41.0628%" y="1125" width="0.1610%" height="15" fill="rgb(254,6,2)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="41.0628%" y="1109" width="0.1610%" height="15" fill="rgb(208,96,46)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="41.0628%" y="1093" width="0.1610%" height="15" fill="rgb(239,3,39)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="41.0628%" y="1077" width="0.1610%" height="15" fill="rgb(233,210,1)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1087.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="41.0628%" y="1061" width="0.1610%" height="15" fill="rgb(244,137,37)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1071.50"></text></g><g><title>std::fs::copy (1 samples, 0.16%)</title><rect x="41.0628%" y="1045" width="0.1610%" height="15" fill="rgb(240,136,2)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1055.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="41.0628%" y="1029" width="0.1610%" height="15" fill="rgb(239,18,37)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1039.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="41.0628%" y="1013" width="0.1610%" height="15" fill="rgb(218,185,22)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1023.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="41.0628%" y="997" width="0.1610%" height="15" fill="rgb(225,218,4)" fg:x="255" fg:w="1"/><text x="41.3128%" y="1007.50"></text></g><g><title>std::fs::DirBuilder::create (1 samples, 0.16%)</title><rect x="41.2238%" y="1173" width="0.1610%" height="15" fill="rgb(230,182,32)" fg:x="256" fg:w="1"/><text x="41.4738%" y="1183.50"></text></g><g><title>std::fs::DirBuilder::create_dir_all (1 samples, 0.16%)</title><rect x="41.2238%" y="1157" width="0.1610%" height="15" fill="rgb(242,56,43)" fg:x="256" fg:w="1"/><text x="41.4738%" y="1167.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="41.2238%" y="1141" width="0.1610%" height="15" fill="rgb(233,99,24)" fg:x="256" fg:w="1"/><text x="41.4738%" y="1151.50"></text></g><g><title>fclonefileat (7 samples, 1.13%)</title><rect x="41.3849%" y="1157" width="1.1272%" height="15" fill="rgb(234,209,42)" fg:x="257" fg:w="7"/><text x="41.6349%" y="1167.50"></text></g><g><title>std::fs::copy (9 samples, 1.45%)</title><rect x="41.3849%" y="1173" width="1.4493%" height="15" fill="rgb(227,7,12)" fg:x="257" fg:w="9"/><text x="41.6349%" y="1183.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.32%)</title><rect x="42.5121%" y="1157" width="0.3221%" height="15" fill="rgb(245,203,43)" fg:x="264" fg:w="2"/><text x="42.7621%" y="1167.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (2 samples, 0.32%)</title><rect x="42.5121%" y="1141" width="0.3221%" height="15" fill="rgb(238,205,33)" fg:x="264" fg:w="2"/><text x="42.7621%" y="1151.50"></text></g><g><title>__open (2 samples, 0.32%)</title><rect x="42.5121%" y="1125" width="0.3221%" height="15" fill="rgb(231,56,7)" fg:x="264" fg:w="2"/><text x="42.7621%" y="1135.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="42.8341%" y="1173" width="0.1610%" height="15" fill="rgb(244,186,29)" fg:x="266" fg:w="1"/><text x="43.0841%" y="1183.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="42.8341%" y="1157" width="0.1610%" height="15" fill="rgb(234,111,31)" fg:x="266" fg:w="1"/><text x="43.0841%" y="1167.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="42.8341%" y="1141" width="0.1610%" height="15" fill="rgb(241,149,10)" fg:x="266" fg:w="1"/><text x="43.0841%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (225 samples, 36.23%)</title><rect x="6.9243%" y="1205" width="36.2319%" height="15" fill="rgb(249,206,44)" fg:x="43" fg:w="225"/><text x="7.1743%" y="1215.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (12 samples, 1.93%)</title><rect x="41.2238%" y="1189" width="1.9324%" height="15" fill="rgb(251,153,30)" fg:x="256" fg:w="12"/><text x="41.4738%" y="1199.50">t..</text></g><g><title>tola::utils::build::process_content (1 samples, 0.16%)</title><rect x="42.9952%" y="1173" width="0.1610%" height="15" fill="rgb(239,152,38)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1183.50"></text></g><g><title>minify_html::minify (1 samples, 0.16%)</title><rect x="42.9952%" y="1157" width="0.1610%" height="15" fill="rgb(249,139,47)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1167.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="42.9952%" y="1141" width="0.1610%" height="15" fill="rgb(244,64,35)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1151.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="42.9952%" y="1125" width="0.1610%" height="15" fill="rgb(216,46,15)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1135.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="42.9952%" y="1109" width="0.1610%" height="15" fill="rgb(250,74,19)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1119.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="42.9952%" y="1093" width="0.1610%" height="15" fill="rgb(249,42,33)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1103.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="42.9952%" y="1077" width="0.1610%" height="15" fill="rgb(242,149,17)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1087.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="42.9952%" y="1061" width="0.1610%" height="15" fill="rgb(244,29,21)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1071.50"></text></g><g><title>minify_html::parse::Code::slice_and_shift_while_not_in_lookup (1 samples, 0.16%)</title><rect x="42.9952%" y="1045" width="0.1610%" height="15" fill="rgb(220,130,37)" fg:x="267" fg:w="1"/><text x="43.2452%" y="1055.50"></text></g><g><title>std::fs::canonicalize (1 samples, 0.16%)</title><rect x="43.1562%" y="981" width="0.1610%" height="15" fill="rgb(211,67,2)" fg:x="268" fg:w="1"/><text x="43.4062%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.16%)</title><rect x="43.1562%" y="965" width="0.1610%" height="15" fill="rgb(235,68,52)" fg:x="268" fg:w="1"/><text x="43.4062%" y="975.50"></text></g><g><title>std::sys::fs::unix::canonicalize (1 samples, 0.16%)</title><rect x="43.1562%" y="949" width="0.1610%" height="15" fill="rgb(246,142,3)" fg:x="268" fg:w="1"/><text x="43.4062%" y="959.50"></text></g><g><title>realpath$DARWIN_EXTSN (1 samples, 0.16%)</title><rect x="43.1562%" y="933" width="0.1610%" height="15" fill="rgb(241,25,7)" fg:x="268" fg:w="1"/><text x="43.4062%" y="943.50"></text></g><g><title>__private_getcwd (1 samples, 0.16%)</title><rect x="43.1562%" y="917" width="0.1610%" height="15" fill="rgb(242,119,39)" fg:x="268" fg:w="1"/><text x="43.4062%" y="927.50"></text></g><g><title>__getcwd (1 samples, 0.16%)</title><rect x="43.1562%" y="901" width="0.1610%" height="15" fill="rgb(241,98,45)" fg:x="268" fg:w="1"/><text x="43.4062%" y="911.50"></text></g><g><title>__open_nocancel (1 samples, 0.16%)</title><rect x="43.1562%" y="885" width="0.1610%" height="15" fill="rgb(254,28,30)" fg:x="268" fg:w="1"/><text x="43.4062%" y="895.50"></text></g><g><title>std::fs::copy (3 samples, 0.48%)</title><rect x="43.3172%" y="981" width="0.4831%" height="15" fill="rgb(241,142,54)" fg:x="269" fg:w="3"/><text x="43.5672%" y="991.50"></text></g><g><title>fclonefileat (3 samples, 0.48%)</title><rect x="43.3172%" y="965" width="0.4831%" height="15" fill="rgb(222,85,15)" fg:x="269" fg:w="3"/><text x="43.5672%" y="975.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="43.8003%" y="981" width="0.1610%" height="15" fill="rgb(210,85,47)" fg:x="272" fg:w="1"/><text x="44.0503%" y="991.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="43.8003%" y="965" width="0.1610%" height="15" fill="rgb(224,206,25)" fg:x="272" fg:w="1"/><text x="44.0503%" y="975.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="43.8003%" y="949" width="0.1610%" height="15" fill="rgb(243,201,19)" fg:x="272" fg:w="1"/><text x="44.0503%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (232 samples, 37.36%)</title><rect x="6.9243%" y="1221" width="37.3591%" height="15" fill="rgb(236,59,4)" fg:x="43" fg:w="232"/><text x="7.1743%" y="1231.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 1.13%)</title><rect x="43.1562%" y="1205" width="1.1272%" height="15" fill="rgb(254,179,45)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1215.50"></text></g><g><title>rayon_core::job::JobRef::execute (7 samples, 1.13%)</title><rect x="43.1562%" y="1189" width="1.1272%" height="15" fill="rgb(226,14,10)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="1173" width="1.1272%" height="15" fill="rgb(244,27,41)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="43.1562%" y="1157" width="1.1272%" height="15" fill="rgb(235,35,32)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="1141" width="1.1272%" height="15" fill="rgb(218,68,31)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="43.1562%" y="1125" width="1.1272%" height="15" fill="rgb(207,120,37)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="1109" width="1.1272%" height="15" fill="rgb(227,98,0)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="43.1562%" y="1093" width="1.1272%" height="15" fill="rgb(207,7,3)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="1077" width="1.1272%" height="15" fill="rgb(206,98,19)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="43.1562%" y="1061" width="1.1272%" height="15" fill="rgb(217,5,26)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="1045" width="1.1272%" height="15" fill="rgb(235,190,38)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="43.1562%" y="1029" width="1.1272%" height="15" fill="rgb(247,86,24)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="1013" width="1.1272%" height="15" fill="rgb(205,101,16)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1023.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 1.13%)</title><rect x="43.1562%" y="997" width="1.1272%" height="15" fill="rgb(246,168,33)" fg:x="268" fg:w="7"/><text x="43.4062%" y="1007.50"></text></g><g><title>tola::utils::build::process_asset (2 samples, 0.32%)</title><rect x="43.9614%" y="981" width="0.3221%" height="15" fill="rgb(231,114,1)" fg:x="273" fg:w="2"/><text x="44.2114%" y="991.50"></text></g><g><title>tola::utils::command::run_command (2 samples, 0.32%)</title><rect x="43.9614%" y="965" width="0.3221%" height="15" fill="rgb(207,184,53)" fg:x="273" fg:w="2"/><text x="44.2114%" y="975.50"></text></g><g><title>std::sys::process::output (2 samples, 0.32%)</title><rect x="43.9614%" y="949" width="0.3221%" height="15" fill="rgb(224,95,51)" fg:x="273" fg:w="2"/><text x="44.2114%" y="959.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (2 samples, 0.32%)</title><rect x="43.9614%" y="933" width="0.3221%" height="15" fill="rgb(212,188,45)" fg:x="273" fg:w="2"/><text x="44.2114%" y="943.50"></text></g><g><title>posix_spawnp (2 samples, 0.32%)</title><rect x="43.9614%" y="917" width="0.3221%" height="15" fill="rgb(223,154,38)" fg:x="273" fg:w="2"/><text x="44.2114%" y="927.50"></text></g><g><title>__posix_spawn (2 samples, 0.32%)</title><rect x="43.9614%" y="901" width="0.3221%" height="15" fill="rgb(251,22,52)" fg:x="273" fg:w="2"/><text x="44.2114%" y="911.50"></text></g><g><title>std::fs::copy (1 samples, 0.16%)</title><rect x="44.2834%" y="1205" width="0.1610%" height="15" fill="rgb(229,209,22)" fg:x="275" fg:w="1"/><text x="44.5334%" y="1215.50"></text></g><g><title>fclonefileat (1 samples, 0.16%)</title><rect x="44.2834%" y="1189" width="0.1610%" height="15" fill="rgb(234,138,34)" fg:x="275" fg:w="1"/><text x="44.5334%" y="1199.50"></text></g><g><title>minify_html::minify::content::minify_content (1 samples, 0.16%)</title><rect x="44.4444%" y="1173" width="0.1610%" height="15" fill="rgb(212,95,11)" fg:x="276" fg:w="1"/><text x="44.6944%" y="1183.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="44.4444%" y="1157" width="0.1610%" height="15" fill="rgb(240,179,47)" fg:x="276" fg:w="1"/><text x="44.6944%" y="1167.50"></text></g><g><title>minify_html::minify (2 samples, 0.32%)</title><rect x="44.4444%" y="1189" width="0.3221%" height="15" fill="rgb(240,163,11)" fg:x="276" fg:w="2"/><text x="44.6944%" y="1199.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="44.6055%" y="1173" width="0.1610%" height="15" fill="rgb(236,37,12)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1183.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="44.6055%" y="1157" width="0.1610%" height="15" fill="rgb(232,164,16)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1167.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="44.6055%" y="1141" width="0.1610%" height="15" fill="rgb(244,205,15)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1151.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="44.6055%" y="1125" width="0.1610%" height="15" fill="rgb(223,117,47)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1135.50"></text></g><g><title>minify_html::parse::element::parse_tag (1 samples, 0.16%)</title><rect x="44.6055%" y="1109" width="0.1610%" height="15" fill="rgb(244,107,35)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1 samples, 0.16%)</title><rect x="44.6055%" y="1093" width="0.1610%" height="15" fill="rgb(205,140,8)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="44.6055%" y="1077" width="0.1610%" height="15" fill="rgb(228,84,46)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.16%)</title><rect x="44.6055%" y="1061" width="0.1610%" height="15" fill="rgb(254,188,9)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1071.50"></text></g><g><title>nanov2_malloc_type_zero_on_alloc (1 samples, 0.16%)</title><rect x="44.6055%" y="1045" width="0.1610%" height="15" fill="rgb(206,112,54)" fg:x="277" fg:w="1"/><text x="44.8555%" y="1055.50"></text></g><g><title>std::fs::canonicalize (1 samples, 0.16%)</title><rect x="44.7665%" y="1189" width="0.1610%" height="15" fill="rgb(216,84,49)" fg:x="278" fg:w="1"/><text x="45.0165%" y="1199.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.16%)</title><rect x="44.7665%" y="1173" width="0.1610%" height="15" fill="rgb(214,194,35)" fg:x="278" fg:w="1"/><text x="45.0165%" y="1183.50"></text></g><g><title>std::sys::fs::unix::canonicalize (1 samples, 0.16%)</title><rect x="44.7665%" y="1157" width="0.1610%" height="15" fill="rgb(249,28,3)" fg:x="278" fg:w="1"/><text x="45.0165%" y="1167.50"></text></g><g><title>__getattrlist (1 samples, 0.16%)</title><rect x="44.7665%" y="1141" width="0.1610%" height="15" fill="rgb(222,56,52)" fg:x="278" fg:w="1"/><text x="45.0165%" y="1151.50"></text></g><g><title>tola::utils::build::process_link_in_html (1 samples, 0.16%)</title><rect x="44.9275%" y="1189" width="0.1610%" height="15" fill="rgb(245,217,50)" fg:x="279" fg:w="1"/><text x="45.1775%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="44.9275%" y="1173" width="0.1610%" height="15" fill="rgb(213,201,24)" fg:x="279" fg:w="1"/><text x="45.1775%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="44.9275%" y="1157" width="0.1610%" height="15" fill="rgb(248,116,28)" fg:x="279" fg:w="1"/><text x="45.1775%" y="1167.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.16%)</title><rect x="44.9275%" y="1141" width="0.1610%" height="15" fill="rgb(219,72,43)" fg:x="279" fg:w="1"/><text x="45.1775%" y="1151.50"></text></g><g><title>nanov2_size (1 samples, 0.16%)</title><rect x="44.9275%" y="1125" width="0.1610%" height="15" fill="rgb(209,138,14)" fg:x="279" fg:w="1"/><text x="45.1775%" y="1135.50"></text></g><g><title>std::sys::pal::unix::pipe::read2::read (1 samples, 0.16%)</title><rect x="45.0886%" y="1173" width="0.1610%" height="15" fill="rgb(222,18,33)" fg:x="280" fg:w="1"/><text x="45.3386%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (1 samples, 0.16%)</title><rect x="45.0886%" y="1157" width="0.1610%" height="15" fill="rgb(213,199,7)" fg:x="280" fg:w="1"/><text x="45.3386%" y="1167.50"></text></g><g><title>std::sys::process::unix::common::Command::setup_io (1 samples, 0.16%)</title><rect x="45.2496%" y="1157" width="0.1610%" height="15" fill="rgb(250,110,10)" fg:x="281" fg:w="1"/><text x="45.4996%" y="1167.50"></text></g><g><title>std::sys::process::unix::common::Stdio::to_child_stdio (1 samples, 0.16%)</title><rect x="45.2496%" y="1141" width="0.1610%" height="15" fill="rgb(248,123,6)" fg:x="281" fg:w="1"/><text x="45.4996%" y="1151.50"></text></g><g><title>std::sys::fd::unix::FileDesc::set_cloexec (1 samples, 0.16%)</title><rect x="45.2496%" y="1125" width="0.1610%" height="15" fill="rgb(206,91,31)" fg:x="281" fg:w="1"/><text x="45.4996%" y="1135.50"></text></g><g><title>__ioctl (1 samples, 0.16%)</title><rect x="45.2496%" y="1109" width="0.1610%" height="15" fill="rgb(211,154,13)" fg:x="281" fg:w="1"/><text x="45.4996%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (240 samples, 38.65%)</title><rect x="6.9243%" y="1237" width="38.6473%" height="15" fill="rgb(225,148,7)" fg:x="43" fg:w="240"/><text x="7.1743%" y="1247.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{clo..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 1.29%)</title><rect x="44.2834%" y="1221" width="1.2882%" height="15" fill="rgb(220,160,43)" fg:x="275" fg:w="8"/><text x="44.5334%" y="1231.50"></text></g><g><title>tola::utils::build::process_content (7 samples, 1.13%)</title><rect x="44.4444%" y="1205" width="1.1272%" height="15" fill="rgb(213,52,39)" fg:x="276" fg:w="7"/><text x="44.6944%" y="1215.50"></text></g><g><title>tola::utils::command::run_command (3 samples, 0.48%)</title><rect x="45.0886%" y="1189" width="0.4831%" height="15" fill="rgb(243,137,7)" fg:x="280" fg:w="3"/><text x="45.3386%" y="1199.50"></text></g><g><title>std::sys::process::output (2 samples, 0.32%)</title><rect x="45.2496%" y="1173" width="0.3221%" height="15" fill="rgb(230,79,13)" fg:x="281" fg:w="2"/><text x="45.4996%" y="1183.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="45.4106%" y="1157" width="0.1610%" height="15" fill="rgb(247,105,23)" fg:x="282" fg:w="1"/><text x="45.6606%" y="1167.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="45.4106%" y="1141" width="0.1610%" height="15" fill="rgb(223,179,41)" fg:x="282" fg:w="1"/><text x="45.6606%" y="1151.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="45.4106%" y="1125" width="0.1610%" height="15" fill="rgb(218,9,34)" fg:x="282" fg:w="1"/><text x="45.6606%" y="1135.50"></text></g><g><title>std::fs::DirBuilder::create (1 samples, 0.16%)</title><rect x="45.5717%" y="1013" width="0.1610%" height="15" fill="rgb(222,106,8)" fg:x="283" fg:w="1"/><text x="45.8217%" y="1023.50"></text></g><g><title>mkdir (1 samples, 0.16%)</title><rect x="45.5717%" y="997" width="0.1610%" height="15" fill="rgb(211,220,0)" fg:x="283" fg:w="1"/><text x="45.8217%" y="1007.50"></text></g><g><title>fclonefileat (15 samples, 2.42%)</title><rect x="45.7327%" y="997" width="2.4155%" height="15" fill="rgb(229,52,16)" fg:x="284" fg:w="15"/><text x="45.9827%" y="1007.50">fc..</text></g><g><title>std::fs::copy (21 samples, 3.38%)</title><rect x="45.7327%" y="1013" width="3.3816%" height="15" fill="rgb(212,155,18)" fg:x="284" fg:w="21"/><text x="45.9827%" y="1023.50">std..</text></g><g><title>std::fs::OpenOptions::open (6 samples, 0.97%)</title><rect x="48.1481%" y="997" width="0.9662%" height="15" fill="rgb(242,21,14)" fg:x="299" fg:w="6"/><text x="48.3981%" y="1007.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (6 samples, 0.97%)</title><rect x="48.1481%" y="981" width="0.9662%" height="15" fill="rgb(222,19,48)" fg:x="299" fg:w="6"/><text x="48.3981%" y="991.50"></text></g><g><title>__open (6 samples, 0.97%)</title><rect x="48.1481%" y="965" width="0.9662%" height="15" fill="rgb(232,45,27)" fg:x="299" fg:w="6"/><text x="48.3981%" y="975.50"></text></g><g><title>std::fs::remove_file (5 samples, 0.81%)</title><rect x="49.1143%" y="1013" width="0.8052%" height="15" fill="rgb(249,103,42)" fg:x="305" fg:w="5"/><text x="49.3643%" y="1023.50"></text></g><g><title>std::sys::fs::unix::unlink (5 samples, 0.81%)</title><rect x="49.1143%" y="997" width="0.8052%" height="15" fill="rgb(246,81,33)" fg:x="305" fg:w="5"/><text x="49.3643%" y="1007.50"></text></g><g><title>__unlink (5 samples, 0.81%)</title><rect x="49.1143%" y="981" width="0.8052%" height="15" fill="rgb(252,33,42)" fg:x="305" fg:w="5"/><text x="49.3643%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (30 samples, 4.83%)</title><rect x="45.5717%" y="1109" width="4.8309%" height="15" fill="rgb(209,212,41)" fg:x="283" fg:w="30"/><text x="45.8217%" y="1119.50">rayon:..</text></g><g><title>rayon_core::registry::in_worker (30 samples, 4.83%)</title><rect x="45.5717%" y="1093" width="4.8309%" height="15" fill="rgb(207,154,6)" fg:x="283" fg:w="30"/><text x="45.8217%" y="1103.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (30 samples, 4.83%)</title><rect x="45.5717%" y="1077" width="4.8309%" height="15" fill="rgb(223,64,47)" fg:x="283" fg:w="30"/><text x="45.8217%" y="1087.50">rayon:..</text></g><g><title>rayon_core::registry::in_worker (30 samples, 4.83%)</title><rect x="45.5717%" y="1061" width="4.8309%" height="15" fill="rgb(211,161,38)" fg:x="283" fg:w="30"/><text x="45.8217%" y="1071.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (30 samples, 4.83%)</title><rect x="45.5717%" y="1045" width="4.8309%" height="15" fill="rgb(219,138,40)" fg:x="283" fg:w="30"/><text x="45.8217%" y="1055.50">rayon:..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (30 samples, 4.83%)</title><rect x="45.5717%" y="1029" width="4.8309%" height="15" fill="rgb(241,228,46)" fg:x="283" fg:w="30"/><text x="45.8217%" y="1039.50">tola::..</text></g><g><title>tola::utils::build::process_asset (3 samples, 0.48%)</title><rect x="49.9195%" y="1013" width="0.4831%" height="15" fill="rgb(223,209,38)" fg:x="310" fg:w="3"/><text x="50.1695%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::open (3 samples, 0.48%)</title><rect x="49.9195%" y="997" width="0.4831%" height="15" fill="rgb(236,164,45)" fg:x="310" fg:w="3"/><text x="50.1695%" y="1007.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (3 samples, 0.48%)</title><rect x="49.9195%" y="981" width="0.4831%" height="15" fill="rgb(231,15,5)" fg:x="310" fg:w="3"/><text x="50.1695%" y="991.50"></text></g><g><title>__open (3 samples, 0.48%)</title><rect x="49.9195%" y="965" width="0.4831%" height="15" fill="rgb(252,35,15)" fg:x="310" fg:w="3"/><text x="50.1695%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (31 samples, 4.99%)</title><rect x="45.5717%" y="1157" width="4.9919%" height="15" fill="rgb(248,181,18)" fg:x="283" fg:w="31"/><text x="45.8217%" y="1167.50">rayon_..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (31 samples, 4.99%)</title><rect x="45.5717%" y="1141" width="4.9919%" height="15" fill="rgb(233,39,42)" fg:x="283" fg:w="31"/><text x="45.8217%" y="1151.50">rayon:..</text></g><g><title>rayon_core::registry::in_worker (31 samples, 4.99%)</title><rect x="45.5717%" y="1125" width="4.9919%" height="15" fill="rgb(238,110,33)" fg:x="283" fg:w="31"/><text x="45.8217%" y="1135.50">rayon_..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="50.4026%" y="1109" width="0.1610%" height="15" fill="rgb(233,195,10)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1119.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="50.4026%" y="1093" width="0.1610%" height="15" fill="rgb(254,105,3)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="50.4026%" y="1077" width="0.1610%" height="15" fill="rgb(221,225,9)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1087.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="50.4026%" y="1061" width="0.1610%" height="15" fill="rgb(224,227,45)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1071.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="50.4026%" y="1045" width="0.1610%" height="15" fill="rgb(229,198,43)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1055.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="50.4026%" y="1029" width="0.1610%" height="15" fill="rgb(206,209,35)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1039.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="50.4026%" y="1013" width="0.1610%" height="15" fill="rgb(245,195,53)" fg:x="313" fg:w="1"/><text x="50.6526%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (32 samples, 5.15%)</title><rect x="45.5717%" y="1173" width="5.1530%" height="15" fill="rgb(240,92,26)" fg:x="283" fg:w="32"/><text x="45.8217%" y="1183.50">rayon:..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="50.5636%" y="1157" width="0.1610%" height="15" fill="rgb(207,40,23)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1167.50"></text></g><g><title>tola::utils::build::process_content (1 samples, 0.16%)</title><rect x="50.5636%" y="1141" width="0.1610%" height="15" fill="rgb(223,111,35)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1151.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="50.5636%" y="1125" width="0.1610%" height="15" fill="rgb(229,147,28)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1135.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="50.5636%" y="1109" width="0.1610%" height="15" fill="rgb(211,29,28)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1119.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="50.5636%" y="1093" width="0.1610%" height="15" fill="rgb(228,72,33)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1103.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="50.5636%" y="1077" width="0.1610%" height="15" fill="rgb(205,214,31)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1087.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="50.5636%" y="1061" width="0.1610%" height="15" fill="rgb(224,111,15)" fg:x="314" fg:w="1"/><text x="50.8136%" y="1071.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (1 samples, 0.16%)</title><rect x="50.7246%" y="933" width="0.1610%" height="15" fill="rgb(253,21,26)" fg:x="315" fg:w="1"/><text x="50.9746%" y="943.50"></text></g><g><title>aho_corasick::automaton::Automaton::find_at_no_state (1 samples, 0.16%)</title><rect x="50.7246%" y="917" width="0.1610%" height="15" fill="rgb(245,139,43)" fg:x="315" fg:w="1"/><text x="50.9746%" y="927.50"></text></g><g><title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (1 samples, 0.16%)</title><rect x="50.7246%" y="901" width="0.1610%" height="15" fill="rgb(252,170,7)" fg:x="315" fg:w="1"/><text x="50.9746%" y="911.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="1045" width="0.3221%" height="15" fill="rgb(231,118,14)" fg:x="315" fg:w="2"/><text x="50.9746%" y="1055.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="1029" width="0.3221%" height="15" fill="rgb(238,83,0)" fg:x="315" fg:w="2"/><text x="50.9746%" y="1039.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="1013" width="0.3221%" height="15" fill="rgb(221,39,39)" fg:x="315" fg:w="2"/><text x="50.9746%" y="1023.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="997" width="0.3221%" height="15" fill="rgb(222,119,46)" fg:x="315" fg:w="2"/><text x="50.9746%" y="1007.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="981" width="0.3221%" height="15" fill="rgb(222,165,49)" fg:x="315" fg:w="2"/><text x="50.9746%" y="991.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="965" width="0.3221%" height="15" fill="rgb(219,113,52)" fg:x="315" fg:w="2"/><text x="50.9746%" y="975.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="50.7246%" y="949" width="0.3221%" height="15" fill="rgb(214,7,15)" fg:x="315" fg:w="2"/><text x="50.9746%" y="959.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="50.8857%" y="933" width="0.1610%" height="15" fill="rgb(235,32,4)" fg:x="316" fg:w="1"/><text x="51.1357%" y="943.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="50.8857%" y="917" width="0.1610%" height="15" fill="rgb(238,90,54)" fg:x="316" fg:w="1"/><text x="51.1357%" y="927.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="50.8857%" y="901" width="0.1610%" height="15" fill="rgb(213,208,19)" fg:x="316" fg:w="1"/><text x="51.1357%" y="911.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="50.8857%" y="885" width="0.1610%" height="15" fill="rgb(233,156,4)" fg:x="316" fg:w="1"/><text x="51.1357%" y="895.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="50.8857%" y="869" width="0.1610%" height="15" fill="rgb(207,194,5)" fg:x="316" fg:w="1"/><text x="51.1357%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="50.8857%" y="853" width="0.1610%" height="15" fill="rgb(206,111,30)" fg:x="316" fg:w="1"/><text x="51.1357%" y="863.50"></text></g><g><title>DYLD-STUB$$free (1 samples, 0.16%)</title><rect x="50.8857%" y="837" width="0.1610%" height="15" fill="rgb(243,70,54)" fg:x="316" fg:w="1"/><text x="51.1357%" y="847.50"></text></g><g><title>minify_html::parse::content::maybe_ignore_html_head_body (1 samples, 0.16%)</title><rect x="51.0467%" y="1045" width="0.1610%" height="15" fill="rgb(242,28,8)" fg:x="317" fg:w="1"/><text x="51.2967%" y="1055.50"></text></g><g><title>minify_html::minify (4 samples, 0.64%)</title><rect x="50.7246%" y="1061" width="0.6441%" height="15" fill="rgb(219,106,18)" fg:x="315" fg:w="4"/><text x="50.9746%" y="1071.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="51.2077%" y="1045" width="0.1610%" height="15" fill="rgb(244,222,10)" fg:x="318" fg:w="1"/><text x="51.4577%" y="1055.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="51.2077%" y="1029" width="0.1610%" height="15" fill="rgb(236,179,52)" fg:x="318" fg:w="1"/><text x="51.4577%" y="1039.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="51.2077%" y="1013" width="0.1610%" height="15" fill="rgb(213,23,39)" fg:x="318" fg:w="1"/><text x="51.4577%" y="1023.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="51.2077%" y="997" width="0.1610%" height="15" fill="rgb(238,48,10)" fg:x="318" fg:w="1"/><text x="51.4577%" y="1007.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="51.2077%" y="981" width="0.1610%" height="15" fill="rgb(251,196,23)" fg:x="318" fg:w="1"/><text x="51.4577%" y="991.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="51.2077%" y="965" width="0.1610%" height="15" fill="rgb(250,152,24)" fg:x="318" fg:w="1"/><text x="51.4577%" y="975.50"></text></g><g><title>minify_html_common::spec::tag::omission::can_omit_as_before (1 samples, 0.16%)</title><rect x="51.2077%" y="949" width="0.1610%" height="15" fill="rgb(209,150,17)" fg:x="318" fg:w="1"/><text x="51.4577%" y="959.50"></text></g><g><title>std::fs::write (1 samples, 0.16%)</title><rect x="51.3688%" y="1061" width="0.1610%" height="15" fill="rgb(234,202,34)" fg:x="319" fg:w="1"/><text x="51.6188%" y="1071.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="51.3688%" y="1045" width="0.1610%" height="15" fill="rgb(253,148,53)" fg:x="319" fg:w="1"/><text x="51.6188%" y="1055.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="51.3688%" y="1029" width="0.1610%" height="15" fill="rgb(218,129,16)" fg:x="319" fg:w="1"/><text x="51.6188%" y="1039.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="51.3688%" y="1013" width="0.1610%" height="15" fill="rgb(216,85,19)" fg:x="319" fg:w="1"/><text x="51.6188%" y="1023.50"></text></g><g><title>std::sys::pal::unix::pipe::read2::read (1 samples, 0.16%)</title><rect x="51.5298%" y="1045" width="0.1610%" height="15" fill="rgb(235,228,7)" fg:x="320" fg:w="1"/><text x="51.7798%" y="1055.50"></text></g><g><title>read (1 samples, 0.16%)</title><rect x="51.5298%" y="1029" width="0.1610%" height="15" fill="rgb(245,175,0)" fg:x="320" fg:w="1"/><text x="51.7798%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (279 samples, 44.93%)</title><rect x="6.9243%" y="1253" width="44.9275%" height="15" fill="rgb(208,168,36)" fg:x="43" fg:w="279"/><text x="7.1743%" y="1263.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (39 samples, 6.28%)</title><rect x="45.5717%" y="1237" width="6.2802%" height="15" fill="rgb(246,171,24)" fg:x="283" fg:w="39"/><text x="45.8217%" y="1247.50">rayon_co..</text></g><g><title>rayon_core::job::JobRef::execute (39 samples, 6.28%)</title><rect x="45.5717%" y="1221" width="6.2802%" height="15" fill="rgb(215,142,24)" fg:x="283" fg:w="39"/><text x="45.8217%" y="1231.50">rayon_co..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (39 samples, 6.28%)</title><rect x="45.5717%" y="1205" width="6.2802%" height="15" fill="rgb(250,187,7)" fg:x="283" fg:w="39"/><text x="45.8217%" y="1215.50">rayon::i..</text></g><g><title>rayon_core::registry::in_worker (39 samples, 6.28%)</title><rect x="45.5717%" y="1189" width="6.2802%" height="15" fill="rgb(228,66,33)" fg:x="283" fg:w="39"/><text x="45.8217%" y="1199.50">rayon_co..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 1.13%)</title><rect x="50.7246%" y="1173" width="1.1272%" height="15" fill="rgb(234,215,21)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1183.50"></text></g><g><title>rayon_core::job::JobRef::execute (7 samples, 1.13%)</title><rect x="50.7246%" y="1157" width="1.1272%" height="15" fill="rgb(222,191,20)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="50.7246%" y="1141" width="1.1272%" height="15" fill="rgb(245,79,54)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="50.7246%" y="1125" width="1.1272%" height="15" fill="rgb(240,10,37)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="50.7246%" y="1109" width="1.1272%" height="15" fill="rgb(214,192,32)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1119.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 1.13%)</title><rect x="50.7246%" y="1093" width="1.1272%" height="15" fill="rgb(209,36,54)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1103.50"></text></g><g><title>tola::utils::build::process_content (7 samples, 1.13%)</title><rect x="50.7246%" y="1077" width="1.1272%" height="15" fill="rgb(220,10,11)" fg:x="315" fg:w="7"/><text x="50.9746%" y="1087.50"></text></g><g><title>tola::utils::command::run_command (2 samples, 0.32%)</title><rect x="51.5298%" y="1061" width="0.3221%" height="15" fill="rgb(221,106,17)" fg:x="320" fg:w="2"/><text x="51.7798%" y="1071.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="51.6908%" y="1045" width="0.1610%" height="15" fill="rgb(251,142,44)" fg:x="321" fg:w="1"/><text x="51.9408%" y="1055.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="51.6908%" y="1029" width="0.1610%" height="15" fill="rgb(238,13,15)" fg:x="321" fg:w="1"/><text x="51.9408%" y="1039.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="51.6908%" y="1013" width="0.1610%" height="15" fill="rgb(208,107,27)" fg:x="321" fg:w="1"/><text x="51.9408%" y="1023.50"></text></g><g><title>__findenv_locked (1 samples, 0.16%)</title><rect x="51.6908%" y="997" width="0.1610%" height="15" fill="rgb(205,136,37)" fg:x="321" fg:w="1"/><text x="51.9408%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.16%)</title><rect x="51.8519%" y="1221" width="0.1610%" height="15" fill="rgb(250,205,27)" fg:x="322" fg:w="1"/><text x="52.1019%" y="1231.50"></text></g><g><title>&lt;quick_xml::events::attributes::Attributes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="51.8519%" y="1205" width="0.1610%" height="15" fill="rgb(210,80,43)" fg:x="322" fg:w="1"/><text x="52.1019%" y="1215.50"></text></g><g><title>quick_xml::events::attributes::IterState::next (1 samples, 0.16%)</title><rect x="51.8519%" y="1189" width="0.1610%" height="15" fill="rgb(247,160,36)" fg:x="322" fg:w="1"/><text x="52.1019%" y="1199.50"></text></g><g><title>minify_html::minify::content::minify_content (1 samples, 0.16%)</title><rect x="52.0129%" y="1205" width="0.1610%" height="15" fill="rgb(234,13,49)" fg:x="323" fg:w="1"/><text x="52.2629%" y="1215.50"></text></g><g><title>aho_corasick::automaton::Automaton::find_at_no_state (1 samples, 0.16%)</title><rect x="52.0129%" y="1189" width="0.1610%" height="15" fill="rgb(234,122,0)" fg:x="323" fg:w="1"/><text x="52.2629%" y="1199.50"></text></g><g><title>minify_html::minify (2 samples, 0.32%)</title><rect x="52.0129%" y="1221" width="0.3221%" height="15" fill="rgb(207,146,38)" fg:x="323" fg:w="2"/><text x="52.2629%" y="1231.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="52.1739%" y="1205" width="0.1610%" height="15" fill="rgb(207,177,25)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1215.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="52.1739%" y="1189" width="0.1610%" height="15" fill="rgb(211,178,42)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1199.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="52.1739%" y="1173" width="0.1610%" height="15" fill="rgb(230,69,54)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1183.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="52.1739%" y="1157" width="0.1610%" height="15" fill="rgb(214,135,41)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1167.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="52.1739%" y="1141" width="0.1610%" height="15" fill="rgb(237,67,25)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1151.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="52.1739%" y="1125" width="0.1610%" height="15" fill="rgb(222,189,50)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1135.50"></text></g><g><title>minify_html::parse::content::parse_content (1 samples, 0.16%)</title><rect x="52.1739%" y="1109" width="0.1610%" height="15" fill="rgb(245,148,34)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1119.50"></text></g><g><title>minify_html_common::pattern::TrieNode&lt;V&gt;::longest_matching_prefix (1 samples, 0.16%)</title><rect x="52.1739%" y="1093" width="0.1610%" height="15" fill="rgb(222,29,6)" fg:x="324" fg:w="1"/><text x="52.4239%" y="1103.50"></text></g><g><title>std::fs::write (1 samples, 0.16%)</title><rect x="52.3349%" y="1221" width="0.1610%" height="15" fill="rgb(221,189,43)" fg:x="325" fg:w="1"/><text x="52.5849%" y="1231.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="52.3349%" y="1205" width="0.1610%" height="15" fill="rgb(207,36,27)" fg:x="325" fg:w="1"/><text x="52.5849%" y="1215.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="52.3349%" y="1189" width="0.1610%" height="15" fill="rgb(217,90,24)" fg:x="325" fg:w="1"/><text x="52.5849%" y="1199.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="52.3349%" y="1173" width="0.1610%" height="15" fill="rgb(224,66,35)" fg:x="325" fg:w="1"/><text x="52.5849%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (287 samples, 46.22%)</title><rect x="6.7633%" y="1269" width="46.2158%" height="15" fill="rgb(221,13,50)" fg:x="42" fg:w="287"/><text x="7.0133%" y="1279.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 1.13%)</title><rect x="51.8519%" y="1253" width="1.1272%" height="15" fill="rgb(236,68,49)" fg:x="322" fg:w="7"/><text x="52.1019%" y="1263.50"></text></g><g><title>tola::utils::build::process_content (7 samples, 1.13%)</title><rect x="51.8519%" y="1237" width="1.1272%" height="15" fill="rgb(229,146,28)" fg:x="322" fg:w="7"/><text x="52.1019%" y="1247.50"></text></g><g><title>tola::utils::command::run_command (3 samples, 0.48%)</title><rect x="52.4960%" y="1221" width="0.4831%" height="15" fill="rgb(225,31,38)" fg:x="326" fg:w="3"/><text x="52.7460%" y="1231.50"></text></g><g><title>std::sys::process::output (3 samples, 0.48%)</title><rect x="52.4960%" y="1205" width="0.4831%" height="15" fill="rgb(250,208,3)" fg:x="326" fg:w="3"/><text x="52.7460%" y="1215.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (3 samples, 0.48%)</title><rect x="52.4960%" y="1189" width="0.4831%" height="15" fill="rgb(246,54,23)" fg:x="326" fg:w="3"/><text x="52.7460%" y="1199.50"></text></g><g><title>posix_spawnp (3 samples, 0.48%)</title><rect x="52.4960%" y="1173" width="0.4831%" height="15" fill="rgb(243,76,11)" fg:x="326" fg:w="3"/><text x="52.7460%" y="1183.50"></text></g><g><title>__posix_spawn (3 samples, 0.48%)</title><rect x="52.4960%" y="1157" width="0.4831%" height="15" fill="rgb(245,21,50)" fg:x="326" fg:w="3"/><text x="52.7460%" y="1167.50"></text></g><g><title>fclonefileat (8 samples, 1.29%)</title><rect x="52.9791%" y="1029" width="1.2882%" height="15" fill="rgb(228,9,43)" fg:x="329" fg:w="8"/><text x="53.2291%" y="1039.50"></text></g><g><title>std::fs::copy (9 samples, 1.45%)</title><rect x="52.9791%" y="1045" width="1.4493%" height="15" fill="rgb(208,100,47)" fg:x="329" fg:w="9"/><text x="53.2291%" y="1055.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="54.2673%" y="1029" width="0.1610%" height="15" fill="rgb(232,26,8)" fg:x="337" fg:w="1"/><text x="54.5173%" y="1039.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="54.2673%" y="1013" width="0.1610%" height="15" fill="rgb(216,166,38)" fg:x="337" fg:w="1"/><text x="54.5173%" y="1023.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="54.2673%" y="997" width="0.1610%" height="15" fill="rgb(251,202,51)" fg:x="337" fg:w="1"/><text x="54.5173%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 2.09%)</title><rect x="52.9791%" y="1093" width="2.0934%" height="15" fill="rgb(254,216,34)" fg:x="329" fg:w="13"/><text x="53.2291%" y="1103.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (13 samples, 2.09%)</title><rect x="52.9791%" y="1077" width="2.0934%" height="15" fill="rgb(251,32,27)" fg:x="329" fg:w="13"/><text x="53.2291%" y="1087.50">r..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (13 samples, 2.09%)</title><rect x="52.9791%" y="1061" width="2.0934%" height="15" fill="rgb(208,127,28)" fg:x="329" fg:w="13"/><text x="53.2291%" y="1071.50">t..</text></g><g><title>std::fs::remove_file (4 samples, 0.64%)</title><rect x="54.4283%" y="1045" width="0.6441%" height="15" fill="rgb(224,137,22)" fg:x="338" fg:w="4"/><text x="54.6783%" y="1055.50"></text></g><g><title>std::sys::fs::unix::unlink (4 samples, 0.64%)</title><rect x="54.4283%" y="1029" width="0.6441%" height="15" fill="rgb(254,70,32)" fg:x="338" fg:w="4"/><text x="54.6783%" y="1039.50"></text></g><g><title>__unlink (4 samples, 0.64%)</title><rect x="54.4283%" y="1013" width="0.6441%" height="15" fill="rgb(229,75,37)" fg:x="338" fg:w="4"/><text x="54.6783%" y="1023.50"></text></g><g><title>fclonefileat (3 samples, 0.48%)</title><rect x="55.0725%" y="1061" width="0.4831%" height="15" fill="rgb(252,64,23)" fg:x="342" fg:w="3"/><text x="55.3225%" y="1071.50"></text></g><g><title>std::fs::copy (4 samples, 0.64%)</title><rect x="55.0725%" y="1077" width="0.6441%" height="15" fill="rgb(232,162,48)" fg:x="342" fg:w="4"/><text x="55.3225%" y="1087.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="55.5556%" y="1061" width="0.1610%" height="15" fill="rgb(246,160,12)" fg:x="345" fg:w="1"/><text x="55.8056%" y="1071.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="55.5556%" y="1045" width="0.1610%" height="15" fill="rgb(247,166,0)" fg:x="345" fg:w="1"/><text x="55.8056%" y="1055.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="55.5556%" y="1029" width="0.1610%" height="15" fill="rgb(249,219,21)" fg:x="345" fg:w="1"/><text x="55.8056%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (20 samples, 3.22%)</title><rect x="52.9791%" y="1173" width="3.2206%" height="15" fill="rgb(205,209,3)" fg:x="329" fg:w="20"/><text x="53.2291%" y="1183.50">ray..</text></g><g><title>rayon_core::registry::in_worker (20 samples, 3.22%)</title><rect x="52.9791%" y="1157" width="3.2206%" height="15" fill="rgb(243,44,1)" fg:x="329" fg:w="20"/><text x="53.2291%" y="1167.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (20 samples, 3.22%)</title><rect x="52.9791%" y="1141" width="3.2206%" height="15" fill="rgb(206,159,16)" fg:x="329" fg:w="20"/><text x="53.2291%" y="1151.50">ray..</text></g><g><title>rayon_core::registry::in_worker (20 samples, 3.22%)</title><rect x="52.9791%" y="1125" width="3.2206%" height="15" fill="rgb(244,77,30)" fg:x="329" fg:w="20"/><text x="53.2291%" y="1135.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (20 samples, 3.22%)</title><rect x="52.9791%" y="1109" width="3.2206%" height="15" fill="rgb(218,69,12)" fg:x="329" fg:w="20"/><text x="53.2291%" y="1119.50">ray..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 1.13%)</title><rect x="55.0725%" y="1093" width="1.1272%" height="15" fill="rgb(212,87,7)" fg:x="342" fg:w="7"/><text x="55.3225%" y="1103.50"></text></g><g><title>std::fs::remove_file (3 samples, 0.48%)</title><rect x="55.7166%" y="1077" width="0.4831%" height="15" fill="rgb(245,114,25)" fg:x="346" fg:w="3"/><text x="55.9666%" y="1087.50"></text></g><g><title>std::sys::fs::unix::unlink (3 samples, 0.48%)</title><rect x="55.7166%" y="1061" width="0.4831%" height="15" fill="rgb(210,61,42)" fg:x="346" fg:w="3"/><text x="55.9666%" y="1071.50"></text></g><g><title>__unlink (3 samples, 0.48%)</title><rect x="55.7166%" y="1045" width="0.4831%" height="15" fill="rgb(211,52,33)" fg:x="346" fg:w="3"/><text x="55.9666%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.1997%" y="501" width="0.1610%" height="15" fill="rgb(234,58,33)" fg:x="349" fg:w="1"/><text x="56.4497%" y="511.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.1997%" y="485" width="0.1610%" height="15" fill="rgb(220,115,36)" fg:x="349" fg:w="1"/><text x="56.4497%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.1997%" y="469" width="0.1610%" height="15" fill="rgb(243,153,54)" fg:x="349" fg:w="1"/><text x="56.4497%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.1997%" y="453" width="0.1610%" height="15" fill="rgb(251,47,18)" fg:x="349" fg:w="1"/><text x="56.4497%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.1997%" y="437" width="0.1610%" height="15" fill="rgb(242,102,42)" fg:x="349" fg:w="1"/><text x="56.4497%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.1997%" y="421" width="0.1610%" height="15" fill="rgb(234,31,38)" fg:x="349" fg:w="1"/><text x="56.4497%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.1997%" y="405" width="0.1610%" height="15" fill="rgb(221,117,51)" fg:x="349" fg:w="1"/><text x="56.4497%" y="415.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="56.1997%" y="389" width="0.1610%" height="15" fill="rgb(212,20,18)" fg:x="349" fg:w="1"/><text x="56.4497%" y="399.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="56.1997%" y="373" width="0.1610%" height="15" fill="rgb(245,133,36)" fg:x="349" fg:w="1"/><text x="56.4497%" y="383.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="56.1997%" y="357" width="0.1610%" height="15" fill="rgb(212,6,19)" fg:x="349" fg:w="1"/><text x="56.4497%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.3607%" y="277" width="0.1610%" height="15" fill="rgb(218,1,36)" fg:x="350" fg:w="1"/><text x="56.6107%" y="287.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.3607%" y="261" width="0.1610%" height="15" fill="rgb(246,84,54)" fg:x="350" fg:w="1"/><text x="56.6107%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.3607%" y="245" width="0.1610%" height="15" fill="rgb(242,110,6)" fg:x="350" fg:w="1"/><text x="56.6107%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.3607%" y="229" width="0.1610%" height="15" fill="rgb(214,47,5)" fg:x="350" fg:w="1"/><text x="56.6107%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.3607%" y="213" width="0.1610%" height="15" fill="rgb(218,159,25)" fg:x="350" fg:w="1"/><text x="56.6107%" y="223.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="56.3607%" y="197" width="0.1610%" height="15" fill="rgb(215,211,28)" fg:x="350" fg:w="1"/><text x="56.6107%" y="207.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="56.3607%" y="181" width="0.1610%" height="15" fill="rgb(238,59,32)" fg:x="350" fg:w="1"/><text x="56.6107%" y="191.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="56.3607%" y="165" width="0.1610%" height="15" fill="rgb(226,82,3)" fg:x="350" fg:w="1"/><text x="56.6107%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (3 samples, 0.48%)</title><rect x="56.1997%" y="1093" width="0.4831%" height="15" fill="rgb(240,164,32)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="1077" width="0.4831%" height="15" fill="rgb(232,46,7)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="56.1997%" y="1061" width="0.4831%" height="15" fill="rgb(229,129,53)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1071.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="56.1997%" y="1045" width="0.4831%" height="15" fill="rgb(234,188,29)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="1029" width="0.4831%" height="15" fill="rgb(246,141,4)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="1013" width="0.4831%" height="15" fill="rgb(229,23,39)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="997" width="0.4831%" height="15" fill="rgb(206,12,3)" fg:x="349" fg:w="3"/><text x="56.4497%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="981" width="0.4831%" height="15" fill="rgb(252,226,20)" fg:x="349" fg:w="3"/><text x="56.4497%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="965" width="0.4831%" height="15" fill="rgb(216,123,35)" fg:x="349" fg:w="3"/><text x="56.4497%" y="975.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.48%)</title><rect x="56.1997%" y="949" width="0.4831%" height="15" fill="rgb(212,68,40)" fg:x="349" fg:w="3"/><text x="56.4497%" y="959.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="933" width="0.4831%" height="15" fill="rgb(254,125,32)" fg:x="349" fg:w="3"/><text x="56.4497%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (3 samples, 0.48%)</title><rect x="56.1997%" y="917" width="0.4831%" height="15" fill="rgb(253,97,22)" fg:x="349" fg:w="3"/><text x="56.4497%" y="927.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="901" width="0.4831%" height="15" fill="rgb(241,101,14)" fg:x="349" fg:w="3"/><text x="56.4497%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="56.1997%" y="885" width="0.4831%" height="15" fill="rgb(238,103,29)" fg:x="349" fg:w="3"/><text x="56.4497%" y="895.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="56.1997%" y="869" width="0.4831%" height="15" fill="rgb(233,195,47)" fg:x="349" fg:w="3"/><text x="56.4497%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="853" width="0.4831%" height="15" fill="rgb(246,218,30)" fg:x="349" fg:w="3"/><text x="56.4497%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="837" width="0.4831%" height="15" fill="rgb(219,145,47)" fg:x="349" fg:w="3"/><text x="56.4497%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="821" width="0.4831%" height="15" fill="rgb(243,12,26)" fg:x="349" fg:w="3"/><text x="56.4497%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="805" width="0.4831%" height="15" fill="rgb(214,87,16)" fg:x="349" fg:w="3"/><text x="56.4497%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="789" width="0.4831%" height="15" fill="rgb(208,99,42)" fg:x="349" fg:w="3"/><text x="56.4497%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="773" width="0.4831%" height="15" fill="rgb(253,99,2)" fg:x="349" fg:w="3"/><text x="56.4497%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="757" width="0.4831%" height="15" fill="rgb(220,168,23)" fg:x="349" fg:w="3"/><text x="56.4497%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="741" width="0.4831%" height="15" fill="rgb(242,38,24)" fg:x="349" fg:w="3"/><text x="56.4497%" y="751.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="56.1997%" y="725" width="0.4831%" height="15" fill="rgb(225,182,9)" fg:x="349" fg:w="3"/><text x="56.4497%" y="735.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="56.1997%" y="709" width="0.4831%" height="15" fill="rgb(243,178,37)" fg:x="349" fg:w="3"/><text x="56.4497%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="693" width="0.4831%" height="15" fill="rgb(232,139,19)" fg:x="349" fg:w="3"/><text x="56.4497%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="677" width="0.4831%" height="15" fill="rgb(225,201,24)" fg:x="349" fg:w="3"/><text x="56.4497%" y="687.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="56.1997%" y="661" width="0.4831%" height="15" fill="rgb(221,47,46)" fg:x="349" fg:w="3"/><text x="56.4497%" y="671.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="56.1997%" y="645" width="0.4831%" height="15" fill="rgb(249,23,13)" fg:x="349" fg:w="3"/><text x="56.4497%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="629" width="0.4831%" height="15" fill="rgb(219,9,5)" fg:x="349" fg:w="3"/><text x="56.4497%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="613" width="0.4831%" height="15" fill="rgb(254,171,16)" fg:x="349" fg:w="3"/><text x="56.4497%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="56.1997%" y="597" width="0.4831%" height="15" fill="rgb(230,171,20)" fg:x="349" fg:w="3"/><text x="56.4497%" y="607.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="56.1997%" y="581" width="0.4831%" height="15" fill="rgb(210,71,41)" fg:x="349" fg:w="3"/><text x="56.4497%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="565" width="0.4831%" height="15" fill="rgb(206,173,20)" fg:x="349" fg:w="3"/><text x="56.4497%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="549" width="0.4831%" height="15" fill="rgb(233,88,34)" fg:x="349" fg:w="3"/><text x="56.4497%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="56.1997%" y="533" width="0.4831%" height="15" fill="rgb(223,209,46)" fg:x="349" fg:w="3"/><text x="56.4497%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="56.1997%" y="517" width="0.4831%" height="15" fill="rgb(250,43,18)" fg:x="349" fg:w="3"/><text x="56.4497%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="56.3607%" y="501" width="0.3221%" height="15" fill="rgb(208,13,10)" fg:x="350" fg:w="2"/><text x="56.6107%" y="511.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="56.3607%" y="485" width="0.3221%" height="15" fill="rgb(212,200,36)" fg:x="350" fg:w="2"/><text x="56.6107%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="56.3607%" y="469" width="0.3221%" height="15" fill="rgb(225,90,30)" fg:x="350" fg:w="2"/><text x="56.6107%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="56.3607%" y="453" width="0.3221%" height="15" fill="rgb(236,182,39)" fg:x="350" fg:w="2"/><text x="56.6107%" y="463.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="56.3607%" y="437" width="0.3221%" height="15" fill="rgb(212,144,35)" fg:x="350" fg:w="2"/><text x="56.6107%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="56.3607%" y="421" width="0.3221%" height="15" fill="rgb(228,63,44)" fg:x="350" fg:w="2"/><text x="56.6107%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="56.3607%" y="405" width="0.3221%" height="15" fill="rgb(228,109,6)" fg:x="350" fg:w="2"/><text x="56.6107%" y="415.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="56.3607%" y="389" width="0.3221%" height="15" fill="rgb(238,117,24)" fg:x="350" fg:w="2"/><text x="56.6107%" y="399.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="56.3607%" y="373" width="0.3221%" height="15" fill="rgb(242,26,26)" fg:x="350" fg:w="2"/><text x="56.6107%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="56.3607%" y="357" width="0.3221%" height="15" fill="rgb(221,92,48)" fg:x="350" fg:w="2"/><text x="56.6107%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="56.3607%" y="341" width="0.3221%" height="15" fill="rgb(209,209,32)" fg:x="350" fg:w="2"/><text x="56.6107%" y="351.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="56.3607%" y="325" width="0.3221%" height="15" fill="rgb(221,70,22)" fg:x="350" fg:w="2"/><text x="56.6107%" y="335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="56.3607%" y="309" width="0.3221%" height="15" fill="rgb(248,145,5)" fg:x="350" fg:w="2"/><text x="56.6107%" y="319.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="56.3607%" y="293" width="0.3221%" height="15" fill="rgb(226,116,26)" fg:x="350" fg:w="2"/><text x="56.6107%" y="303.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="56.5217%" y="277" width="0.1610%" height="15" fill="rgb(244,5,17)" fg:x="351" fg:w="1"/><text x="56.7717%" y="287.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="56.5217%" y="261" width="0.1610%" height="15" fill="rgb(252,159,33)" fg:x="351" fg:w="1"/><text x="56.7717%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="245" width="0.1610%" height="15" fill="rgb(206,71,0)" fg:x="351" fg:w="1"/><text x="56.7717%" y="255.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.5217%" y="229" width="0.1610%" height="15" fill="rgb(233,118,54)" fg:x="351" fg:w="1"/><text x="56.7717%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="213" width="0.1610%" height="15" fill="rgb(234,83,48)" fg:x="351" fg:w="1"/><text x="56.7717%" y="223.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.5217%" y="197" width="0.1610%" height="15" fill="rgb(228,3,54)" fg:x="351" fg:w="1"/><text x="56.7717%" y="207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="181" width="0.1610%" height="15" fill="rgb(226,155,13)" fg:x="351" fg:w="1"/><text x="56.7717%" y="191.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.5217%" y="165" width="0.1610%" height="15" fill="rgb(241,28,37)" fg:x="351" fg:w="1"/><text x="56.7717%" y="175.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="149" width="0.1610%" height="15" fill="rgb(233,93,10)" fg:x="351" fg:w="1"/><text x="56.7717%" y="159.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.5217%" y="133" width="0.1610%" height="15" fill="rgb(225,113,19)" fg:x="351" fg:w="1"/><text x="56.7717%" y="143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="117" width="0.1610%" height="15" fill="rgb(241,2,18)" fg:x="351" fg:w="1"/><text x="56.7717%" y="127.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="56.5217%" y="101" width="0.1610%" height="15" fill="rgb(228,207,21)" fg:x="351" fg:w="1"/><text x="56.7717%" y="111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="85" width="0.1610%" height="15" fill="rgb(213,211,35)" fg:x="351" fg:w="1"/><text x="56.7717%" y="95.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="56.5217%" y="69" width="0.1610%" height="15" fill="rgb(209,83,10)" fg:x="351" fg:w="1"/><text x="56.7717%" y="79.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="56.5217%" y="53" width="0.1610%" height="15" fill="rgb(209,164,1)" fg:x="351" fg:w="1"/><text x="56.7717%" y="63.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="56.5217%" y="37" width="0.1610%" height="15" fill="rgb(213,184,43)" fg:x="351" fg:w="1"/><text x="56.7717%" y="47.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 3.86%)</title><rect x="52.9791%" y="1221" width="3.8647%" height="15" fill="rgb(231,61,34)" fg:x="329" fg:w="24"/><text x="53.2291%" y="1231.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (24 samples, 3.86%)</title><rect x="52.9791%" y="1205" width="3.8647%" height="15" fill="rgb(235,75,3)" fg:x="329" fg:w="24"/><text x="53.2291%" y="1215.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (24 samples, 3.86%)</title><rect x="52.9791%" y="1189" width="3.8647%" height="15" fill="rgb(220,106,47)" fg:x="329" fg:w="24"/><text x="53.2291%" y="1199.50">rayo..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.64%)</title><rect x="56.1997%" y="1173" width="0.6441%" height="15" fill="rgb(210,196,33)" fg:x="349" fg:w="4"/><text x="56.4497%" y="1183.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.64%)</title><rect x="56.1997%" y="1157" width="0.6441%" height="15" fill="rgb(229,154,42)" fg:x="349" fg:w="4"/><text x="56.4497%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 0.64%)</title><rect x="56.1997%" y="1141" width="0.6441%" height="15" fill="rgb(228,114,26)" fg:x="349" fg:w="4"/><text x="56.4497%" y="1151.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.64%)</title><rect x="56.1997%" y="1125" width="0.6441%" height="15" fill="rgb(208,144,1)" fg:x="349" fg:w="4"/><text x="56.4497%" y="1135.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (4 samples, 0.64%)</title><rect x="56.1997%" y="1109" width="0.6441%" height="15" fill="rgb(239,112,37)" fg:x="349" fg:w="4"/><text x="56.4497%" y="1119.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="56.6828%" y="1093" width="0.1610%" height="15" fill="rgb(210,96,50)" fg:x="352" fg:w="1"/><text x="56.9328%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (312 samples, 50.24%)</title><rect x="6.7633%" y="1285" width="50.2415%" height="15" fill="rgb(222,178,2)" fg:x="42" fg:w="312"/><text x="7.0133%" y="1295.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 4.03%)</title><rect x="52.9791%" y="1269" width="4.0258%" height="15" fill="rgb(226,74,18)" fg:x="329" fg:w="25"/><text x="53.2291%" y="1279.50">rayo..</text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 4.03%)</title><rect x="52.9791%" y="1253" width="4.0258%" height="15" fill="rgb(225,67,54)" fg:x="329" fg:w="25"/><text x="53.2291%" y="1263.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (25 samples, 4.03%)</title><rect x="52.9791%" y="1237" width="4.0258%" height="15" fill="rgb(251,92,32)" fg:x="329" fg:w="25"/><text x="53.2291%" y="1247.50">rayo..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="56.8438%" y="1221" width="0.1610%" height="15" fill="rgb(228,149,22)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1231.50"></text></g><g><title>tola::utils::build::process_content (1 samples, 0.16%)</title><rect x="56.8438%" y="1205" width="0.1610%" height="15" fill="rgb(243,54,13)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1215.50"></text></g><g><title>minify_html::minify (1 samples, 0.16%)</title><rect x="56.8438%" y="1189" width="0.1610%" height="15" fill="rgb(243,180,28)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1199.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="56.8438%" y="1173" width="0.1610%" height="15" fill="rgb(208,167,24)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1183.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="56.8438%" y="1157" width="0.1610%" height="15" fill="rgb(245,73,45)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1167.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="56.8438%" y="1141" width="0.1610%" height="15" fill="rgb(237,203,48)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1151.50"></text></g><g><title>minify_html::minify::attr::minify_attr (1 samples, 0.16%)</title><rect x="56.8438%" y="1125" width="0.1610%" height="15" fill="rgb(211,197,16)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1135.50"></text></g><g><title>minify_html::entity::encode::encode_entities (1 samples, 0.16%)</title><rect x="56.8438%" y="1109" width="0.1610%" height="15" fill="rgb(243,99,51)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1119.50"></text></g><g><title>_platform_memmove (1 samples, 0.16%)</title><rect x="56.8438%" y="1093" width="0.1610%" height="15" fill="rgb(215,123,29)" fg:x="353" fg:w="1"/><text x="57.0938%" y="1103.50"></text></g><g><title>minify_html::minify (1 samples, 0.16%)</title><rect x="57.0048%" y="1253" width="0.1610%" height="15" fill="rgb(239,186,37)" fg:x="354" fg:w="1"/><text x="57.2548%" y="1263.50"></text></g><g><title>minify_html::parse::content::parse_content (1 samples, 0.16%)</title><rect x="57.0048%" y="1237" width="0.1610%" height="15" fill="rgb(252,136,39)" fg:x="354" fg:w="1"/><text x="57.2548%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (316 samples, 50.89%)</title><rect x="6.4412%" y="1301" width="50.8857%" height="15" fill="rgb(223,213,32)" fg:x="40" fg:w="316"/><text x="6.6912%" y="1311.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.32%)</title><rect x="57.0048%" y="1285" width="0.3221%" height="15" fill="rgb(233,115,5)" fg:x="354" fg:w="2"/><text x="57.2548%" y="1295.50"></text></g><g><title>tola::utils::build::process_content (2 samples, 0.32%)</title><rect x="57.0048%" y="1269" width="0.3221%" height="15" fill="rgb(207,226,44)" fg:x="354" fg:w="2"/><text x="57.2548%" y="1279.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="57.1659%" y="1253" width="0.1610%" height="15" fill="rgb(208,126,0)" fg:x="355" fg:w="1"/><text x="57.4159%" y="1263.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="57.1659%" y="1237" width="0.1610%" height="15" fill="rgb(244,66,21)" fg:x="355" fg:w="1"/><text x="57.4159%" y="1247.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="57.1659%" y="1221" width="0.1610%" height="15" fill="rgb(222,97,12)" fg:x="355" fg:w="1"/><text x="57.4159%" y="1231.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="57.1659%" y="1205" width="0.1610%" height="15" fill="rgb(219,213,19)" fg:x="355" fg:w="1"/><text x="57.4159%" y="1215.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="57.1659%" y="1189" width="0.1610%" height="15" fill="rgb(252,169,30)" fg:x="355" fg:w="1"/><text x="57.4159%" y="1199.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="57.3269%" y="1189" width="0.1610%" height="15" fill="rgb(206,32,51)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1199.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="1173" width="0.1610%" height="15" fill="rgb(250,172,42)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 0.16%)</title><rect x="57.3269%" y="1157" width="0.1610%" height="15" fill="rgb(209,34,43)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="1141" width="0.1610%" height="15" fill="rgb(223,11,35)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="57.3269%" y="1125" width="0.1610%" height="15" fill="rgb(251,219,26)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1135.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="57.3269%" y="1109" width="0.1610%" height="15" fill="rgb(231,119,3)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="1093" width="0.1610%" height="15" fill="rgb(216,97,11)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="1077" width="0.1610%" height="15" fill="rgb(223,59,9)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="1061" width="0.1610%" height="15" fill="rgb(233,93,31)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="1045" width="0.1610%" height="15" fill="rgb(239,81,33)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="1029" width="0.1610%" height="15" fill="rgb(213,120,34)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1039.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="57.3269%" y="1013" width="0.1610%" height="15" fill="rgb(243,49,53)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1023.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="997" width="0.1610%" height="15" fill="rgb(247,216,33)" fg:x="356" fg:w="1"/><text x="57.5769%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 0.16%)</title><rect x="57.3269%" y="981" width="0.1610%" height="15" fill="rgb(226,26,14)" fg:x="356" fg:w="1"/><text x="57.5769%" y="991.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="965" width="0.1610%" height="15" fill="rgb(215,49,53)" fg:x="356" fg:w="1"/><text x="57.5769%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="949" width="0.1610%" height="15" fill="rgb(245,162,40)" fg:x="356" fg:w="1"/><text x="57.5769%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="933" width="0.1610%" height="15" fill="rgb(229,68,17)" fg:x="356" fg:w="1"/><text x="57.5769%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="917" width="0.1610%" height="15" fill="rgb(213,182,10)" fg:x="356" fg:w="1"/><text x="57.5769%" y="927.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="901" width="0.1610%" height="15" fill="rgb(245,125,30)" fg:x="356" fg:w="1"/><text x="57.5769%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="57.3269%" y="885" width="0.1610%" height="15" fill="rgb(232,202,2)" fg:x="356" fg:w="1"/><text x="57.5769%" y="895.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="57.3269%" y="869" width="0.1610%" height="15" fill="rgb(237,140,51)" fg:x="356" fg:w="1"/><text x="57.5769%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="853" width="0.1610%" height="15" fill="rgb(236,157,25)" fg:x="356" fg:w="1"/><text x="57.5769%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="837" width="0.1610%" height="15" fill="rgb(219,209,0)" fg:x="356" fg:w="1"/><text x="57.5769%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="821" width="0.1610%" height="15" fill="rgb(240,116,54)" fg:x="356" fg:w="1"/><text x="57.5769%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="805" width="0.1610%" height="15" fill="rgb(216,10,36)" fg:x="356" fg:w="1"/><text x="57.5769%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="789" width="0.1610%" height="15" fill="rgb(222,72,44)" fg:x="356" fg:w="1"/><text x="57.5769%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="773" width="0.1610%" height="15" fill="rgb(232,159,9)" fg:x="356" fg:w="1"/><text x="57.5769%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="757" width="0.1610%" height="15" fill="rgb(210,39,32)" fg:x="356" fg:w="1"/><text x="57.5769%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="741" width="0.1610%" height="15" fill="rgb(216,194,45)" fg:x="356" fg:w="1"/><text x="57.5769%" y="751.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="57.3269%" y="725" width="0.1610%" height="15" fill="rgb(218,18,35)" fg:x="356" fg:w="1"/><text x="57.5769%" y="735.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="57.3269%" y="709" width="0.1610%" height="15" fill="rgb(207,83,51)" fg:x="356" fg:w="1"/><text x="57.5769%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="693" width="0.1610%" height="15" fill="rgb(225,63,43)" fg:x="356" fg:w="1"/><text x="57.5769%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="677" width="0.1610%" height="15" fill="rgb(207,57,36)" fg:x="356" fg:w="1"/><text x="57.5769%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="661" width="0.1610%" height="15" fill="rgb(216,99,33)" fg:x="356" fg:w="1"/><text x="57.5769%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="57.3269%" y="645" width="0.1610%" height="15" fill="rgb(225,42,16)" fg:x="356" fg:w="1"/><text x="57.5769%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="629" width="0.1610%" height="15" fill="rgb(220,201,45)" fg:x="356" fg:w="1"/><text x="57.5769%" y="639.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="57.3269%" y="613" width="0.1610%" height="15" fill="rgb(225,33,4)" fg:x="356" fg:w="1"/><text x="57.5769%" y="623.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="57.3269%" y="597" width="0.1610%" height="15" fill="rgb(224,33,50)" fg:x="356" fg:w="1"/><text x="57.5769%" y="607.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="57.3269%" y="581" width="0.1610%" height="15" fill="rgb(246,198,51)" fg:x="356" fg:w="1"/><text x="57.5769%" y="591.50"></text></g><g><title>std::fs::DirBuilder::create (3 samples, 0.48%)</title><rect x="57.4879%" y="1077" width="0.4831%" height="15" fill="rgb(205,22,4)" fg:x="357" fg:w="3"/><text x="57.7379%" y="1087.50"></text></g><g><title>mkdir (3 samples, 0.48%)</title><rect x="57.4879%" y="1061" width="0.4831%" height="15" fill="rgb(206,3,8)" fg:x="357" fg:w="3"/><text x="57.7379%" y="1071.50"></text></g><g><title>fclonefileat (52 samples, 8.37%)</title><rect x="57.9710%" y="1061" width="8.3736%" height="15" fill="rgb(251,23,15)" fg:x="360" fg:w="52"/><text x="58.2210%" y="1071.50">fclonefileat</text></g><g><title>std::fs::OpenOptions::open (16 samples, 2.58%)</title><rect x="66.3446%" y="1061" width="2.5765%" height="15" fill="rgb(252,88,28)" fg:x="412" fg:w="16"/><text x="66.5946%" y="1071.50">st..</text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (16 samples, 2.58%)</title><rect x="66.3446%" y="1045" width="2.5765%" height="15" fill="rgb(212,127,14)" fg:x="412" fg:w="16"/><text x="66.5946%" y="1055.50">st..</text></g><g><title>__open (16 samples, 2.58%)</title><rect x="66.3446%" y="1029" width="2.5765%" height="15" fill="rgb(247,145,37)" fg:x="412" fg:w="16"/><text x="66.5946%" y="1039.50">__..</text></g><g><title>std::fs::copy (69 samples, 11.11%)</title><rect x="57.9710%" y="1077" width="11.1111%" height="15" fill="rgb(209,117,53)" fg:x="360" fg:w="69"/><text x="58.2210%" y="1087.50">std::fs::copy</text></g><g><title>std::sys::fs::unix::copy (1 samples, 0.16%)</title><rect x="68.9211%" y="1061" width="0.1610%" height="15" fill="rgb(212,90,42)" fg:x="428" fg:w="1"/><text x="69.1711%" y="1071.50"></text></g><g><title>std::fs::remove_file (29 samples, 4.67%)</title><rect x="69.0821%" y="1077" width="4.6699%" height="15" fill="rgb(218,164,37)" fg:x="429" fg:w="29"/><text x="69.3321%" y="1087.50">std::..</text></g><g><title>std::sys::fs::unix::unlink (29 samples, 4.67%)</title><rect x="69.0821%" y="1061" width="4.6699%" height="15" fill="rgb(246,65,34)" fg:x="429" fg:w="29"/><text x="69.3321%" y="1071.50">std::..</text></g><g><title>__unlink (29 samples, 4.67%)</title><rect x="69.0821%" y="1045" width="4.6699%" height="15" fill="rgb(231,100,33)" fg:x="429" fg:w="29"/><text x="69.3321%" y="1055.50">__unl..</text></g><g><title>std::path::Path::join (1 samples, 0.16%)</title><rect x="73.7520%" y="1077" width="0.1610%" height="15" fill="rgb(228,126,14)" fg:x="458" fg:w="1"/><text x="74.0020%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1 samples, 0.16%)</title><rect x="73.7520%" y="1061" width="0.1610%" height="15" fill="rgb(215,173,21)" fg:x="458" fg:w="1"/><text x="74.0020%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="73.7520%" y="1045" width="0.1610%" height="15" fill="rgb(210,6,40)" fg:x="458" fg:w="1"/><text x="74.0020%" y="1055.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.16%)</title><rect x="73.7520%" y="1029" width="0.1610%" height="15" fill="rgb(212,48,18)" fg:x="458" fg:w="1"/><text x="74.0020%" y="1039.50"></text></g><g><title>_realloc (1 samples, 0.16%)</title><rect x="73.7520%" y="1013" width="0.1610%" height="15" fill="rgb(230,214,11)" fg:x="458" fg:w="1"/><text x="74.0020%" y="1023.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.16%)</title><rect x="73.7520%" y="997" width="0.1610%" height="15" fill="rgb(254,105,39)" fg:x="458" fg:w="1"/><text x="74.0020%" y="1007.50"></text></g><g><title>_platform_memmove (1 samples, 0.16%)</title><rect x="73.7520%" y="981" width="0.1610%" height="15" fill="rgb(245,158,5)" fg:x="458" fg:w="1"/><text x="74.0020%" y="991.50"></text></g><g><title>std::fs::OpenOptions::open (5 samples, 0.81%)</title><rect x="73.9130%" y="1061" width="0.8052%" height="15" fill="rgb(249,208,11)" fg:x="459" fg:w="5"/><text x="74.1630%" y="1071.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (5 samples, 0.81%)</title><rect x="73.9130%" y="1045" width="0.8052%" height="15" fill="rgb(210,39,28)" fg:x="459" fg:w="5"/><text x="74.1630%" y="1055.50"></text></g><g><title>__open (5 samples, 0.81%)</title><rect x="73.9130%" y="1029" width="0.8052%" height="15" fill="rgb(211,56,53)" fg:x="459" fg:w="5"/><text x="74.1630%" y="1039.50"></text></g><g><title>std::fs::copy (1 samples, 0.16%)</title><rect x="74.7182%" y="1061" width="0.1610%" height="15" fill="rgb(226,201,30)" fg:x="464" fg:w="1"/><text x="74.9682%" y="1071.50"></text></g><g><title>fclonefileat (1 samples, 0.16%)</title><rect x="74.7182%" y="1045" width="0.1610%" height="15" fill="rgb(239,101,34)" fg:x="464" fg:w="1"/><text x="74.9682%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (109 samples, 17.55%)</title><rect x="57.4879%" y="1125" width="17.5523%" height="15" fill="rgb(226,209,5)" fg:x="357" fg:w="109"/><text x="57.7379%" y="1135.50">rayon_core::registry::in_wo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (109 samples, 17.55%)</title><rect x="57.4879%" y="1109" width="17.5523%" height="15" fill="rgb(250,105,47)" fg:x="357" fg:w="109"/><text x="57.7379%" y="1119.50">rayon::iter::plumbing::brid..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (109 samples, 17.55%)</title><rect x="57.4879%" y="1093" width="17.5523%" height="15" fill="rgb(230,72,3)" fg:x="357" fg:w="109"/><text x="57.7379%" y="1103.50">tola::build::build_site::_{..</text></g><g><title>tola::utils::build::process_asset (7 samples, 1.13%)</title><rect x="73.9130%" y="1077" width="1.1272%" height="15" fill="rgb(232,218,39)" fg:x="459" fg:w="7"/><text x="74.1630%" y="1087.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::unlock (1 samples, 0.16%)</title><rect x="74.8792%" y="1061" width="0.1610%" height="15" fill="rgb(248,166,6)" fg:x="465" fg:w="1"/><text x="75.1292%" y="1071.50"></text></g><g><title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.16%)</title><rect x="74.8792%" y="1045" width="0.1610%" height="15" fill="rgb(247,89,20)" fg:x="465" fg:w="1"/><text x="75.1292%" y="1055.50"></text></g><g><title>__psynch_mutexdrop (1 samples, 0.16%)</title><rect x="74.8792%" y="1029" width="0.1610%" height="15" fill="rgb(248,130,54)" fg:x="465" fg:w="1"/><text x="75.1292%" y="1039.50"></text></g><g><title>fclonefileat (2 samples, 0.32%)</title><rect x="75.0403%" y="1093" width="0.3221%" height="15" fill="rgb(234,196,4)" fg:x="466" fg:w="2"/><text x="75.2903%" y="1103.50"></text></g><g><title>std::fs::copy (4 samples, 0.64%)</title><rect x="75.0403%" y="1109" width="0.6441%" height="15" fill="rgb(250,143,31)" fg:x="466" fg:w="4"/><text x="75.2903%" y="1119.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.32%)</title><rect x="75.3623%" y="1093" width="0.3221%" height="15" fill="rgb(211,110,34)" fg:x="468" fg:w="2"/><text x="75.6123%" y="1103.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (2 samples, 0.32%)</title><rect x="75.3623%" y="1077" width="0.3221%" height="15" fill="rgb(215,124,48)" fg:x="468" fg:w="2"/><text x="75.6123%" y="1087.50"></text></g><g><title>__open (2 samples, 0.32%)</title><rect x="75.3623%" y="1061" width="0.3221%" height="15" fill="rgb(216,46,13)" fg:x="468" fg:w="2"/><text x="75.6123%" y="1071.50"></text></g><g><title>std::fs::remove_file (3 samples, 0.48%)</title><rect x="75.6844%" y="1109" width="0.4831%" height="15" fill="rgb(205,184,25)" fg:x="470" fg:w="3"/><text x="75.9344%" y="1119.50"></text></g><g><title>std::sys::fs::unix::unlink (3 samples, 0.48%)</title><rect x="75.6844%" y="1093" width="0.4831%" height="15" fill="rgb(228,1,10)" fg:x="470" fg:w="3"/><text x="75.9344%" y="1103.50"></text></g><g><title>__unlink (3 samples, 0.48%)</title><rect x="75.6844%" y="1077" width="0.4831%" height="15" fill="rgb(213,116,27)" fg:x="470" fg:w="3"/><text x="75.9344%" y="1087.50"></text></g><g><title>tola::utils::build::process_asset (1 samples, 0.16%)</title><rect x="76.1675%" y="1109" width="0.1610%" height="15" fill="rgb(241,95,50)" fg:x="473" fg:w="1"/><text x="76.4175%" y="1119.50"></text></g><g><title>tola::utils::log::log (1 samples, 0.16%)</title><rect x="76.1675%" y="1093" width="0.1610%" height="15" fill="rgb(238,48,32)" fg:x="473" fg:w="1"/><text x="76.4175%" y="1103.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.16%)</title><rect x="76.1675%" y="1077" width="0.1610%" height="15" fill="rgb(235,113,49)" fg:x="473" fg:w="1"/><text x="76.4175%" y="1087.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.16%)</title><rect x="76.1675%" y="1061" width="0.1610%" height="15" fill="rgb(205,127,43)" fg:x="473" fg:w="1"/><text x="76.4175%" y="1071.50"></text></g><g><title>__psynch_mutexwait (1 samples, 0.16%)</title><rect x="76.1675%" y="1045" width="0.1610%" height="15" fill="rgb(250,162,2)" fg:x="473" fg:w="1"/><text x="76.4175%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.16%)</title><rect x="76.3285%" y="965" width="0.1610%" height="15" fill="rgb(220,13,41)" fg:x="474" fg:w="1"/><text x="76.5785%" y="975.50"></text></g><g><title>minify_html_common::whitespace::collapse_whitespace (1 samples, 0.16%)</title><rect x="76.3285%" y="949" width="0.1610%" height="15" fill="rgb(249,221,25)" fg:x="474" fg:w="1"/><text x="76.5785%" y="959.50"></text></g><g><title>aho_corasick::automaton::Automaton::find_at_no_state (2 samples, 0.32%)</title><rect x="76.4895%" y="949" width="0.3221%" height="15" fill="rgb(215,208,19)" fg:x="475" fg:w="2"/><text x="76.7395%" y="959.50"></text></g><g><title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (2 samples, 0.32%)</title><rect x="76.4895%" y="933" width="0.3221%" height="15" fill="rgb(236,175,2)" fg:x="475" fg:w="2"/><text x="76.7395%" y="943.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (3 samples, 0.48%)</title><rect x="76.4895%" y="965" width="0.4831%" height="15" fill="rgb(241,52,2)" fg:x="475" fg:w="3"/><text x="76.7395%" y="975.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="76.8116%" y="949" width="0.1610%" height="15" fill="rgb(248,140,14)" fg:x="477" fg:w="1"/><text x="77.0616%" y="959.50"></text></g><g><title>DYLD-STUB$$memcpy (1 samples, 0.16%)</title><rect x="76.8116%" y="933" width="0.1610%" height="15" fill="rgb(253,22,42)" fg:x="477" fg:w="1"/><text x="77.0616%" y="943.50"></text></g><g><title>minify_html::minify::attr::encode_using_double_quotes (1 samples, 0.16%)</title><rect x="76.9726%" y="853" width="0.1610%" height="15" fill="rgb(234,61,47)" fg:x="478" fg:w="1"/><text x="77.2226%" y="863.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="76.9726%" y="837" width="0.1610%" height="15" fill="rgb(208,226,15)" fg:x="478" fg:w="1"/><text x="77.2226%" y="847.50"></text></g><g><title>nanov2_malloc_type_zero_on_alloc (1 samples, 0.16%)</title><rect x="76.9726%" y="821" width="0.1610%" height="15" fill="rgb(217,221,4)" fg:x="478" fg:w="1"/><text x="77.2226%" y="831.50"></text></g><g><title>minify_html::minify::attr::minify_attr (1 samples, 0.16%)</title><rect x="77.1337%" y="853" width="0.1610%" height="15" fill="rgb(212,174,34)" fg:x="479" fg:w="1"/><text x="77.3837%" y="863.50"></text></g><g><title>memchr::arch::generic::memchr::fwd_byte_by_byte (1 samples, 0.16%)</title><rect x="77.1337%" y="837" width="0.1610%" height="15" fill="rgb(253,83,4)" fg:x="479" fg:w="1"/><text x="77.3837%" y="847.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (1 samples, 0.16%)</title><rect x="77.2947%" y="805" width="0.1610%" height="15" fill="rgb(250,195,49)" fg:x="480" fg:w="1"/><text x="77.5447%" y="815.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="77.2947%" y="789" width="0.1610%" height="15" fill="rgb(241,192,25)" fg:x="480" fg:w="1"/><text x="77.5447%" y="799.50"></text></g><g><title>nanov2_malloc_type_zero_on_alloc (1 samples, 0.16%)</title><rect x="77.2947%" y="773" width="0.1610%" height="15" fill="rgb(208,124,10)" fg:x="480" fg:w="1"/><text x="77.5447%" y="783.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="77.2947%" y="853" width="0.3221%" height="15" fill="rgb(222,33,0)" fg:x="480" fg:w="2"/><text x="77.5447%" y="863.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="77.2947%" y="837" width="0.3221%" height="15" fill="rgb(234,209,28)" fg:x="480" fg:w="2"/><text x="77.5447%" y="847.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="77.2947%" y="821" width="0.3221%" height="15" fill="rgb(224,11,23)" fg:x="480" fg:w="2"/><text x="77.5447%" y="831.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="77.4557%" y="805" width="0.1610%" height="15" fill="rgb(232,99,1)" fg:x="481" fg:w="1"/><text x="77.7057%" y="815.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.16%)</title><rect x="77.4557%" y="789" width="0.1610%" height="15" fill="rgb(237,95,45)" fg:x="481" fg:w="1"/><text x="77.7057%" y="799.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="1077" width="1.4493%" height="15" fill="rgb(208,109,11)" fg:x="474" fg:w="9"/><text x="76.5785%" y="1087.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="1061" width="1.4493%" height="15" fill="rgb(216,190,48)" fg:x="474" fg:w="9"/><text x="76.5785%" y="1071.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="1045" width="1.4493%" height="15" fill="rgb(251,171,36)" fg:x="474" fg:w="9"/><text x="76.5785%" y="1055.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="1029" width="1.4493%" height="15" fill="rgb(230,62,22)" fg:x="474" fg:w="9"/><text x="76.5785%" y="1039.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="1013" width="1.4493%" height="15" fill="rgb(225,114,35)" fg:x="474" fg:w="9"/><text x="76.5785%" y="1023.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="997" width="1.4493%" height="15" fill="rgb(215,118,42)" fg:x="474" fg:w="9"/><text x="76.5785%" y="1007.50"></text></g><g><title>minify_html::minify::element::minify_element (9 samples, 1.45%)</title><rect x="76.3285%" y="981" width="1.4493%" height="15" fill="rgb(243,119,21)" fg:x="474" fg:w="9"/><text x="76.5785%" y="991.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="965" width="0.8052%" height="15" fill="rgb(252,177,53)" fg:x="478" fg:w="5"/><text x="77.2226%" y="975.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="949" width="0.8052%" height="15" fill="rgb(237,209,29)" fg:x="478" fg:w="5"/><text x="77.2226%" y="959.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="933" width="0.8052%" height="15" fill="rgb(212,65,23)" fg:x="478" fg:w="5"/><text x="77.2226%" y="943.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="917" width="0.8052%" height="15" fill="rgb(230,222,46)" fg:x="478" fg:w="5"/><text x="77.2226%" y="927.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="901" width="0.8052%" height="15" fill="rgb(215,135,32)" fg:x="478" fg:w="5"/><text x="77.2226%" y="911.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="885" width="0.8052%" height="15" fill="rgb(246,101,22)" fg:x="478" fg:w="5"/><text x="77.2226%" y="895.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="76.9726%" y="869" width="0.8052%" height="15" fill="rgb(206,107,13)" fg:x="478" fg:w="5"/><text x="77.2226%" y="879.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="77.6167%" y="853" width="0.1610%" height="15" fill="rgb(250,100,44)" fg:x="482" fg:w="1"/><text x="77.8667%" y="863.50"></text></g><g><title>_nanov2_free (1 samples, 0.16%)</title><rect x="77.6167%" y="837" width="0.1610%" height="15" fill="rgb(231,147,38)" fg:x="482" fg:w="1"/><text x="77.8667%" y="847.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="77.7778%" y="949" width="0.1610%" height="15" fill="rgb(229,8,40)" fg:x="483" fg:w="1"/><text x="78.0278%" y="959.50"></text></g><g><title>minify_html::parse::Code::slice_and_shift_while_not_in_lookup (1 samples, 0.16%)</title><rect x="77.7778%" y="933" width="0.1610%" height="15" fill="rgb(221,135,30)" fg:x="483" fg:w="1"/><text x="78.0278%" y="943.50"></text></g><g><title>minify_html::minify (11 samples, 1.77%)</title><rect x="76.3285%" y="1093" width="1.7713%" height="15" fill="rgb(249,193,18)" fg:x="474" fg:w="11"/><text x="76.5785%" y="1103.50">m..</text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="1077" width="0.3221%" height="15" fill="rgb(209,133,39)" fg:x="483" fg:w="2"/><text x="78.0278%" y="1087.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="1061" width="0.3221%" height="15" fill="rgb(232,100,14)" fg:x="483" fg:w="2"/><text x="78.0278%" y="1071.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="1045" width="0.3221%" height="15" fill="rgb(224,185,1)" fg:x="483" fg:w="2"/><text x="78.0278%" y="1055.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="1029" width="0.3221%" height="15" fill="rgb(223,139,8)" fg:x="483" fg:w="2"/><text x="78.0278%" y="1039.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="1013" width="0.3221%" height="15" fill="rgb(232,213,38)" fg:x="483" fg:w="2"/><text x="78.0278%" y="1023.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="997" width="0.3221%" height="15" fill="rgb(207,94,22)" fg:x="483" fg:w="2"/><text x="78.0278%" y="1007.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="981" width="0.3221%" height="15" fill="rgb(219,183,54)" fg:x="483" fg:w="2"/><text x="78.0278%" y="991.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="77.7778%" y="965" width="0.3221%" height="15" fill="rgb(216,185,54)" fg:x="483" fg:w="2"/><text x="78.0278%" y="975.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="949" width="0.1610%" height="15" fill="rgb(254,217,39)" fg:x="484" fg:w="1"/><text x="78.1888%" y="959.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="933" width="0.1610%" height="15" fill="rgb(240,178,23)" fg:x="484" fg:w="1"/><text x="78.1888%" y="943.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="917" width="0.1610%" height="15" fill="rgb(218,11,47)" fg:x="484" fg:w="1"/><text x="78.1888%" y="927.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="901" width="0.1610%" height="15" fill="rgb(218,51,51)" fg:x="484" fg:w="1"/><text x="78.1888%" y="911.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="885" width="0.1610%" height="15" fill="rgb(238,126,27)" fg:x="484" fg:w="1"/><text x="78.1888%" y="895.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="869" width="0.1610%" height="15" fill="rgb(249,202,22)" fg:x="484" fg:w="1"/><text x="78.1888%" y="879.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="77.9388%" y="853" width="0.1610%" height="15" fill="rgb(254,195,49)" fg:x="484" fg:w="1"/><text x="78.1888%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="77.9388%" y="837" width="0.1610%" height="15" fill="rgb(208,123,14)" fg:x="484" fg:w="1"/><text x="78.1888%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.16%)</title><rect x="77.9388%" y="821" width="0.1610%" height="15" fill="rgb(224,200,8)" fg:x="484" fg:w="1"/><text x="78.1888%" y="831.50"></text></g><g><title>ahash::operations::read_small (1 samples, 0.16%)</title><rect x="77.9388%" y="805" width="0.1610%" height="15" fill="rgb(217,61,36)" fg:x="484" fg:w="1"/><text x="78.1888%" y="815.50"></text></g><g><title>std::fs::write (1 samples, 0.16%)</title><rect x="78.0998%" y="1093" width="0.1610%" height="15" fill="rgb(206,35,45)" fg:x="485" fg:w="1"/><text x="78.3498%" y="1103.50"></text></g><g><title>write (1 samples, 0.16%)</title><rect x="78.0998%" y="1077" width="0.1610%" height="15" fill="rgb(217,65,33)" fg:x="485" fg:w="1"/><text x="78.3498%" y="1087.50"></text></g><g><title>tola::utils::build::process_link_in_html (1 samples, 0.16%)</title><rect x="78.2609%" y="1093" width="0.1610%" height="15" fill="rgb(222,158,48)" fg:x="486" fg:w="1"/><text x="78.5109%" y="1103.50"></text></g><g><title>_nanov2_free (1 samples, 0.16%)</title><rect x="78.2609%" y="1077" width="0.1610%" height="15" fill="rgb(254,2,54)" fg:x="486" fg:w="1"/><text x="78.5109%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (131 samples, 21.10%)</title><rect x="57.4879%" y="1157" width="21.0950%" height="15" fill="rgb(250,143,38)" fg:x="357" fg:w="131"/><text x="57.7379%" y="1167.50">rayon_core::registry::in_worker</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (131 samples, 21.10%)</title><rect x="57.4879%" y="1141" width="21.0950%" height="15" fill="rgb(248,25,0)" fg:x="357" fg:w="131"/><text x="57.7379%" y="1151.50">rayon::iter::plumbing::bridge_pro..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (22 samples, 3.54%)</title><rect x="75.0403%" y="1125" width="3.5427%" height="15" fill="rgb(206,152,27)" fg:x="466" fg:w="22"/><text x="75.2903%" y="1135.50">tola..</text></g><g><title>tola::utils::build::process_content (14 samples, 2.25%)</title><rect x="76.3285%" y="1109" width="2.2544%" height="15" fill="rgb(240,77,30)" fg:x="474" fg:w="14"/><text x="76.5785%" y="1119.50">t..</text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="78.4219%" y="1093" width="0.1610%" height="15" fill="rgb(231,5,3)" fg:x="487" fg:w="1"/><text x="78.6719%" y="1103.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="78.4219%" y="1077" width="0.1610%" height="15" fill="rgb(207,226,32)" fg:x="487" fg:w="1"/><text x="78.6719%" y="1087.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="78.4219%" y="1061" width="0.1610%" height="15" fill="rgb(222,207,47)" fg:x="487" fg:w="1"/><text x="78.6719%" y="1071.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="78.4219%" y="1045" width="0.1610%" height="15" fill="rgb(229,115,45)" fg:x="487" fg:w="1"/><text x="78.6719%" y="1055.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="78.4219%" y="1029" width="0.1610%" height="15" fill="rgb(224,191,6)" fg:x="487" fg:w="1"/><text x="78.6719%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (132 samples, 21.26%)</title><rect x="57.4879%" y="1173" width="21.2560%" height="15" fill="rgb(230,227,24)" fg:x="357" fg:w="132"/><text x="57.7379%" y="1183.50">rayon::iter::plumbing::bridge_prod..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="78.5829%" y="1157" width="0.1610%" height="15" fill="rgb(228,80,19)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1167.50"></text></g><g><title>tola::utils::build::process_content (1 samples, 0.16%)</title><rect x="78.5829%" y="1141" width="0.1610%" height="15" fill="rgb(247,229,0)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1151.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="78.5829%" y="1125" width="0.1610%" height="15" fill="rgb(237,194,15)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1135.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="78.5829%" y="1109" width="0.1610%" height="15" fill="rgb(219,203,20)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1119.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="78.5829%" y="1093" width="0.1610%" height="15" fill="rgb(234,128,8)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1103.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="78.5829%" y="1077" width="0.1610%" height="15" fill="rgb(248,202,8)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1087.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="78.5829%" y="1061" width="0.1610%" height="15" fill="rgb(206,104,37)" fg:x="488" fg:w="1"/><text x="78.8329%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (133 samples, 21.42%)</title><rect x="57.4879%" y="1189" width="21.4171%" height="15" fill="rgb(223,8,27)" fg:x="357" fg:w="133"/><text x="57.7379%" y="1199.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="78.7440%" y="1173" width="0.1610%" height="15" fill="rgb(216,217,28)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1183.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="78.7440%" y="1157" width="0.1610%" height="15" fill="rgb(249,199,1)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="78.7440%" y="1141" width="0.1610%" height="15" fill="rgb(240,85,17)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="78.7440%" y="1125" width="0.1610%" height="15" fill="rgb(206,108,45)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="78.7440%" y="1109" width="0.1610%" height="15" fill="rgb(245,210,41)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="78.7440%" y="1093" width="0.1610%" height="15" fill="rgb(206,13,37)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="78.7440%" y="1077" width="0.1610%" height="15" fill="rgb(250,61,18)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1087.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="78.7440%" y="1061" width="0.1610%" height="15" fill="rgb(235,172,48)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1071.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="78.7440%" y="1045" width="0.1610%" height="15" fill="rgb(249,201,17)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1055.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="78.7440%" y="1029" width="0.1610%" height="15" fill="rgb(219,208,6)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1039.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="78.7440%" y="1013" width="0.1610%" height="15" fill="rgb(248,31,23)" fg:x="489" fg:w="1"/><text x="78.9940%" y="1023.50"></text></g><g><title>std::fs::canonicalize (1 samples, 0.16%)</title><rect x="78.9050%" y="1173" width="0.1610%" height="15" fill="rgb(245,15,42)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1183.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.16%)</title><rect x="78.9050%" y="1157" width="0.1610%" height="15" fill="rgb(222,217,39)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1167.50"></text></g><g><title>std::sys::fs::unix::canonicalize (1 samples, 0.16%)</title><rect x="78.9050%" y="1141" width="0.1610%" height="15" fill="rgb(210,219,27)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1151.50"></text></g><g><title>realpath$DARWIN_EXTSN (1 samples, 0.16%)</title><rect x="78.9050%" y="1125" width="0.1610%" height="15" fill="rgb(252,166,36)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1135.50"></text></g><g><title>__private_getcwd (1 samples, 0.16%)</title><rect x="78.9050%" y="1109" width="0.1610%" height="15" fill="rgb(245,132,34)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1119.50"></text></g><g><title>__getcwd (1 samples, 0.16%)</title><rect x="78.9050%" y="1093" width="0.1610%" height="15" fill="rgb(236,54,3)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1103.50"></text></g><g><title>__open_nocancel (1 samples, 0.16%)</title><rect x="78.9050%" y="1077" width="0.1610%" height="15" fill="rgb(241,173,43)" fg:x="490" fg:w="1"/><text x="79.1550%" y="1087.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="79.0660%" y="1173" width="0.1610%" height="15" fill="rgb(215,190,9)" fg:x="491" fg:w="1"/><text x="79.3160%" y="1183.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="79.0660%" y="1157" width="0.1610%" height="15" fill="rgb(242,101,16)" fg:x="491" fg:w="1"/><text x="79.3160%" y="1167.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="79.0660%" y="1141" width="0.1610%" height="15" fill="rgb(223,190,21)" fg:x="491" fg:w="1"/><text x="79.3160%" y="1151.50"></text></g><g><title>tola::utils::build::process_asset (1 samples, 0.16%)</title><rect x="79.2271%" y="1173" width="0.1610%" height="15" fill="rgb(215,228,25)" fg:x="492" fg:w="1"/><text x="79.4771%" y="1183.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="79.2271%" y="1157" width="0.1610%" height="15" fill="rgb(225,36,22)" fg:x="492" fg:w="1"/><text x="79.4771%" y="1167.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="79.2271%" y="1141" width="0.1610%" height="15" fill="rgb(251,106,46)" fg:x="492" fg:w="1"/><text x="79.4771%" y="1151.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="79.2271%" y="1125" width="0.1610%" height="15" fill="rgb(208,90,1)" fg:x="492" fg:w="1"/><text x="79.4771%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.16%)</title><rect x="79.3881%" y="1013" width="0.1610%" height="15" fill="rgb(243,10,4)" fg:x="493" fg:w="1"/><text x="79.6381%" y="1023.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (2 samples, 0.32%)</title><rect x="79.3881%" y="1029" width="0.3221%" height="15" fill="rgb(212,137,27)" fg:x="493" fg:w="2"/><text x="79.6381%" y="1039.50"></text></g><g><title>aho_corasick::automaton::Automaton::find_at_no_state (1 samples, 0.16%)</title><rect x="79.5491%" y="1013" width="0.1610%" height="15" fill="rgb(231,220,49)" fg:x="494" fg:w="1"/><text x="79.7991%" y="1023.50"></text></g><g><title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state_imp (1 samples, 0.16%)</title><rect x="79.5491%" y="997" width="0.1610%" height="15" fill="rgb(237,96,20)" fg:x="494" fg:w="1"/><text x="79.7991%" y="1007.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="79.7101%" y="709" width="0.1610%" height="15" fill="rgb(239,229,30)" fg:x="495" fg:w="1"/><text x="79.9601%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.16%)</title><rect x="79.7101%" y="693" width="0.1610%" height="15" fill="rgb(219,65,33)" fg:x="495" fg:w="1"/><text x="79.9601%" y="703.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (1 samples, 0.16%)</title><rect x="79.8712%" y="693" width="0.1610%" height="15" fill="rgb(243,134,7)" fg:x="496" fg:w="1"/><text x="80.1212%" y="703.50"></text></g><g><title>aho_corasick::automaton::Automaton::leftmost_find_at_no_state (1 samples, 0.16%)</title><rect x="79.8712%" y="677" width="0.1610%" height="15" fill="rgb(216,177,54)" fg:x="496" fg:w="1"/><text x="80.1212%" y="687.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1141" width="0.8052%" height="15" fill="rgb(211,160,20)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1151.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1125" width="0.8052%" height="15" fill="rgb(239,85,39)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1135.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1109" width="0.8052%" height="15" fill="rgb(232,125,22)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1119.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1093" width="0.8052%" height="15" fill="rgb(244,57,34)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1103.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1077" width="0.8052%" height="15" fill="rgb(214,203,32)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1087.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1061" width="0.8052%" height="15" fill="rgb(207,58,43)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1071.50"></text></g><g><title>minify_html::minify::element::minify_element (5 samples, 0.81%)</title><rect x="79.3881%" y="1045" width="0.8052%" height="15" fill="rgb(215,193,15)" fg:x="493" fg:w="5"/><text x="79.6381%" y="1055.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="1029" width="0.4831%" height="15" fill="rgb(232,15,44)" fg:x="495" fg:w="3"/><text x="79.9601%" y="1039.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="1013" width="0.4831%" height="15" fill="rgb(212,3,48)" fg:x="495" fg:w="3"/><text x="79.9601%" y="1023.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="997" width="0.4831%" height="15" fill="rgb(218,128,7)" fg:x="495" fg:w="3"/><text x="79.9601%" y="1007.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="981" width="0.4831%" height="15" fill="rgb(226,216,39)" fg:x="495" fg:w="3"/><text x="79.9601%" y="991.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="965" width="0.4831%" height="15" fill="rgb(243,47,51)" fg:x="495" fg:w="3"/><text x="79.9601%" y="975.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="949" width="0.4831%" height="15" fill="rgb(241,183,40)" fg:x="495" fg:w="3"/><text x="79.9601%" y="959.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="933" width="0.4831%" height="15" fill="rgb(231,217,32)" fg:x="495" fg:w="3"/><text x="79.9601%" y="943.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="917" width="0.4831%" height="15" fill="rgb(229,61,38)" fg:x="495" fg:w="3"/><text x="79.9601%" y="927.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="901" width="0.4831%" height="15" fill="rgb(225,210,5)" fg:x="495" fg:w="3"/><text x="79.9601%" y="911.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="885" width="0.4831%" height="15" fill="rgb(231,79,45)" fg:x="495" fg:w="3"/><text x="79.9601%" y="895.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="869" width="0.4831%" height="15" fill="rgb(224,100,7)" fg:x="495" fg:w="3"/><text x="79.9601%" y="879.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="853" width="0.4831%" height="15" fill="rgb(241,198,18)" fg:x="495" fg:w="3"/><text x="79.9601%" y="863.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="837" width="0.4831%" height="15" fill="rgb(252,97,53)" fg:x="495" fg:w="3"/><text x="79.9601%" y="847.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="821" width="0.4831%" height="15" fill="rgb(220,88,7)" fg:x="495" fg:w="3"/><text x="79.9601%" y="831.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="805" width="0.4831%" height="15" fill="rgb(213,176,14)" fg:x="495" fg:w="3"/><text x="79.9601%" y="815.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="789" width="0.4831%" height="15" fill="rgb(246,73,7)" fg:x="495" fg:w="3"/><text x="79.9601%" y="799.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="773" width="0.4831%" height="15" fill="rgb(245,64,36)" fg:x="495" fg:w="3"/><text x="79.9601%" y="783.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="757" width="0.4831%" height="15" fill="rgb(245,80,10)" fg:x="495" fg:w="3"/><text x="79.9601%" y="767.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="741" width="0.4831%" height="15" fill="rgb(232,107,50)" fg:x="495" fg:w="3"/><text x="79.9601%" y="751.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="79.7101%" y="725" width="0.4831%" height="15" fill="rgb(253,3,0)" fg:x="495" fg:w="3"/><text x="79.9601%" y="735.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="79.8712%" y="709" width="0.3221%" height="15" fill="rgb(212,99,53)" fg:x="496" fg:w="2"/><text x="80.1212%" y="719.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="80.0322%" y="693" width="0.1610%" height="15" fill="rgb(249,111,54)" fg:x="497" fg:w="1"/><text x="80.2822%" y="703.50"></text></g><g><title>free_tiny (1 samples, 0.16%)</title><rect x="80.0322%" y="677" width="0.1610%" height="15" fill="rgb(249,55,30)" fg:x="497" fg:w="1"/><text x="80.2822%" y="687.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.16%)</title><rect x="80.0322%" y="661" width="0.1610%" height="15" fill="rgb(237,47,42)" fg:x="497" fg:w="1"/><text x="80.2822%" y="671.50"></text></g><g><title>tiny_free_scan_madvise_free (1 samples, 0.16%)</title><rect x="80.0322%" y="645" width="0.1610%" height="15" fill="rgb(211,20,18)" fg:x="497" fg:w="1"/><text x="80.2822%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.16%)</title><rect x="80.1932%" y="901" width="0.1610%" height="15" fill="rgb(231,203,46)" fg:x="498" fg:w="1"/><text x="80.4432%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1 samples, 0.16%)</title><rect x="80.1932%" y="885" width="0.1610%" height="15" fill="rgb(237,142,3)" fg:x="498" fg:w="1"/><text x="80.4432%" y="895.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.16%)</title><rect x="80.1932%" y="869" width="0.1610%" height="15" fill="rgb(241,107,1)" fg:x="498" fg:w="1"/><text x="80.4432%" y="879.50"></text></g><g><title>_realloc (1 samples, 0.16%)</title><rect x="80.1932%" y="853" width="0.1610%" height="15" fill="rgb(229,83,13)" fg:x="498" fg:w="1"/><text x="80.4432%" y="863.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.16%)</title><rect x="80.1932%" y="837" width="0.1610%" height="15" fill="rgb(241,91,40)" fg:x="498" fg:w="1"/><text x="80.4432%" y="847.50"></text></g><g><title>szone_realloc (1 samples, 0.16%)</title><rect x="80.1932%" y="821" width="0.1610%" height="15" fill="rgb(225,3,45)" fg:x="498" fg:w="1"/><text x="80.4432%" y="831.50"></text></g><g><title>free_small (1 samples, 0.16%)</title><rect x="80.1932%" y="805" width="0.1610%" height="15" fill="rgb(244,223,14)" fg:x="498" fg:w="1"/><text x="80.4432%" y="815.50"></text></g><g><title>minify_html::minify (7 samples, 1.13%)</title><rect x="79.3881%" y="1157" width="1.1272%" height="15" fill="rgb(224,124,37)" fg:x="493" fg:w="7"/><text x="79.6381%" y="1167.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1141" width="0.3221%" height="15" fill="rgb(251,171,30)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1151.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1125" width="0.3221%" height="15" fill="rgb(236,46,54)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1135.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1109" width="0.3221%" height="15" fill="rgb(245,213,5)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1119.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1093" width="0.3221%" height="15" fill="rgb(230,144,27)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1103.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1077" width="0.3221%" height="15" fill="rgb(220,86,6)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1087.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1061" width="0.3221%" height="15" fill="rgb(240,20,13)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1071.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1045" width="0.3221%" height="15" fill="rgb(217,89,34)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1055.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1029" width="0.3221%" height="15" fill="rgb(229,13,5)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1039.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="1013" width="0.3221%" height="15" fill="rgb(244,67,35)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1023.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="997" width="0.3221%" height="15" fill="rgb(221,40,2)" fg:x="498" fg:w="2"/><text x="80.4432%" y="1007.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="981" width="0.3221%" height="15" fill="rgb(237,157,21)" fg:x="498" fg:w="2"/><text x="80.4432%" y="991.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="965" width="0.3221%" height="15" fill="rgb(222,94,11)" fg:x="498" fg:w="2"/><text x="80.4432%" y="975.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="949" width="0.3221%" height="15" fill="rgb(249,113,6)" fg:x="498" fg:w="2"/><text x="80.4432%" y="959.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="933" width="0.3221%" height="15" fill="rgb(238,137,36)" fg:x="498" fg:w="2"/><text x="80.4432%" y="943.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="80.1932%" y="917" width="0.3221%" height="15" fill="rgb(210,102,26)" fg:x="498" fg:w="2"/><text x="80.4432%" y="927.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="901" width="0.1610%" height="15" fill="rgb(218,30,30)" fg:x="499" fg:w="1"/><text x="80.6043%" y="911.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="885" width="0.1610%" height="15" fill="rgb(214,67,26)" fg:x="499" fg:w="1"/><text x="80.6043%" y="895.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="869" width="0.1610%" height="15" fill="rgb(251,9,53)" fg:x="499" fg:w="1"/><text x="80.6043%" y="879.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="853" width="0.1610%" height="15" fill="rgb(228,204,25)" fg:x="499" fg:w="1"/><text x="80.6043%" y="863.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="837" width="0.1610%" height="15" fill="rgb(207,153,8)" fg:x="499" fg:w="1"/><text x="80.6043%" y="847.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="821" width="0.1610%" height="15" fill="rgb(242,9,16)" fg:x="499" fg:w="1"/><text x="80.6043%" y="831.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="805" width="0.1610%" height="15" fill="rgb(217,211,10)" fg:x="499" fg:w="1"/><text x="80.6043%" y="815.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="789" width="0.1610%" height="15" fill="rgb(219,228,52)" fg:x="499" fg:w="1"/><text x="80.6043%" y="799.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="773" width="0.1610%" height="15" fill="rgb(231,92,29)" fg:x="499" fg:w="1"/><text x="80.6043%" y="783.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="757" width="0.1610%" height="15" fill="rgb(232,8,23)" fg:x="499" fg:w="1"/><text x="80.6043%" y="767.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="741" width="0.1610%" height="15" fill="rgb(216,211,34)" fg:x="499" fg:w="1"/><text x="80.6043%" y="751.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="725" width="0.1610%" height="15" fill="rgb(236,151,0)" fg:x="499" fg:w="1"/><text x="80.6043%" y="735.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="709" width="0.1610%" height="15" fill="rgb(209,168,3)" fg:x="499" fg:w="1"/><text x="80.6043%" y="719.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="693" width="0.1610%" height="15" fill="rgb(208,129,28)" fg:x="499" fg:w="1"/><text x="80.6043%" y="703.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="677" width="0.1610%" height="15" fill="rgb(229,78,22)" fg:x="499" fg:w="1"/><text x="80.6043%" y="687.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="661" width="0.1610%" height="15" fill="rgb(228,187,13)" fg:x="499" fg:w="1"/><text x="80.6043%" y="671.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="645" width="0.1610%" height="15" fill="rgb(240,119,24)" fg:x="499" fg:w="1"/><text x="80.6043%" y="655.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="629" width="0.1610%" height="15" fill="rgb(209,194,42)" fg:x="499" fg:w="1"/><text x="80.6043%" y="639.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="613" width="0.1610%" height="15" fill="rgb(247,200,46)" fg:x="499" fg:w="1"/><text x="80.6043%" y="623.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="80.3543%" y="597" width="0.1610%" height="15" fill="rgb(218,76,16)" fg:x="499" fg:w="1"/><text x="80.6043%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="80.3543%" y="581" width="0.1610%" height="15" fill="rgb(225,21,48)" fg:x="499" fg:w="1"/><text x="80.6043%" y="591.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="80.3543%" y="565" width="0.1610%" height="15" fill="rgb(239,223,50)" fg:x="499" fg:w="1"/><text x="80.6043%" y="575.50"></text></g><g><title>nanov2_malloc_type_zero_on_alloc (1 samples, 0.16%)</title><rect x="80.3543%" y="549" width="0.1610%" height="15" fill="rgb(244,45,21)" fg:x="499" fg:w="1"/><text x="80.6043%" y="559.50"></text></g><g><title>_platform_memset (1 samples, 0.16%)</title><rect x="80.3543%" y="533" width="0.1610%" height="15" fill="rgb(232,33,43)" fg:x="499" fg:w="1"/><text x="80.6043%" y="543.50"></text></g><g><title>std::fs::write (1 samples, 0.16%)</title><rect x="80.5153%" y="1157" width="0.1610%" height="15" fill="rgb(209,8,3)" fg:x="500" fg:w="1"/><text x="80.7653%" y="1167.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="80.5153%" y="1141" width="0.1610%" height="15" fill="rgb(214,25,53)" fg:x="500" fg:w="1"/><text x="80.7653%" y="1151.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="80.5153%" y="1125" width="0.1610%" height="15" fill="rgb(254,186,54)" fg:x="500" fg:w="1"/><text x="80.7653%" y="1135.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="80.5153%" y="1109" width="0.1610%" height="15" fill="rgb(208,174,49)" fg:x="500" fg:w="1"/><text x="80.7653%" y="1119.50"></text></g><g><title>tola::utils::build::process_link_in_html (1 samples, 0.16%)</title><rect x="80.6763%" y="1157" width="0.1610%" height="15" fill="rgb(233,191,51)" fg:x="501" fg:w="1"/><text x="80.9263%" y="1167.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="80.6763%" y="1141" width="0.1610%" height="15" fill="rgb(222,134,10)" fg:x="501" fg:w="1"/><text x="80.9263%" y="1151.50"></text></g><g><title>__bzero (1 samples, 0.16%)</title><rect x="80.6763%" y="1125" width="0.1610%" height="15" fill="rgb(230,226,20)" fg:x="501" fg:w="1"/><text x="80.9263%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (147 samples, 23.67%)</title><rect x="57.3269%" y="1205" width="23.6715%" height="15" fill="rgb(251,111,25)" fg:x="356" fg:w="147"/><text x="57.5769%" y="1215.50">rayon::iter::plumbing::bridge_producer..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (13 samples, 2.09%)</title><rect x="78.9050%" y="1189" width="2.0934%" height="15" fill="rgb(224,40,46)" fg:x="490" fg:w="13"/><text x="79.1550%" y="1199.50">t..</text></g><g><title>tola::utils::build::process_content (10 samples, 1.61%)</title><rect x="79.3881%" y="1173" width="1.6103%" height="15" fill="rgb(236,108,47)" fg:x="493" fg:w="10"/><text x="79.6381%" y="1183.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="80.8374%" y="1157" width="0.1610%" height="15" fill="rgb(234,93,0)" fg:x="502" fg:w="1"/><text x="81.0874%" y="1167.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="80.8374%" y="1141" width="0.1610%" height="15" fill="rgb(224,213,32)" fg:x="502" fg:w="1"/><text x="81.0874%" y="1151.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="80.8374%" y="1125" width="0.1610%" height="15" fill="rgb(251,11,48)" fg:x="502" fg:w="1"/><text x="81.0874%" y="1135.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="80.8374%" y="1109" width="0.1610%" height="15" fill="rgb(236,173,5)" fg:x="502" fg:w="1"/><text x="81.0874%" y="1119.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="80.8374%" y="1093" width="0.1610%" height="15" fill="rgb(230,95,12)" fg:x="502" fg:w="1"/><text x="81.0874%" y="1103.50"></text></g><g><title>std::fs::DirBuilder::create (1 samples, 0.16%)</title><rect x="80.9984%" y="1013" width="0.1610%" height="15" fill="rgb(232,209,1)" fg:x="503" fg:w="1"/><text x="81.2484%" y="1023.50"></text></g><g><title>std::fs::DirBuilder::create_dir_all (1 samples, 0.16%)</title><rect x="80.9984%" y="997" width="0.1610%" height="15" fill="rgb(232,6,1)" fg:x="503" fg:w="1"/><text x="81.2484%" y="1007.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="80.9984%" y="981" width="0.1610%" height="15" fill="rgb(210,224,50)" fg:x="503" fg:w="1"/><text x="81.2484%" y="991.50"></text></g><g><title>fclonefileat (4 samples, 0.64%)</title><rect x="81.1594%" y="997" width="0.6441%" height="15" fill="rgb(228,127,35)" fg:x="504" fg:w="4"/><text x="81.4094%" y="1007.50"></text></g><g><title>std::fs::copy (6 samples, 0.97%)</title><rect x="81.1594%" y="1013" width="0.9662%" height="15" fill="rgb(245,102,45)" fg:x="504" fg:w="6"/><text x="81.4094%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.32%)</title><rect x="81.8035%" y="997" width="0.3221%" height="15" fill="rgb(214,1,49)" fg:x="508" fg:w="2"/><text x="82.0535%" y="1007.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (2 samples, 0.32%)</title><rect x="81.8035%" y="981" width="0.3221%" height="15" fill="rgb(226,163,40)" fg:x="508" fg:w="2"/><text x="82.0535%" y="991.50"></text></g><g><title>__open (2 samples, 0.32%)</title><rect x="81.8035%" y="965" width="0.3221%" height="15" fill="rgb(239,212,28)" fg:x="508" fg:w="2"/><text x="82.0535%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 1.29%)</title><rect x="80.9984%" y="1061" width="1.2882%" height="15" fill="rgb(220,20,13)" fg:x="503" fg:w="8"/><text x="81.2484%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (8 samples, 1.29%)</title><rect x="80.9984%" y="1045" width="1.2882%" height="15" fill="rgb(210,164,35)" fg:x="503" fg:w="8"/><text x="81.2484%" y="1055.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 1.29%)</title><rect x="80.9984%" y="1029" width="1.2882%" height="15" fill="rgb(248,109,41)" fg:x="503" fg:w="8"/><text x="81.2484%" y="1039.50"></text></g><g><title>tola::utils::build::process_asset (1 samples, 0.16%)</title><rect x="82.1256%" y="1013" width="0.1610%" height="15" fill="rgb(238,23,50)" fg:x="510" fg:w="1"/><text x="82.3756%" y="1023.50"></text></g><g><title>tola::utils::log::log (1 samples, 0.16%)</title><rect x="82.1256%" y="997" width="0.1610%" height="15" fill="rgb(211,48,49)" fg:x="510" fg:w="1"/><text x="82.3756%" y="1007.50"></text></g><g><title>std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.16%)</title><rect x="82.1256%" y="981" width="0.1610%" height="15" fill="rgb(223,36,21)" fg:x="510" fg:w="1"/><text x="82.3756%" y="991.50"></text></g><g><title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.16%)</title><rect x="82.1256%" y="965" width="0.1610%" height="15" fill="rgb(207,123,46)" fg:x="510" fg:w="1"/><text x="82.3756%" y="975.50"></text></g><g><title>__psynch_mutexwait (1 samples, 0.16%)</title><rect x="82.1256%" y="949" width="0.1610%" height="15" fill="rgb(240,218,32)" fg:x="510" fg:w="1"/><text x="82.3756%" y="959.50"></text></g><g><title>std::fs::copy (2 samples, 0.32%)</title><rect x="82.2866%" y="1045" width="0.3221%" height="15" fill="rgb(252,5,43)" fg:x="511" fg:w="2"/><text x="82.5366%" y="1055.50"></text></g><g><title>fclonefileat (2 samples, 0.32%)</title><rect x="82.2866%" y="1029" width="0.3221%" height="15" fill="rgb(252,84,19)" fg:x="511" fg:w="2"/><text x="82.5366%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 1.77%)</title><rect x="80.9984%" y="1157" width="1.7713%" height="15" fill="rgb(243,152,39)" fg:x="503" fg:w="11"/><text x="81.2484%" y="1167.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (11 samples, 1.77%)</title><rect x="80.9984%" y="1141" width="1.7713%" height="15" fill="rgb(234,160,15)" fg:x="503" fg:w="11"/><text x="81.2484%" y="1151.50">r..</text></g><g><title>rayon_core::registry::in_worker (11 samples, 1.77%)</title><rect x="80.9984%" y="1125" width="1.7713%" height="15" fill="rgb(237,34,20)" fg:x="503" fg:w="11"/><text x="81.2484%" y="1135.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (11 samples, 1.77%)</title><rect x="80.9984%" y="1109" width="1.7713%" height="15" fill="rgb(229,97,13)" fg:x="503" fg:w="11"/><text x="81.2484%" y="1119.50">r..</text></g><g><title>rayon_core::registry::in_worker (11 samples, 1.77%)</title><rect x="80.9984%" y="1093" width="1.7713%" height="15" fill="rgb(234,71,50)" fg:x="503" fg:w="11"/><text x="81.2484%" y="1103.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (11 samples, 1.77%)</title><rect x="80.9984%" y="1077" width="1.7713%" height="15" fill="rgb(253,155,4)" fg:x="503" fg:w="11"/><text x="81.2484%" y="1087.50">r..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.48%)</title><rect x="82.2866%" y="1061" width="0.4831%" height="15" fill="rgb(222,185,37)" fg:x="511" fg:w="3"/><text x="82.5366%" y="1071.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="82.6087%" y="1045" width="0.1610%" height="15" fill="rgb(251,177,13)" fg:x="513" fg:w="1"/><text x="82.8587%" y="1055.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="82.6087%" y="1029" width="0.1610%" height="15" fill="rgb(250,179,40)" fg:x="513" fg:w="1"/><text x="82.8587%" y="1039.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="82.6087%" y="1013" width="0.1610%" height="15" fill="rgb(242,44,2)" fg:x="513" fg:w="1"/><text x="82.8587%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.32%)</title><rect x="82.7697%" y="1125" width="0.3221%" height="15" fill="rgb(216,177,13)" fg:x="514" fg:w="2"/><text x="83.0197%" y="1135.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (2 samples, 0.32%)</title><rect x="82.7697%" y="1109" width="0.3221%" height="15" fill="rgb(216,106,43)" fg:x="514" fg:w="2"/><text x="83.0197%" y="1119.50"></text></g><g><title>__open (2 samples, 0.32%)</title><rect x="82.7697%" y="1093" width="0.3221%" height="15" fill="rgb(216,183,2)" fg:x="514" fg:w="2"/><text x="83.0197%" y="1103.50"></text></g><g><title>std::fs::write (1 samples, 0.16%)</title><rect x="83.0918%" y="1125" width="0.1610%" height="15" fill="rgb(249,75,3)" fg:x="516" fg:w="1"/><text x="83.3418%" y="1135.50"></text></g><g><title>close (1 samples, 0.16%)</title><rect x="83.0918%" y="1109" width="0.1610%" height="15" fill="rgb(219,67,39)" fg:x="516" fg:w="1"/><text x="83.3418%" y="1119.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="83.2528%" y="1077" width="0.1610%" height="15" fill="rgb(253,228,2)" fg:x="517" fg:w="1"/><text x="83.5028%" y="1087.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="83.2528%" y="1061" width="0.1610%" height="15" fill="rgb(235,138,27)" fg:x="517" fg:w="1"/><text x="83.5028%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (163 samples, 26.25%)</title><rect x="57.3269%" y="1221" width="26.2480%" height="15" fill="rgb(236,97,51)" fg:x="356" fg:w="163"/><text x="57.5769%" y="1231.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (16 samples, 2.58%)</title><rect x="80.9984%" y="1205" width="2.5765%" height="15" fill="rgb(240,80,30)" fg:x="503" fg:w="16"/><text x="81.2484%" y="1215.50">ra..</text></g><g><title>rayon_core::job::JobRef::execute (16 samples, 2.58%)</title><rect x="80.9984%" y="1189" width="2.5765%" height="15" fill="rgb(230,178,19)" fg:x="503" fg:w="16"/><text x="81.2484%" y="1199.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (16 samples, 2.58%)</title><rect x="80.9984%" y="1173" width="2.5765%" height="15" fill="rgb(210,190,27)" fg:x="503" fg:w="16"/><text x="81.2484%" y="1183.50">ra..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.81%)</title><rect x="82.7697%" y="1157" width="0.8052%" height="15" fill="rgb(222,107,31)" fg:x="514" fg:w="5"/><text x="83.0197%" y="1167.50"></text></g><g><title>tola::utils::build::process_content (5 samples, 0.81%)</title><rect x="82.7697%" y="1141" width="0.8052%" height="15" fill="rgb(216,127,34)" fg:x="514" fg:w="5"/><text x="83.0197%" y="1151.50"></text></g><g><title>tola::utils::command::run_command (2 samples, 0.32%)</title><rect x="83.2528%" y="1125" width="0.3221%" height="15" fill="rgb(234,116,52)" fg:x="517" fg:w="2"/><text x="83.5028%" y="1135.50"></text></g><g><title>std::sys::process::output (2 samples, 0.32%)</title><rect x="83.2528%" y="1109" width="0.3221%" height="15" fill="rgb(222,124,15)" fg:x="517" fg:w="2"/><text x="83.5028%" y="1119.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (2 samples, 0.32%)</title><rect x="83.2528%" y="1093" width="0.3221%" height="15" fill="rgb(231,179,28)" fg:x="517" fg:w="2"/><text x="83.5028%" y="1103.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="83.4138%" y="1077" width="0.1610%" height="15" fill="rgb(226,93,45)" fg:x="518" fg:w="1"/><text x="83.6638%" y="1087.50"></text></g><g><title>std::fs::copy (1 samples, 0.16%)</title><rect x="83.5749%" y="1205" width="0.1610%" height="15" fill="rgb(215,8,51)" fg:x="519" fg:w="1"/><text x="83.8249%" y="1215.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="83.5749%" y="1189" width="0.1610%" height="15" fill="rgb(223,106,5)" fg:x="519" fg:w="1"/><text x="83.8249%" y="1199.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="83.5749%" y="1173" width="0.1610%" height="15" fill="rgb(250,191,5)" fg:x="519" fg:w="1"/><text x="83.8249%" y="1183.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="83.5749%" y="1157" width="0.1610%" height="15" fill="rgb(242,132,44)" fg:x="519" fg:w="1"/><text x="83.8249%" y="1167.50"></text></g><g><title>_platform_memmove (1 samples, 0.16%)</title><rect x="83.7359%" y="1109" width="0.1610%" height="15" fill="rgb(251,152,29)" fg:x="520" fg:w="1"/><text x="83.9859%" y="1119.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="83.7359%" y="1173" width="0.3221%" height="15" fill="rgb(218,179,5)" fg:x="520" fg:w="2"/><text x="83.9859%" y="1183.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="83.7359%" y="1157" width="0.3221%" height="15" fill="rgb(227,67,19)" fg:x="520" fg:w="2"/><text x="83.9859%" y="1167.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="83.7359%" y="1141" width="0.3221%" height="15" fill="rgb(233,119,31)" fg:x="520" fg:w="2"/><text x="83.9859%" y="1151.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="83.7359%" y="1125" width="0.3221%" height="15" fill="rgb(241,120,22)" fg:x="520" fg:w="2"/><text x="83.9859%" y="1135.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="83.8969%" y="1109" width="0.1610%" height="15" fill="rgb(224,102,30)" fg:x="521" fg:w="1"/><text x="84.1469%" y="1119.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="83.8969%" y="1093" width="0.1610%" height="15" fill="rgb(210,164,37)" fg:x="521" fg:w="1"/><text x="84.1469%" y="1103.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="83.8969%" y="1077" width="0.1610%" height="15" fill="rgb(226,191,16)" fg:x="521" fg:w="1"/><text x="84.1469%" y="1087.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="83.8969%" y="1061" width="0.1610%" height="15" fill="rgb(214,40,45)" fg:x="521" fg:w="1"/><text x="84.1469%" y="1071.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="83.8969%" y="1045" width="0.1610%" height="15" fill="rgb(244,29,26)" fg:x="521" fg:w="1"/><text x="84.1469%" y="1055.50"></text></g><g><title>_nanov2_free (1 samples, 0.16%)</title><rect x="83.8969%" y="1029" width="0.1610%" height="15" fill="rgb(216,16,5)" fg:x="521" fg:w="1"/><text x="84.1469%" y="1039.50"></text></g><g><title>minify_html::minify (3 samples, 0.48%)</title><rect x="83.7359%" y="1189" width="0.4831%" height="15" fill="rgb(249,76,35)" fg:x="520" fg:w="3"/><text x="83.9859%" y="1199.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="84.0580%" y="1173" width="0.1610%" height="15" fill="rgb(207,11,44)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1183.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="84.0580%" y="1157" width="0.1610%" height="15" fill="rgb(228,190,49)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1167.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="84.0580%" y="1141" width="0.1610%" height="15" fill="rgb(214,173,12)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1151.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="84.0580%" y="1125" width="0.1610%" height="15" fill="rgb(218,26,35)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1135.50"></text></g><g><title>minify_html::parse::content::parse_content (1 samples, 0.16%)</title><rect x="84.0580%" y="1109" width="0.1610%" height="15" fill="rgb(220,200,19)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1119.50"></text></g><g><title>aho_corasick::automaton::Automaton::find_at_no_state (1 samples, 0.16%)</title><rect x="84.0580%" y="1093" width="0.1610%" height="15" fill="rgb(239,95,49)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1103.50"></text></g><g><title>aho_corasick::prefilter::PrefilterState::is_effective (1 samples, 0.16%)</title><rect x="84.0580%" y="1077" width="0.1610%" height="15" fill="rgb(235,85,53)" fg:x="522" fg:w="1"/><text x="84.3080%" y="1087.50"></text></g><g><title>tola::utils::build::process_link_in_html (1 samples, 0.16%)</title><rect x="84.2190%" y="1189" width="0.1610%" height="15" fill="rgb(233,133,31)" fg:x="523" fg:w="1"/><text x="84.4690%" y="1199.50"></text></g><g><title>_platform_memmove (1 samples, 0.16%)</title><rect x="84.2190%" y="1173" width="0.1610%" height="15" fill="rgb(218,25,20)" fg:x="523" fg:w="1"/><text x="84.4690%" y="1183.50"></text></g><g><title>__wait4 (1 samples, 0.16%)</title><rect x="84.3800%" y="1173" width="0.1610%" height="15" fill="rgb(252,210,38)" fg:x="524" fg:w="1"/><text x="84.6300%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (170 samples, 27.38%)</title><rect x="57.3269%" y="1237" width="27.3752%" height="15" fill="rgb(242,134,21)" fg:x="356" fg:w="170"/><text x="57.5769%" y="1247.50">rayon::iter::plumbing::bridge_producer_consu..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (7 samples, 1.13%)</title><rect x="83.5749%" y="1221" width="1.1272%" height="15" fill="rgb(213,28,48)" fg:x="519" fg:w="7"/><text x="83.8249%" y="1231.50"></text></g><g><title>tola::utils::build::process_content (6 samples, 0.97%)</title><rect x="83.7359%" y="1205" width="0.9662%" height="15" fill="rgb(250,196,2)" fg:x="520" fg:w="6"/><text x="83.9859%" y="1215.50"></text></g><g><title>tola::utils::command::run_command (2 samples, 0.32%)</title><rect x="84.3800%" y="1189" width="0.3221%" height="15" fill="rgb(227,5,17)" fg:x="524" fg:w="2"/><text x="84.6300%" y="1199.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="84.5411%" y="1173" width="0.1610%" height="15" fill="rgb(221,226,24)" fg:x="525" fg:w="1"/><text x="84.7911%" y="1183.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="84.5411%" y="1157" width="0.1610%" height="15" fill="rgb(211,5,48)" fg:x="525" fg:w="1"/><text x="84.7911%" y="1167.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="84.5411%" y="1141" width="0.1610%" height="15" fill="rgb(219,150,6)" fg:x="525" fg:w="1"/><text x="84.7911%" y="1151.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="84.5411%" y="1125" width="0.1610%" height="15" fill="rgb(251,46,16)" fg:x="525" fg:w="1"/><text x="84.7911%" y="1135.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="84.7021%" y="1189" width="0.1610%" height="15" fill="rgb(220,204,40)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1199.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="1173" width="0.1610%" height="15" fill="rgb(211,85,2)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 0.16%)</title><rect x="84.7021%" y="1157" width="0.1610%" height="15" fill="rgb(229,17,7)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="1141" width="0.1610%" height="15" fill="rgb(239,72,28)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="1125" width="0.1610%" height="15" fill="rgb(230,47,54)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1135.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="1109" width="0.1610%" height="15" fill="rgb(214,50,8)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="1093" width="0.1610%" height="15" fill="rgb(216,198,43)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1103.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="1077" width="0.1610%" height="15" fill="rgb(234,20,35)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1087.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="84.7021%" y="1061" width="0.1610%" height="15" fill="rgb(254,45,19)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1071.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="84.7021%" y="1045" width="0.1610%" height="15" fill="rgb(219,14,44)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="1029" width="0.1610%" height="15" fill="rgb(217,220,26)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="1013" width="0.1610%" height="15" fill="rgb(213,158,28)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="997" width="0.1610%" height="15" fill="rgb(252,51,52)" fg:x="526" fg:w="1"/><text x="84.9521%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="981" width="0.1610%" height="15" fill="rgb(246,89,16)" fg:x="526" fg:w="1"/><text x="84.9521%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="965" width="0.1610%" height="15" fill="rgb(216,158,49)" fg:x="526" fg:w="1"/><text x="84.9521%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="949" width="0.1610%" height="15" fill="rgb(236,107,19)" fg:x="526" fg:w="1"/><text x="84.9521%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="933" width="0.1610%" height="15" fill="rgb(228,185,30)" fg:x="526" fg:w="1"/><text x="84.9521%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="917" width="0.1610%" height="15" fill="rgb(246,134,8)" fg:x="526" fg:w="1"/><text x="84.9521%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="901" width="0.1610%" height="15" fill="rgb(214,143,50)" fg:x="526" fg:w="1"/><text x="84.9521%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="84.7021%" y="885" width="0.1610%" height="15" fill="rgb(228,75,8)" fg:x="526" fg:w="1"/><text x="84.9521%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="869" width="0.1610%" height="15" fill="rgb(207,175,4)" fg:x="526" fg:w="1"/><text x="84.9521%" y="879.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="84.7021%" y="853" width="0.1610%" height="15" fill="rgb(205,108,24)" fg:x="526" fg:w="1"/><text x="84.9521%" y="863.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="84.7021%" y="837" width="0.1610%" height="15" fill="rgb(244,120,49)" fg:x="526" fg:w="1"/><text x="84.9521%" y="847.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="84.7021%" y="821" width="0.1610%" height="15" fill="rgb(223,47,38)" fg:x="526" fg:w="1"/><text x="84.9521%" y="831.50"></text></g><g><title>std::fs::copy (1 samples, 0.16%)</title><rect x="84.8631%" y="1077" width="0.1610%" height="15" fill="rgb(229,179,11)" fg:x="527" fg:w="1"/><text x="85.1131%" y="1087.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="84.8631%" y="1061" width="0.1610%" height="15" fill="rgb(231,122,1)" fg:x="527" fg:w="1"/><text x="85.1131%" y="1071.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="84.8631%" y="1045" width="0.1610%" height="15" fill="rgb(245,119,9)" fg:x="527" fg:w="1"/><text x="85.1131%" y="1055.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="84.8631%" y="1029" width="0.1610%" height="15" fill="rgb(241,163,25)" fg:x="527" fg:w="1"/><text x="85.1131%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="84.8631%" y="1125" width="0.3221%" height="15" fill="rgb(217,214,3)" fg:x="527" fg:w="2"/><text x="85.1131%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="84.8631%" y="1109" width="0.3221%" height="15" fill="rgb(240,86,28)" fg:x="527" fg:w="2"/><text x="85.1131%" y="1119.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.32%)</title><rect x="84.8631%" y="1093" width="0.3221%" height="15" fill="rgb(215,47,9)" fg:x="527" fg:w="2"/><text x="85.1131%" y="1103.50"></text></g><g><title>tola::utils::build::process_content (1 samples, 0.16%)</title><rect x="85.0242%" y="1077" width="0.1610%" height="15" fill="rgb(252,25,45)" fg:x="528" fg:w="1"/><text x="85.2742%" y="1087.50"></text></g><g><title>std::fs::write (1 samples, 0.16%)</title><rect x="85.0242%" y="1061" width="0.1610%" height="15" fill="rgb(251,164,9)" fg:x="528" fg:w="1"/><text x="85.2742%" y="1071.50"></text></g><g><title>close (1 samples, 0.16%)</title><rect x="85.0242%" y="1045" width="0.1610%" height="15" fill="rgb(233,194,0)" fg:x="528" fg:w="1"/><text x="85.2742%" y="1055.50"></text></g><g><title>fclonefileat (2 samples, 0.32%)</title><rect x="85.1852%" y="1093" width="0.3221%" height="15" fill="rgb(249,111,24)" fg:x="529" fg:w="2"/><text x="85.4352%" y="1103.50"></text></g><g><title>std::fs::copy (3 samples, 0.48%)</title><rect x="85.1852%" y="1109" width="0.4831%" height="15" fill="rgb(250,223,3)" fg:x="529" fg:w="3"/><text x="85.4352%" y="1119.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="85.5072%" y="1093" width="0.1610%" height="15" fill="rgb(236,178,37)" fg:x="531" fg:w="1"/><text x="85.7572%" y="1103.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="85.5072%" y="1077" width="0.1610%" height="15" fill="rgb(241,158,50)" fg:x="531" fg:w="1"/><text x="85.7572%" y="1087.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="85.5072%" y="1061" width="0.1610%" height="15" fill="rgb(213,121,41)" fg:x="531" fg:w="1"/><text x="85.7572%" y="1071.50"></text></g><g><title>minify_html::minify (1 samples, 0.16%)</title><rect x="85.6683%" y="1093" width="0.1610%" height="15" fill="rgb(240,92,3)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1103.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.6683%" y="1077" width="0.1610%" height="15" fill="rgb(205,123,3)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1087.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.6683%" y="1061" width="0.1610%" height="15" fill="rgb(205,97,47)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1071.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.6683%" y="1045" width="0.1610%" height="15" fill="rgb(247,152,14)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1055.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.6683%" y="1029" width="0.1610%" height="15" fill="rgb(248,195,53)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1039.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.6683%" y="1013" width="0.1610%" height="15" fill="rgb(226,201,16)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1023.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="85.6683%" y="997" width="0.1610%" height="15" fill="rgb(205,98,0)" fg:x="532" fg:w="1"/><text x="85.9183%" y="1007.50"></text></g><g><title>free_tiny (1 samples, 0.16%)</title><rect x="85.6683%" y="981" width="0.1610%" height="15" fill="rgb(214,191,48)" fg:x="532" fg:w="1"/><text x="85.9183%" y="991.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.16%)</title><rect x="85.6683%" y="965" width="0.1610%" height="15" fill="rgb(237,112,39)" fg:x="532" fg:w="1"/><text x="85.9183%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="84.8631%" y="1189" width="1.1272%" height="15" fill="rgb(247,203,27)" fg:x="527" fg:w="7"/><text x="85.1131%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="84.8631%" y="1173" width="1.1272%" height="15" fill="rgb(235,124,28)" fg:x="527" fg:w="7"/><text x="85.1131%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 1.13%)</title><rect x="84.8631%" y="1157" width="1.1272%" height="15" fill="rgb(208,207,46)" fg:x="527" fg:w="7"/><text x="85.1131%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (7 samples, 1.13%)</title><rect x="84.8631%" y="1141" width="1.1272%" height="15" fill="rgb(234,176,4)" fg:x="527" fg:w="7"/><text x="85.1131%" y="1151.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (5 samples, 0.81%)</title><rect x="85.1852%" y="1125" width="0.8052%" height="15" fill="rgb(230,133,28)" fg:x="529" fg:w="5"/><text x="85.4352%" y="1135.50"></text></g><g><title>tola::utils::build::process_content (2 samples, 0.32%)</title><rect x="85.6683%" y="1109" width="0.3221%" height="15" fill="rgb(211,137,40)" fg:x="532" fg:w="2"/><text x="85.9183%" y="1119.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="85.8293%" y="1093" width="0.1610%" height="15" fill="rgb(254,35,13)" fg:x="533" fg:w="1"/><text x="86.0793%" y="1103.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="85.8293%" y="1077" width="0.1610%" height="15" fill="rgb(225,49,51)" fg:x="533" fg:w="1"/><text x="86.0793%" y="1087.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="85.8293%" y="1061" width="0.1610%" height="15" fill="rgb(251,10,15)" fg:x="533" fg:w="1"/><text x="86.0793%" y="1071.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="85.8293%" y="1045" width="0.1610%" height="15" fill="rgb(228,207,15)" fg:x="533" fg:w="1"/><text x="86.0793%" y="1055.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="85.8293%" y="1029" width="0.1610%" height="15" fill="rgb(241,99,19)" fg:x="533" fg:w="1"/><text x="86.0793%" y="1039.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.9903%" y="1141" width="0.1610%" height="15" fill="rgb(207,104,49)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1151.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.9903%" y="1125" width="0.1610%" height="15" fill="rgb(234,99,18)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1135.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.9903%" y="1109" width="0.1610%" height="15" fill="rgb(213,191,49)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1119.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.9903%" y="1093" width="0.1610%" height="15" fill="rgb(210,226,19)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1103.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.9903%" y="1077" width="0.1610%" height="15" fill="rgb(229,97,18)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1087.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="85.9903%" y="1061" width="0.1610%" height="15" fill="rgb(211,167,15)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1071.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="85.9903%" y="1045" width="0.1610%" height="15" fill="rgb(210,169,34)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1055.50"></text></g><g><title>_nanov2_free (1 samples, 0.16%)</title><rect x="85.9903%" y="1029" width="0.1610%" height="15" fill="rgb(241,121,31)" fg:x="534" fg:w="1"/><text x="86.2403%" y="1039.50"></text></g><g><title>minify_html::minify (2 samples, 0.32%)</title><rect x="85.9903%" y="1157" width="0.3221%" height="15" fill="rgb(232,40,11)" fg:x="534" fg:w="2"/><text x="86.2403%" y="1167.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1141" width="0.1610%" height="15" fill="rgb(205,86,26)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1151.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1125" width="0.1610%" height="15" fill="rgb(231,126,28)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1135.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1109" width="0.1610%" height="15" fill="rgb(219,221,18)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1119.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1093" width="0.1610%" height="15" fill="rgb(211,40,0)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1103.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1077" width="0.1610%" height="15" fill="rgb(239,85,43)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1087.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1061" width="0.1610%" height="15" fill="rgb(231,55,21)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1071.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1045" width="0.1610%" height="15" fill="rgb(225,184,43)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1055.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1029" width="0.1610%" height="15" fill="rgb(251,158,41)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1039.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="86.1514%" y="1013" width="0.1610%" height="15" fill="rgb(234,159,37)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.16%)</title><rect x="86.1514%" y="997" width="0.1610%" height="15" fill="rgb(216,204,22)" fg:x="535" fg:w="1"/><text x="86.4014%" y="1007.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.16%)</title><rect x="86.1514%" y="981" width="0.1610%" height="15" fill="rgb(214,17,3)" fg:x="535" fg:w="1"/><text x="86.4014%" y="991.50"></text></g><g><title>__bzero (1 samples, 0.16%)</title><rect x="86.1514%" y="965" width="0.1610%" height="15" fill="rgb(212,111,17)" fg:x="535" fg:w="1"/><text x="86.4014%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (181 samples, 29.15%)</title><rect x="57.3269%" y="1253" width="29.1465%" height="15" fill="rgb(221,157,24)" fg:x="356" fg:w="181"/><text x="57.5769%" y="1263.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 1.77%)</title><rect x="84.7021%" y="1237" width="1.7713%" height="15" fill="rgb(252,16,13)" fg:x="526" fg:w="11"/><text x="84.9521%" y="1247.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (11 samples, 1.77%)</title><rect x="84.7021%" y="1221" width="1.7713%" height="15" fill="rgb(221,62,2)" fg:x="526" fg:w="11"/><text x="84.9521%" y="1231.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (11 samples, 1.77%)</title><rect x="84.7021%" y="1205" width="1.7713%" height="15" fill="rgb(247,87,22)" fg:x="526" fg:w="11"/><text x="84.9521%" y="1215.50">r..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.48%)</title><rect x="85.9903%" y="1189" width="0.4831%" height="15" fill="rgb(215,73,9)" fg:x="534" fg:w="3"/><text x="86.2403%" y="1199.50"></text></g><g><title>tola::utils::build::process_content (3 samples, 0.48%)</title><rect x="85.9903%" y="1173" width="0.4831%" height="15" fill="rgb(207,175,33)" fg:x="534" fg:w="3"/><text x="86.2403%" y="1183.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="86.3124%" y="1157" width="0.1610%" height="15" fill="rgb(243,129,54)" fg:x="536" fg:w="1"/><text x="86.5624%" y="1167.50"></text></g><g><title>poll (1 samples, 0.16%)</title><rect x="86.3124%" y="1141" width="0.1610%" height="15" fill="rgb(227,119,45)" fg:x="536" fg:w="1"/><text x="86.5624%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (498 samples, 80.19%)</title><rect x="6.4412%" y="1317" width="80.1932%" height="15" fill="rgb(205,109,36)" fg:x="40" fg:w="498"/><text x="6.6912%" y="1327.50">rayon_core::registry::in_worker</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (182 samples, 29.31%)</title><rect x="57.3269%" y="1301" width="29.3076%" height="15" fill="rgb(205,6,39)" fg:x="356" fg:w="182"/><text x="57.5769%" y="1311.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::job::JobRef::execute (182 samples, 29.31%)</title><rect x="57.3269%" y="1285" width="29.3076%" height="15" fill="rgb(221,32,16)" fg:x="356" fg:w="182"/><text x="57.5769%" y="1295.50">rayon_core::job::JobRef::execute</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (182 samples, 29.31%)</title><rect x="57.3269%" y="1269" width="29.3076%" height="15" fill="rgb(228,144,50)" fg:x="356" fg:w="182"/><text x="57.5769%" y="1279.50">rayon::iter::plumbing::bridge_producer_consumer..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="86.4734%" y="1253" width="0.1610%" height="15" fill="rgb(229,201,53)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1263.50"></text></g><g><title>tola::utils::build::process_content (1 samples, 0.16%)</title><rect x="86.4734%" y="1237" width="0.1610%" height="15" fill="rgb(249,153,27)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1247.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="86.4734%" y="1221" width="0.1610%" height="15" fill="rgb(227,106,25)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1231.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="86.4734%" y="1205" width="0.1610%" height="15" fill="rgb(230,65,29)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1215.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="86.4734%" y="1189" width="0.1610%" height="15" fill="rgb(221,57,46)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1199.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="86.4734%" y="1173" width="0.1610%" height="15" fill="rgb(229,161,17)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1183.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="86.4734%" y="1157" width="0.1610%" height="15" fill="rgb(222,213,11)" fg:x="537" fg:w="1"/><text x="86.7234%" y="1167.50"></text></g><g><title>minify_html::minify (1 samples, 0.16%)</title><rect x="86.6345%" y="1285" width="0.1610%" height="15" fill="rgb(235,35,13)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1295.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="86.6345%" y="1269" width="0.1610%" height="15" fill="rgb(233,158,34)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1279.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="86.6345%" y="1253" width="0.1610%" height="15" fill="rgb(215,151,48)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1263.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="86.6345%" y="1237" width="0.1610%" height="15" fill="rgb(229,84,14)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1247.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="86.6345%" y="1221" width="0.1610%" height="15" fill="rgb(229,68,14)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1231.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="86.6345%" y="1205" width="0.1610%" height="15" fill="rgb(243,106,26)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1215.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="86.6345%" y="1189" width="0.1610%" height="15" fill="rgb(206,45,38)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1199.50"></text></g><g><title>minify_html::minify::element::minify_element (1 samples, 0.16%)</title><rect x="86.6345%" y="1173" width="0.1610%" height="15" fill="rgb(226,6,15)" fg:x="538" fg:w="1"/><text x="86.8845%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (509 samples, 81.96%)</title><rect x="4.9919%" y="1333" width="81.9646%" height="15" fill="rgb(232,22,54)" fg:x="31" fg:w="509"/><text x="5.2419%" y="1343.50">rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}}</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (2 samples, 0.32%)</title><rect x="86.6345%" y="1317" width="0.3221%" height="15" fill="rgb(229,222,32)" fg:x="538" fg:w="2"/><text x="86.8845%" y="1327.50"></text></g><g><title>tola::utils::build::process_content (2 samples, 0.32%)</title><rect x="86.6345%" y="1301" width="0.3221%" height="15" fill="rgb(228,62,29)" fg:x="538" fg:w="2"/><text x="86.8845%" y="1311.50"></text></g><g><title>tola::utils::command::run_command (1 samples, 0.16%)</title><rect x="86.7955%" y="1285" width="0.1610%" height="15" fill="rgb(251,103,34)" fg:x="539" fg:w="1"/><text x="87.0455%" y="1295.50"></text></g><g><title>std::sys::process::output (1 samples, 0.16%)</title><rect x="86.7955%" y="1269" width="0.1610%" height="15" fill="rgb(233,12,30)" fg:x="539" fg:w="1"/><text x="87.0455%" y="1279.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (1 samples, 0.16%)</title><rect x="86.7955%" y="1253" width="0.1610%" height="15" fill="rgb(238,52,0)" fg:x="539" fg:w="1"/><text x="87.0455%" y="1263.50"></text></g><g><title>posix_spawnp (1 samples, 0.16%)</title><rect x="86.7955%" y="1237" width="0.1610%" height="15" fill="rgb(223,98,5)" fg:x="539" fg:w="1"/><text x="87.0455%" y="1247.50"></text></g><g><title>__posix_spawn (1 samples, 0.16%)</title><rect x="86.7955%" y="1221" width="0.1610%" height="15" fill="rgb(228,75,37)" fg:x="539" fg:w="1"/><text x="87.0455%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="86.9565%" y="1141" width="0.1610%" height="15" fill="rgb(205,115,49)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="86.9565%" y="1125" width="0.1610%" height="15" fill="rgb(250,154,43)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="86.9565%" y="1109" width="0.1610%" height="15" fill="rgb(226,43,29)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="86.9565%" y="1093" width="0.1610%" height="15" fill="rgb(249,228,39)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="86.9565%" y="1077" width="0.1610%" height="15" fill="rgb(216,79,43)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1087.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="86.9565%" y="1061" width="0.1610%" height="15" fill="rgb(228,95,12)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1071.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="86.9565%" y="1045" width="0.1610%" height="15" fill="rgb(249,221,15)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1055.50"></text></g><g><title>std::fs::read_dir (1 samples, 0.16%)</title><rect x="86.9565%" y="1029" width="0.1610%" height="15" fill="rgb(233,34,13)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1039.50"></text></g><g><title>std::sys::fs::unix::readdir::_{{closure}} (1 samples, 0.16%)</title><rect x="86.9565%" y="1013" width="0.1610%" height="15" fill="rgb(214,103,39)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1023.50"></text></g><g><title>__opendir2 (1 samples, 0.16%)</title><rect x="86.9565%" y="997" width="0.1610%" height="15" fill="rgb(251,126,39)" fg:x="540" fg:w="1"/><text x="87.2065%" y="1007.50"></text></g><g><title>fstatfs (1 samples, 0.16%)</title><rect x="86.9565%" y="981" width="0.1610%" height="15" fill="rgb(214,216,36)" fg:x="540" fg:w="1"/><text x="87.2065%" y="991.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="87.1176%" y="981" width="0.1610%" height="15" fill="rgb(220,221,8)" fg:x="541" fg:w="1"/><text x="87.3676%" y="991.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="87.1176%" y="965" width="0.1610%" height="15" fill="rgb(240,216,3)" fg:x="541" fg:w="1"/><text x="87.3676%" y="975.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="87.1176%" y="949" width="0.1610%" height="15" fill="rgb(232,218,17)" fg:x="541" fg:w="1"/><text x="87.3676%" y="959.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.64%)</title><rect x="86.9565%" y="1205" width="0.6441%" height="15" fill="rgb(229,163,45)" fg:x="540" fg:w="4"/><text x="87.2065%" y="1215.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (4 samples, 0.64%)</title><rect x="86.9565%" y="1189" width="0.6441%" height="15" fill="rgb(231,110,42)" fg:x="540" fg:w="4"/><text x="87.2065%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (4 samples, 0.64%)</title><rect x="86.9565%" y="1173" width="0.6441%" height="15" fill="rgb(208,170,48)" fg:x="540" fg:w="4"/><text x="87.2065%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.64%)</title><rect x="86.9565%" y="1157" width="0.6441%" height="15" fill="rgb(239,116,25)" fg:x="540" fg:w="4"/><text x="87.2065%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="87.1176%" y="1141" width="0.4831%" height="15" fill="rgb(219,200,50)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1151.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="87.1176%" y="1125" width="0.4831%" height="15" fill="rgb(245,200,0)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="87.1176%" y="1109" width="0.4831%" height="15" fill="rgb(245,119,33)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="87.1176%" y="1093" width="0.4831%" height="15" fill="rgb(231,125,12)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="87.1176%" y="1077" width="0.4831%" height="15" fill="rgb(216,96,41)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1087.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.48%)</title><rect x="87.1176%" y="1061" width="0.4831%" height="15" fill="rgb(248,43,45)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1071.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (3 samples, 0.48%)</title><rect x="87.1176%" y="1045" width="0.4831%" height="15" fill="rgb(217,222,7)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (3 samples, 0.48%)</title><rect x="87.1176%" y="1029" width="0.4831%" height="15" fill="rgb(233,28,6)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="87.1176%" y="1013" width="0.4831%" height="15" fill="rgb(231,218,15)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="87.1176%" y="997" width="0.4831%" height="15" fill="rgb(226,171,48)" fg:x="541" fg:w="3"/><text x="87.3676%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="87.2786%" y="981" width="0.3221%" height="15" fill="rgb(235,201,9)" fg:x="542" fg:w="2"/><text x="87.5286%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="87.2786%" y="965" width="0.3221%" height="15" fill="rgb(217,80,15)" fg:x="542" fg:w="2"/><text x="87.5286%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="87.2786%" y="949" width="0.3221%" height="15" fill="rgb(219,152,8)" fg:x="542" fg:w="2"/><text x="87.5286%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="87.2786%" y="933" width="0.3221%" height="15" fill="rgb(243,107,38)" fg:x="542" fg:w="2"/><text x="87.5286%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="87.2786%" y="917" width="0.3221%" height="15" fill="rgb(231,17,5)" fg:x="542" fg:w="2"/><text x="87.5286%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="87.2786%" y="901" width="0.3221%" height="15" fill="rgb(209,25,54)" fg:x="542" fg:w="2"/><text x="87.5286%" y="911.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.32%)</title><rect x="87.2786%" y="885" width="0.3221%" height="15" fill="rgb(219,0,2)" fg:x="542" fg:w="2"/><text x="87.5286%" y="895.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (2 samples, 0.32%)</title><rect x="87.2786%" y="869" width="0.3221%" height="15" fill="rgb(246,9,5)" fg:x="542" fg:w="2"/><text x="87.5286%" y="879.50"></text></g><g><title>stat (2 samples, 0.32%)</title><rect x="87.2786%" y="853" width="0.3221%" height="15" fill="rgb(226,159,4)" fg:x="542" fg:w="2"/><text x="87.5286%" y="863.50"></text></g><g><title>fclonefileat (4 samples, 0.64%)</title><rect x="87.6006%" y="1109" width="0.6441%" height="15" fill="rgb(219,175,34)" fg:x="544" fg:w="4"/><text x="87.8506%" y="1119.50"></text></g><g><title>std::fs::copy (6 samples, 0.97%)</title><rect x="87.6006%" y="1125" width="0.9662%" height="15" fill="rgb(236,10,46)" fg:x="544" fg:w="6"/><text x="87.8506%" y="1135.50"></text></g><g><title>std::fs::OpenOptions::open (2 samples, 0.32%)</title><rect x="88.2448%" y="1109" width="0.3221%" height="15" fill="rgb(240,211,16)" fg:x="548" fg:w="2"/><text x="88.4948%" y="1119.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (2 samples, 0.32%)</title><rect x="88.2448%" y="1093" width="0.3221%" height="15" fill="rgb(205,3,43)" fg:x="548" fg:w="2"/><text x="88.4948%" y="1103.50"></text></g><g><title>__open (2 samples, 0.32%)</title><rect x="88.2448%" y="1077" width="0.3221%" height="15" fill="rgb(245,7,22)" fg:x="548" fg:w="2"/><text x="88.4948%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (8 samples, 1.29%)</title><rect x="87.6006%" y="1157" width="1.2882%" height="15" fill="rgb(239,132,32)" fg:x="544" fg:w="8"/><text x="87.8506%" y="1167.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 1.29%)</title><rect x="87.6006%" y="1141" width="1.2882%" height="15" fill="rgb(228,202,34)" fg:x="544" fg:w="8"/><text x="87.8506%" y="1151.50"></text></g><g><title>std::fs::remove_file (2 samples, 0.32%)</title><rect x="88.5668%" y="1125" width="0.3221%" height="15" fill="rgb(254,200,22)" fg:x="550" fg:w="2"/><text x="88.8168%" y="1135.50"></text></g><g><title>std::sys::fs::unix::unlink (2 samples, 0.32%)</title><rect x="88.5668%" y="1109" width="0.3221%" height="15" fill="rgb(219,10,39)" fg:x="550" fg:w="2"/><text x="88.8168%" y="1119.50"></text></g><g><title>__unlink (2 samples, 0.32%)</title><rect x="88.5668%" y="1093" width="0.3221%" height="15" fill="rgb(226,210,39)" fg:x="550" fg:w="2"/><text x="88.8168%" y="1103.50"></text></g><g><title>std::fs::DirBuilder::create (1 samples, 0.16%)</title><rect x="88.8889%" y="933" width="0.1610%" height="15" fill="rgb(208,219,16)" fg:x="552" fg:w="1"/><text x="89.1389%" y="943.50"></text></g><g><title>mkdir (1 samples, 0.16%)</title><rect x="88.8889%" y="917" width="0.1610%" height="15" fill="rgb(216,158,51)" fg:x="552" fg:w="1"/><text x="89.1389%" y="927.50"></text></g><g><title>fclonefileat (24 samples, 3.86%)</title><rect x="89.0499%" y="917" width="3.8647%" height="15" fill="rgb(233,14,44)" fg:x="553" fg:w="24"/><text x="89.2999%" y="927.50">fclo..</text></g><g><title>std::fs::copy (32 samples, 5.15%)</title><rect x="89.0499%" y="933" width="5.1530%" height="15" fill="rgb(237,97,39)" fg:x="553" fg:w="32"/><text x="89.2999%" y="943.50">std::f..</text></g><g><title>std::fs::OpenOptions::open (8 samples, 1.29%)</title><rect x="92.9147%" y="917" width="1.2882%" height="15" fill="rgb(218,198,43)" fg:x="577" fg:w="8"/><text x="93.1647%" y="927.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (8 samples, 1.29%)</title><rect x="92.9147%" y="901" width="1.2882%" height="15" fill="rgb(231,104,20)" fg:x="577" fg:w="8"/><text x="93.1647%" y="911.50"></text></g><g><title>__open (8 samples, 1.29%)</title><rect x="92.9147%" y="885" width="1.2882%" height="15" fill="rgb(254,36,13)" fg:x="577" fg:w="8"/><text x="93.1647%" y="895.50"></text></g><g><title>std::fs::remove_file (6 samples, 0.97%)</title><rect x="94.2029%" y="933" width="0.9662%" height="15" fill="rgb(248,14,50)" fg:x="585" fg:w="6"/><text x="94.4529%" y="943.50"></text></g><g><title>std::sys::fs::unix::unlink (6 samples, 0.97%)</title><rect x="94.2029%" y="917" width="0.9662%" height="15" fill="rgb(217,107,29)" fg:x="585" fg:w="6"/><text x="94.4529%" y="927.50"></text></g><g><title>__unlink (6 samples, 0.97%)</title><rect x="94.2029%" y="901" width="0.9662%" height="15" fill="rgb(251,169,33)" fg:x="585" fg:w="6"/><text x="94.4529%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 6.44%)</title><rect x="88.8889%" y="981" width="6.4412%" height="15" fill="rgb(217,108,32)" fg:x="552" fg:w="40"/><text x="89.1389%" y="991.50">rayon_co..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (40 samples, 6.44%)</title><rect x="88.8889%" y="965" width="6.4412%" height="15" fill="rgb(219,66,42)" fg:x="552" fg:w="40"/><text x="89.1389%" y="975.50">rayon::i..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (40 samples, 6.44%)</title><rect x="88.8889%" y="949" width="6.4412%" height="15" fill="rgb(206,180,7)" fg:x="552" fg:w="40"/><text x="89.1389%" y="959.50">tola::bu..</text></g><g><title>tola::utils::build::process_asset (1 samples, 0.16%)</title><rect x="95.1691%" y="933" width="0.1610%" height="15" fill="rgb(208,226,31)" fg:x="591" fg:w="1"/><text x="95.4191%" y="943.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="95.1691%" y="917" width="0.1610%" height="15" fill="rgb(218,26,49)" fg:x="591" fg:w="1"/><text x="95.4191%" y="927.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="95.1691%" y="901" width="0.1610%" height="15" fill="rgb(233,197,48)" fg:x="591" fg:w="1"/><text x="95.4191%" y="911.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="95.1691%" y="885" width="0.1610%" height="15" fill="rgb(252,181,51)" fg:x="591" fg:w="1"/><text x="95.4191%" y="895.50"></text></g><g><title>std::fs::copy (7 samples, 1.13%)</title><rect x="95.3301%" y="965" width="1.1272%" height="15" fill="rgb(253,90,19)" fg:x="592" fg:w="7"/><text x="95.5801%" y="975.50"></text></g><g><title>fclonefileat (7 samples, 1.13%)</title><rect x="95.3301%" y="949" width="1.1272%" height="15" fill="rgb(215,171,30)" fg:x="592" fg:w="7"/><text x="95.5801%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (48 samples, 7.73%)</title><rect x="88.8889%" y="997" width="7.7295%" height="15" fill="rgb(214,222,9)" fg:x="552" fg:w="48"/><text x="89.1389%" y="1007.50">rayon::iter..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (8 samples, 1.29%)</title><rect x="95.3301%" y="981" width="1.2882%" height="15" fill="rgb(223,3,22)" fg:x="592" fg:w="8"/><text x="95.5801%" y="991.50"></text></g><g><title>std::fs::remove_file (1 samples, 0.16%)</title><rect x="96.4573%" y="965" width="0.1610%" height="15" fill="rgb(225,196,46)" fg:x="599" fg:w="1"/><text x="96.7073%" y="975.50"></text></g><g><title>std::sys::fs::unix::unlink (1 samples, 0.16%)</title><rect x="96.4573%" y="949" width="0.1610%" height="15" fill="rgb(209,110,37)" fg:x="599" fg:w="1"/><text x="96.7073%" y="959.50"></text></g><g><title>__unlink (1 samples, 0.16%)</title><rect x="96.4573%" y="933" width="0.1610%" height="15" fill="rgb(249,89,12)" fg:x="599" fg:w="1"/><text x="96.7073%" y="943.50"></text></g><g><title>fclonefileat (1 samples, 0.16%)</title><rect x="96.6184%" y="821" width="0.1610%" height="15" fill="rgb(226,27,33)" fg:x="600" fg:w="1"/><text x="96.8684%" y="831.50"></text></g><g><title>std::fs::copy (2 samples, 0.32%)</title><rect x="96.6184%" y="837" width="0.3221%" height="15" fill="rgb(213,82,22)" fg:x="600" fg:w="2"/><text x="96.8684%" y="847.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="96.7794%" y="821" width="0.1610%" height="15" fill="rgb(248,140,0)" fg:x="601" fg:w="1"/><text x="97.0294%" y="831.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="96.7794%" y="805" width="0.1610%" height="15" fill="rgb(228,106,3)" fg:x="601" fg:w="1"/><text x="97.0294%" y="815.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="96.7794%" y="789" width="0.1610%" height="15" fill="rgb(209,23,37)" fg:x="601" fg:w="1"/><text x="97.0294%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (51 samples, 8.21%)</title><rect x="88.8889%" y="1109" width="8.2126%" height="15" fill="rgb(241,93,50)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1119.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (51 samples, 8.21%)</title><rect x="88.8889%" y="1093" width="8.2126%" height="15" fill="rgb(253,46,43)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1103.50">rayon::iter..</text></g><g><title>rayon_core::registry::in_worker (51 samples, 8.21%)</title><rect x="88.8889%" y="1077" width="8.2126%" height="15" fill="rgb(226,206,43)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1087.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (51 samples, 8.21%)</title><rect x="88.8889%" y="1061" width="8.2126%" height="15" fill="rgb(217,54,7)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1071.50">rayon::iter..</text></g><g><title>rayon_core::registry::in_worker (51 samples, 8.21%)</title><rect x="88.8889%" y="1045" width="8.2126%" height="15" fill="rgb(223,5,52)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1055.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (51 samples, 8.21%)</title><rect x="88.8889%" y="1029" width="8.2126%" height="15" fill="rgb(206,52,46)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1039.50">rayon::iter..</text></g><g><title>rayon_core::registry::in_worker (51 samples, 8.21%)</title><rect x="88.8889%" y="1013" width="8.2126%" height="15" fill="rgb(253,136,11)" fg:x="552" fg:w="51"/><text x="89.1389%" y="1023.50">rayon_core:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.48%)</title><rect x="96.6184%" y="997" width="0.4831%" height="15" fill="rgb(208,106,33)" fg:x="600" fg:w="3"/><text x="96.8684%" y="1007.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.48%)</title><rect x="96.6184%" y="981" width="0.4831%" height="15" fill="rgb(206,54,4)" fg:x="600" fg:w="3"/><text x="96.8684%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="96.6184%" y="965" width="0.4831%" height="15" fill="rgb(213,3,15)" fg:x="600" fg:w="3"/><text x="96.8684%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="96.6184%" y="949" width="0.4831%" height="15" fill="rgb(252,211,39)" fg:x="600" fg:w="3"/><text x="96.8684%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="96.6184%" y="933" width="0.4831%" height="15" fill="rgb(223,6,36)" fg:x="600" fg:w="3"/><text x="96.8684%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="96.6184%" y="917" width="0.4831%" height="15" fill="rgb(252,169,45)" fg:x="600" fg:w="3"/><text x="96.8684%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="96.6184%" y="901" width="0.4831%" height="15" fill="rgb(212,48,26)" fg:x="600" fg:w="3"/><text x="96.8684%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.48%)</title><rect x="96.6184%" y="885" width="0.4831%" height="15" fill="rgb(251,102,48)" fg:x="600" fg:w="3"/><text x="96.8684%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (3 samples, 0.48%)</title><rect x="96.6184%" y="869" width="0.4831%" height="15" fill="rgb(243,208,16)" fg:x="600" fg:w="3"/><text x="96.8684%" y="879.50"></text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (3 samples, 0.48%)</title><rect x="96.6184%" y="853" width="0.4831%" height="15" fill="rgb(219,96,24)" fg:x="600" fg:w="3"/><text x="96.8684%" y="863.50"></text></g><g><title>tola::utils::build::process_asset (1 samples, 0.16%)</title><rect x="96.9404%" y="837" width="0.1610%" height="15" fill="rgb(219,33,29)" fg:x="602" fg:w="1"/><text x="97.1904%" y="847.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.16%)</title><rect x="96.9404%" y="821" width="0.1610%" height="15" fill="rgb(223,176,5)" fg:x="602" fg:w="1"/><text x="97.1904%" y="831.50"></text></g><g><title>write (1 samples, 0.16%)</title><rect x="96.9404%" y="805" width="0.1610%" height="15" fill="rgb(228,140,14)" fg:x="602" fg:w="1"/><text x="97.1904%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (64 samples, 10.31%)</title><rect x="86.9565%" y="1253" width="10.3060%" height="15" fill="rgb(217,179,31)" fg:x="540" fg:w="64"/><text x="87.2065%" y="1263.50">rayon::iter::pl..</text></g><g><title>rayon_core::registry::in_worker (64 samples, 10.31%)</title><rect x="86.9565%" y="1237" width="10.3060%" height="15" fill="rgb(230,9,30)" fg:x="540" fg:w="64"/><text x="87.2065%" y="1247.50">rayon_core::reg..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (64 samples, 10.31%)</title><rect x="86.9565%" y="1221" width="10.3060%" height="15" fill="rgb(230,136,20)" fg:x="540" fg:w="64"/><text x="87.2065%" y="1231.50">rayon::iter::pl..</text></g><g><title>rayon_core::registry::in_worker (60 samples, 9.66%)</title><rect x="87.6006%" y="1205" width="9.6618%" height="15" fill="rgb(215,210,22)" fg:x="544" fg:w="60"/><text x="87.8506%" y="1215.50">rayon_core::re..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (60 samples, 9.66%)</title><rect x="87.6006%" y="1189" width="9.6618%" height="15" fill="rgb(218,43,5)" fg:x="544" fg:w="60"/><text x="87.8506%" y="1199.50">rayon::iter::p..</text></g><g><title>rayon_core::registry::in_worker (60 samples, 9.66%)</title><rect x="87.6006%" y="1173" width="9.6618%" height="15" fill="rgb(216,11,5)" fg:x="544" fg:w="60"/><text x="87.8506%" y="1183.50">rayon_core::re..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (52 samples, 8.37%)</title><rect x="88.8889%" y="1157" width="8.3736%" height="15" fill="rgb(209,82,29)" fg:x="552" fg:w="52"/><text x="89.1389%" y="1167.50">rayon_core::..</text></g><g><title>rayon_core::job::JobRef::execute (52 samples, 8.37%)</title><rect x="88.8889%" y="1141" width="8.3736%" height="15" fill="rgb(244,115,12)" fg:x="552" fg:w="52"/><text x="89.1389%" y="1151.50">rayon_core::..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (52 samples, 8.37%)</title><rect x="88.8889%" y="1125" width="8.3736%" height="15" fill="rgb(222,82,18)" fg:x="552" fg:w="52"/><text x="89.1389%" y="1135.50">rayon::iter:..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (1 samples, 0.16%)</title><rect x="97.1014%" y="1109" width="0.1610%" height="15" fill="rgb(249,227,8)" fg:x="603" fg:w="1"/><text x="97.3514%" y="1119.50"></text></g><g><title>std::fs::copy (1 samples, 0.16%)</title><rect x="97.1014%" y="1093" width="0.1610%" height="15" fill="rgb(253,141,45)" fg:x="603" fg:w="1"/><text x="97.3514%" y="1103.50"></text></g><g><title>fclonefileat (1 samples, 0.16%)</title><rect x="97.1014%" y="1077" width="0.1610%" height="15" fill="rgb(234,184,4)" fg:x="603" fg:w="1"/><text x="97.3514%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.2625%" y="981" width="0.1610%" height="15" fill="rgb(218,194,23)" fg:x="604" fg:w="1"/><text x="97.5125%" y="991.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.2625%" y="965" width="0.1610%" height="15" fill="rgb(235,66,41)" fg:x="604" fg:w="1"/><text x="97.5125%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.2625%" y="949" width="0.1610%" height="15" fill="rgb(245,217,1)" fg:x="604" fg:w="1"/><text x="97.5125%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.2625%" y="933" width="0.1610%" height="15" fill="rgb(229,91,1)" fg:x="604" fg:w="1"/><text x="97.5125%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.2625%" y="917" width="0.1610%" height="15" fill="rgb(207,101,30)" fg:x="604" fg:w="1"/><text x="97.5125%" y="927.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.2625%" y="901" width="0.1610%" height="15" fill="rgb(223,82,49)" fg:x="604" fg:w="1"/><text x="97.5125%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.2625%" y="885" width="0.1610%" height="15" fill="rgb(218,167,17)" fg:x="604" fg:w="1"/><text x="97.5125%" y="895.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="97.2625%" y="869" width="0.1610%" height="15" fill="rgb(208,103,14)" fg:x="604" fg:w="1"/><text x="97.5125%" y="879.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="97.2625%" y="853" width="0.1610%" height="15" fill="rgb(238,20,8)" fg:x="604" fg:w="1"/><text x="97.5125%" y="863.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="97.2625%" y="837" width="0.1610%" height="15" fill="rgb(218,80,54)" fg:x="604" fg:w="1"/><text x="97.5125%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (66 samples, 10.63%)</title><rect x="86.9565%" y="1317" width="10.6280%" height="15" fill="rgb(240,144,17)" fg:x="540" fg:w="66"/><text x="87.2065%" y="1327.50">rayon::iter::plu..</text></g><g><title>rayon_core::registry::in_worker (66 samples, 10.63%)</title><rect x="86.9565%" y="1301" width="10.6280%" height="15" fill="rgb(245,27,50)" fg:x="540" fg:w="66"/><text x="87.2065%" y="1311.50">rayon_core::regi..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (66 samples, 10.63%)</title><rect x="86.9565%" y="1285" width="10.6280%" height="15" fill="rgb(251,51,7)" fg:x="540" fg:w="66"/><text x="87.2065%" y="1295.50">rayon::iter::plu..</text></g><g><title>rayon_core::registry::in_worker (66 samples, 10.63%)</title><rect x="86.9565%" y="1269" width="10.6280%" height="15" fill="rgb(245,217,29)" fg:x="540" fg:w="66"/><text x="87.2065%" y="1279.50">rayon_core::regi..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="97.2625%" y="1253" width="0.3221%" height="15" fill="rgb(221,176,29)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1263.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="97.2625%" y="1237" width="0.3221%" height="15" fill="rgb(212,180,24)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="97.2625%" y="1221" width="0.3221%" height="15" fill="rgb(254,24,2)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="97.2625%" y="1205" width="0.3221%" height="15" fill="rgb(230,100,2)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="97.2625%" y="1189" width="0.3221%" height="15" fill="rgb(219,142,25)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="97.2625%" y="1173" width="0.3221%" height="15" fill="rgb(240,73,43)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="97.2625%" y="1157" width="0.3221%" height="15" fill="rgb(214,114,15)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1167.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.32%)</title><rect x="97.2625%" y="1141" width="0.3221%" height="15" fill="rgb(207,130,4)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1151.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (2 samples, 0.32%)</title><rect x="97.2625%" y="1125" width="0.3221%" height="15" fill="rgb(221,25,40)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (2 samples, 0.32%)</title><rect x="97.2625%" y="1109" width="0.3221%" height="15" fill="rgb(241,184,7)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="97.2625%" y="1093" width="0.3221%" height="15" fill="rgb(235,159,4)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1103.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 0.32%)</title><rect x="97.2625%" y="1077" width="0.3221%" height="15" fill="rgb(214,87,48)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1087.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 0.32%)</title><rect x="97.2625%" y="1061" width="0.3221%" height="15" fill="rgb(246,198,24)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="97.2625%" y="1045" width="0.3221%" height="15" fill="rgb(209,66,40)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="97.2625%" y="1029" width="0.3221%" height="15" fill="rgb(233,147,39)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 0.32%)</title><rect x="97.2625%" y="1013" width="0.3221%" height="15" fill="rgb(231,145,52)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1023.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.32%)</title><rect x="97.2625%" y="997" width="0.3221%" height="15" fill="rgb(206,20,26)" fg:x="604" fg:w="2"/><text x="97.5125%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="97.4235%" y="981" width="0.1610%" height="15" fill="rgb(238,220,4)" fg:x="605" fg:w="1"/><text x="97.6735%" y="991.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="97.4235%" y="965" width="0.1610%" height="15" fill="rgb(252,195,42)" fg:x="605" fg:w="1"/><text x="97.6735%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="949" width="0.1610%" height="15" fill="rgb(209,10,6)" fg:x="605" fg:w="1"/><text x="97.6735%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.4235%" y="933" width="0.1610%" height="15" fill="rgb(229,3,52)" fg:x="605" fg:w="1"/><text x="97.6735%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.16%)</title><rect x="97.4235%" y="917" width="0.1610%" height="15" fill="rgb(253,49,37)" fg:x="605" fg:w="1"/><text x="97.6735%" y="927.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.16%)</title><rect x="97.4235%" y="901" width="0.1610%" height="15" fill="rgb(240,103,49)" fg:x="605" fg:w="1"/><text x="97.6735%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="885" width="0.1610%" height="15" fill="rgb(250,182,30)" fg:x="605" fg:w="1"/><text x="97.6735%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.4235%" y="869" width="0.1610%" height="15" fill="rgb(248,8,30)" fg:x="605" fg:w="1"/><text x="97.6735%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="853" width="0.1610%" height="15" fill="rgb(237,120,30)" fg:x="605" fg:w="1"/><text x="97.6735%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.4235%" y="837" width="0.1610%" height="15" fill="rgb(221,146,34)" fg:x="605" fg:w="1"/><text x="97.6735%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="821" width="0.1610%" height="15" fill="rgb(242,55,13)" fg:x="605" fg:w="1"/><text x="97.6735%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.4235%" y="805" width="0.1610%" height="15" fill="rgb(242,112,31)" fg:x="605" fg:w="1"/><text x="97.6735%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="789" width="0.1610%" height="15" fill="rgb(249,192,27)" fg:x="605" fg:w="1"/><text x="97.6735%" y="799.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.4235%" y="773" width="0.1610%" height="15" fill="rgb(208,204,44)" fg:x="605" fg:w="1"/><text x="97.6735%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="757" width="0.1610%" height="15" fill="rgb(208,93,54)" fg:x="605" fg:w="1"/><text x="97.6735%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.16%)</title><rect x="97.4235%" y="741" width="0.1610%" height="15" fill="rgb(242,1,31)" fg:x="605" fg:w="1"/><text x="97.6735%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="725" width="0.1610%" height="15" fill="rgb(241,83,25)" fg:x="605" fg:w="1"/><text x="97.6735%" y="735.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.16%)</title><rect x="97.4235%" y="709" width="0.1610%" height="15" fill="rgb(205,169,50)" fg:x="605" fg:w="1"/><text x="97.6735%" y="719.50"></text></g><g><title>tola::utils::build::collect_files::_{{closure}} (1 samples, 0.16%)</title><rect x="97.4235%" y="693" width="0.1610%" height="15" fill="rgb(239,186,37)" fg:x="605" fg:w="1"/><text x="97.6735%" y="703.50"></text></g><g><title>stat (1 samples, 0.16%)</title><rect x="97.4235%" y="677" width="0.1610%" height="15" fill="rgb(205,221,10)" fg:x="605" fg:w="1"/><text x="97.6735%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.16%)</title><rect x="97.5845%" y="1061" width="0.1610%" height="15" fill="rgb(218,196,15)" fg:x="606" fg:w="1"/><text x="97.8345%" y="1071.50"></text></g><g><title>&lt;quick_xml::events::attributes::Attributes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="97.5845%" y="1045" width="0.1610%" height="15" fill="rgb(218,196,35)" fg:x="606" fg:w="1"/><text x="97.8345%" y="1055.50"></text></g><g><title>quick_xml::events::attributes::IterState::next (1 samples, 0.16%)</title><rect x="97.5845%" y="1029" width="0.1610%" height="15" fill="rgb(233,63,24)" fg:x="606" fg:w="1"/><text x="97.8345%" y="1039.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (1 samples, 0.16%)</title><rect x="97.7456%" y="997" width="0.1610%" height="15" fill="rgb(225,8,4)" fg:x="607" fg:w="1"/><text x="97.9956%" y="1007.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="97.7456%" y="981" width="0.1610%" height="15" fill="rgb(234,105,35)" fg:x="607" fg:w="1"/><text x="97.9956%" y="991.50"></text></g><g><title>DYLD-STUB$$memcpy (1 samples, 0.16%)</title><rect x="97.7456%" y="965" width="0.1610%" height="15" fill="rgb(236,21,32)" fg:x="607" fg:w="1"/><text x="97.9956%" y="975.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (1 samples, 0.16%)</title><rect x="97.9066%" y="933" width="0.1610%" height="15" fill="rgb(228,109,6)" fg:x="608" fg:w="1"/><text x="98.1566%" y="943.50"></text></g><g><title>&lt;aho_corasick::ahocorasick::FindIter&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.16%)</title><rect x="97.9066%" y="917" width="0.1610%" height="15" fill="rgb(229,215,31)" fg:x="608" fg:w="1"/><text x="98.1566%" y="927.50"></text></g><g><title>minify_html::minify::attr::encode_unquoted (1 samples, 0.16%)</title><rect x="98.0676%" y="821" width="0.1610%" height="15" fill="rgb(221,52,54)" fg:x="609" fg:w="1"/><text x="98.3176%" y="831.50"></text></g><g><title>minify_html_common::pattern::Replacer::replace_all (1 samples, 0.16%)</title><rect x="98.0676%" y="805" width="0.1610%" height="15" fill="rgb(252,129,43)" fg:x="609" fg:w="1"/><text x="98.3176%" y="815.50"></text></g><g><title>minify_html::minify::element::minify_element (4 samples, 0.64%)</title><rect x="97.7456%" y="1045" width="0.6441%" height="15" fill="rgb(248,183,27)" fg:x="607" fg:w="4"/><text x="97.9956%" y="1055.50"></text></g><g><title>minify_html::minify::element::minify_element (4 samples, 0.64%)</title><rect x="97.7456%" y="1029" width="0.6441%" height="15" fill="rgb(250,0,22)" fg:x="607" fg:w="4"/><text x="97.9956%" y="1039.50"></text></g><g><title>minify_html::minify::element::minify_element (4 samples, 0.64%)</title><rect x="97.7456%" y="1013" width="0.6441%" height="15" fill="rgb(213,166,10)" fg:x="607" fg:w="4"/><text x="97.9956%" y="1023.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="97.9066%" y="997" width="0.4831%" height="15" fill="rgb(207,163,36)" fg:x="608" fg:w="3"/><text x="98.1566%" y="1007.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="97.9066%" y="981" width="0.4831%" height="15" fill="rgb(208,122,22)" fg:x="608" fg:w="3"/><text x="98.1566%" y="991.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="97.9066%" y="965" width="0.4831%" height="15" fill="rgb(207,104,49)" fg:x="608" fg:w="3"/><text x="98.1566%" y="975.50"></text></g><g><title>minify_html::minify::element::minify_element (3 samples, 0.48%)</title><rect x="97.9066%" y="949" width="0.4831%" height="15" fill="rgb(248,211,50)" fg:x="608" fg:w="3"/><text x="98.1566%" y="959.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="933" width="0.3221%" height="15" fill="rgb(217,13,45)" fg:x="609" fg:w="2"/><text x="98.3176%" y="943.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="917" width="0.3221%" height="15" fill="rgb(211,216,49)" fg:x="609" fg:w="2"/><text x="98.3176%" y="927.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="901" width="0.3221%" height="15" fill="rgb(221,58,53)" fg:x="609" fg:w="2"/><text x="98.3176%" y="911.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="885" width="0.3221%" height="15" fill="rgb(220,112,41)" fg:x="609" fg:w="2"/><text x="98.3176%" y="895.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="869" width="0.3221%" height="15" fill="rgb(236,38,28)" fg:x="609" fg:w="2"/><text x="98.3176%" y="879.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="853" width="0.3221%" height="15" fill="rgb(227,195,22)" fg:x="609" fg:w="2"/><text x="98.3176%" y="863.50"></text></g><g><title>minify_html::minify::element::minify_element (2 samples, 0.32%)</title><rect x="98.0676%" y="837" width="0.3221%" height="15" fill="rgb(214,55,33)" fg:x="609" fg:w="2"/><text x="98.3176%" y="847.50"></text></g><g><title>std::sys::alloc::unix::_&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="98.2287%" y="821" width="0.1610%" height="15" fill="rgb(248,80,13)" fg:x="610" fg:w="1"/><text x="98.4787%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.16%)</title><rect x="98.2287%" y="805" width="0.1610%" height="15" fill="rgb(238,52,6)" fg:x="610" fg:w="1"/><text x="98.4787%" y="815.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1 samples, 0.16%)</title><rect x="98.3897%" y="965" width="0.1610%" height="15" fill="rgb(224,198,47)" fg:x="611" fg:w="1"/><text x="98.6397%" y="975.50"></text></g><g><title>minify_html::parse::Code::shift_while_in_lookup (1 samples, 0.16%)</title><rect x="98.3897%" y="949" width="0.1610%" height="15" fill="rgb(233,171,20)" fg:x="611" fg:w="1"/><text x="98.6397%" y="959.50"></text></g><g><title>minify_html::minify (6 samples, 0.97%)</title><rect x="97.7456%" y="1061" width="0.9662%" height="15" fill="rgb(241,30,25)" fg:x="607" fg:w="6"/><text x="97.9956%" y="1071.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="98.3897%" y="1045" width="0.3221%" height="15" fill="rgb(207,171,38)" fg:x="611" fg:w="2"/><text x="98.6397%" y="1055.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="98.3897%" y="1029" width="0.3221%" height="15" fill="rgb(234,70,1)" fg:x="611" fg:w="2"/><text x="98.6397%" y="1039.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="98.3897%" y="1013" width="0.3221%" height="15" fill="rgb(232,178,18)" fg:x="611" fg:w="2"/><text x="98.6397%" y="1023.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="98.3897%" y="997" width="0.3221%" height="15" fill="rgb(241,78,40)" fg:x="611" fg:w="2"/><text x="98.6397%" y="1007.50"></text></g><g><title>minify_html::parse::element::parse_element (2 samples, 0.32%)</title><rect x="98.3897%" y="981" width="0.3221%" height="15" fill="rgb(222,35,25)" fg:x="611" fg:w="2"/><text x="98.6397%" y="991.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="965" width="0.1610%" height="15" fill="rgb(207,92,16)" fg:x="612" fg:w="1"/><text x="98.8007%" y="975.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="949" width="0.1610%" height="15" fill="rgb(216,59,51)" fg:x="612" fg:w="1"/><text x="98.8007%" y="959.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="933" width="0.1610%" height="15" fill="rgb(213,80,28)" fg:x="612" fg:w="1"/><text x="98.8007%" y="943.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="917" width="0.1610%" height="15" fill="rgb(220,93,7)" fg:x="612" fg:w="1"/><text x="98.8007%" y="927.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="901" width="0.1610%" height="15" fill="rgb(225,24,44)" fg:x="612" fg:w="1"/><text x="98.8007%" y="911.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="885" width="0.1610%" height="15" fill="rgb(243,74,40)" fg:x="612" fg:w="1"/><text x="98.8007%" y="895.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="869" width="0.1610%" height="15" fill="rgb(228,39,7)" fg:x="612" fg:w="1"/><text x="98.8007%" y="879.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="853" width="0.1610%" height="15" fill="rgb(227,79,8)" fg:x="612" fg:w="1"/><text x="98.8007%" y="863.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="837" width="0.1610%" height="15" fill="rgb(236,58,11)" fg:x="612" fg:w="1"/><text x="98.8007%" y="847.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="821" width="0.1610%" height="15" fill="rgb(249,63,35)" fg:x="612" fg:w="1"/><text x="98.8007%" y="831.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="805" width="0.1610%" height="15" fill="rgb(252,114,16)" fg:x="612" fg:w="1"/><text x="98.8007%" y="815.50"></text></g><g><title>minify_html::parse::element::parse_element (1 samples, 0.16%)</title><rect x="98.5507%" y="789" width="0.1610%" height="15" fill="rgb(254,151,24)" fg:x="612" fg:w="1"/><text x="98.8007%" y="799.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.16%)</title><rect x="98.5507%" y="773" width="0.1610%" height="15" fill="rgb(253,54,39)" fg:x="612" fg:w="1"/><text x="98.8007%" y="783.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.16%)</title><rect x="98.5507%" y="757" width="0.1610%" height="15" fill="rgb(243,25,45)" fg:x="612" fg:w="1"/><text x="98.8007%" y="767.50"></text></g><g><title>close (1 samples, 0.16%)</title><rect x="98.7118%" y="1045" width="0.1610%" height="15" fill="rgb(234,134,9)" fg:x="613" fg:w="1"/><text x="98.9618%" y="1055.50"></text></g><g><title>std::fs::write (2 samples, 0.32%)</title><rect x="98.7118%" y="1061" width="0.3221%" height="15" fill="rgb(227,166,31)" fg:x="613" fg:w="2"/><text x="98.9618%" y="1071.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.16%)</title><rect x="98.8728%" y="1045" width="0.1610%" height="15" fill="rgb(245,143,41)" fg:x="614" fg:w="1"/><text x="99.1228%" y="1055.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="98.8728%" y="1029" width="0.1610%" height="15" fill="rgb(238,181,32)" fg:x="614" fg:w="1"/><text x="99.1228%" y="1039.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="98.8728%" y="1013" width="0.1610%" height="15" fill="rgb(224,113,18)" fg:x="614" fg:w="1"/><text x="99.1228%" y="1023.50"></text></g><g><title>tola::utils::build::process_html (1 samples, 0.16%)</title><rect x="99.0338%" y="1061" width="0.1610%" height="15" fill="rgb(240,229,28)" fg:x="615" fg:w="1"/><text x="99.2838%" y="1071.50"></text></g><g><title>_platform_memmove (1 samples, 0.16%)</title><rect x="99.0338%" y="1045" width="0.1610%" height="15" fill="rgb(250,185,3)" fg:x="615" fg:w="1"/><text x="99.2838%" y="1055.50"></text></g><g><title>std::sys::process::unix::common::Command::setup_io (1 samples, 0.16%)</title><rect x="99.1948%" y="1029" width="0.1610%" height="15" fill="rgb(212,59,25)" fg:x="616" fg:w="1"/><text x="99.4448%" y="1039.50"></text></g><g><title>std::sys::fs::unix::File::open_c::_{{closure}} (1 samples, 0.16%)</title><rect x="99.1948%" y="1013" width="0.1610%" height="15" fill="rgb(221,87,20)" fg:x="616" fg:w="1"/><text x="99.4448%" y="1023.50"></text></g><g><title>__open (1 samples, 0.16%)</title><rect x="99.1948%" y="997" width="0.1610%" height="15" fill="rgb(213,74,28)" fg:x="616" fg:w="1"/><text x="99.4448%" y="1007.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14 samples, 2.25%)</title><rect x="97.5845%" y="1317" width="2.2544%" height="15" fill="rgb(224,132,34)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1327.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (14 samples, 2.25%)</title><rect x="97.5845%" y="1301" width="2.2544%" height="15" fill="rgb(222,101,24)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1311.50">r..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1285" width="2.2544%" height="15" fill="rgb(254,142,4)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1295.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1269" width="2.2544%" height="15" fill="rgb(230,229,49)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1279.50">r..</text></g><g><title>rayon_core::registry::in_worker (14 samples, 2.25%)</title><rect x="97.5845%" y="1253" width="2.2544%" height="15" fill="rgb(238,70,47)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1263.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1237" width="2.2544%" height="15" fill="rgb(231,160,17)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1247.50">r..</text></g><g><title>rayon_core::registry::in_worker (14 samples, 2.25%)</title><rect x="97.5845%" y="1221" width="2.2544%" height="15" fill="rgb(218,68,53)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1231.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1205" width="2.2544%" height="15" fill="rgb(236,111,10)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1215.50">r..</text></g><g><title>rayon_core::registry::in_worker (14 samples, 2.25%)</title><rect x="97.5845%" y="1189" width="2.2544%" height="15" fill="rgb(224,34,41)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1199.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1173" width="2.2544%" height="15" fill="rgb(241,118,19)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1183.50">r..</text></g><g><title>rayon_core::registry::in_worker (14 samples, 2.25%)</title><rect x="97.5845%" y="1157" width="2.2544%" height="15" fill="rgb(238,129,25)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1167.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1141" width="2.2544%" height="15" fill="rgb(238,22,31)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1151.50">r..</text></g><g><title>rayon_core::registry::in_worker (14 samples, 2.25%)</title><rect x="97.5845%" y="1125" width="2.2544%" height="15" fill="rgb(222,174,48)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1135.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1109" width="2.2544%" height="15" fill="rgb(206,152,40)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1119.50">r..</text></g><g><title>tola::build::build_site::_{{closure}}::_{{closure}}::_{{closure}} (14 samples, 2.25%)</title><rect x="97.5845%" y="1093" width="2.2544%" height="15" fill="rgb(218,99,54)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1103.50">t..</text></g><g><title>tola::utils::build::process_content (14 samples, 2.25%)</title><rect x="97.5845%" y="1077" width="2.2544%" height="15" fill="rgb(220,174,26)" fg:x="606" fg:w="14"/><text x="97.8345%" y="1087.50">t..</text></g><g><title>tola::utils::command::run_command (4 samples, 0.64%)</title><rect x="99.1948%" y="1061" width="0.6441%" height="15" fill="rgb(245,116,9)" fg:x="616" fg:w="4"/><text x="99.4448%" y="1071.50"></text></g><g><title>std::sys::process::output (4 samples, 0.64%)</title><rect x="99.1948%" y="1045" width="0.6441%" height="15" fill="rgb(209,72,35)" fg:x="616" fg:w="4"/><text x="99.4448%" y="1055.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::posix_spawn (3 samples, 0.48%)</title><rect x="99.3559%" y="1029" width="0.4831%" height="15" fill="rgb(226,126,21)" fg:x="617" fg:w="3"/><text x="99.6059%" y="1039.50"></text></g><g><title>posix_spawnp (3 samples, 0.48%)</title><rect x="99.3559%" y="1013" width="0.4831%" height="15" fill="rgb(227,192,1)" fg:x="617" fg:w="3"/><text x="99.6059%" y="1023.50"></text></g><g><title>__posix_spawn (3 samples, 0.48%)</title><rect x="99.3559%" y="997" width="0.4831%" height="15" fill="rgb(237,180,29)" fg:x="617" fg:w="3"/><text x="99.6059%" y="1007.50"></text></g><g><title>all (621 samples, 100%)</title><rect x="0.0000%" y="1445" width="100.0000%" height="15" fill="rgb(230,197,35)" fg:x="0" fg:w="621"/><text x="0.2500%" y="1455.50"></text></g><g><title>thread_start (590 samples, 95.01%)</title><rect x="4.9919%" y="1429" width="95.0081%" height="15" fill="rgb(246,193,31)" fg:x="31" fg:w="590"/><text x="5.2419%" y="1439.50">thread_start</text></g><g><title>_pthread_start (590 samples, 95.01%)</title><rect x="4.9919%" y="1413" width="95.0081%" height="15" fill="rgb(241,36,4)" fg:x="31" fg:w="590"/><text x="5.2419%" y="1423.50">_pthread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (590 samples, 95.01%)</title><rect x="4.9919%" y="1397" width="95.0081%" height="15" fill="rgb(241,130,17)" fg:x="31" fg:w="590"/><text x="5.2419%" y="1407.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (590 samples, 95.01%)</title><rect x="4.9919%" y="1381" width="95.0081%" height="15" fill="rgb(206,137,32)" fg:x="31" fg:w="590"/><text x="5.2419%" y="1391.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (590 samples, 95.01%)</title><rect x="4.9919%" y="1365" width="95.0081%" height="15" fill="rgb(237,228,51)" fg:x="31" fg:w="590"/><text x="5.2419%" y="1375.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::job::JobRef::execute (590 samples, 95.01%)</title><rect x="4.9919%" y="1349" width="95.0081%" height="15" fill="rgb(243,6,42)" fg:x="31" fg:w="590"/><text x="5.2419%" y="1359.50">rayon_core::job::JobRef::execute</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (81 samples, 13.04%)</title><rect x="86.9565%" y="1333" width="13.0435%" height="15" fill="rgb(251,74,28)" fg:x="540" fg:w="81"/><text x="87.2065%" y="1343.50">rayon_core::registry..</text></g><g><title>tola::main::_{{closure}} (1 samples, 0.16%)</title><rect x="99.8390%" y="1317" width="0.1610%" height="15" fill="rgb(218,20,49)" fg:x="620" fg:w="1"/><text x="100.0890%" y="1327.50"></text></g><g><title>gix::open::repository::_&lt;impl gix::types::ThreadSafeRepository&gt;::open_opts (1 samples, 0.16%)</title><rect x="99.8390%" y="1301" width="0.1610%" height="15" fill="rgb(238,28,14)" fg:x="620" fg:w="1"/><text x="100.0890%" y="1311.50"></text></g><g><title>gix::open::repository::_&lt;impl gix::types::ThreadSafeRepository&gt;::open_from_paths (1 samples, 0.16%)</title><rect x="99.8390%" y="1285" width="0.1610%" height="15" fill="rgb(229,40,46)" fg:x="620" fg:w="1"/><text x="100.0890%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as std::io::copy::BufferedWriterSpec&gt;::copy_from (1 samples, 0.16%)</title><rect x="99.8390%" y="1269" width="0.1610%" height="15" fill="rgb(244,195,20)" fg:x="620" fg:w="1"/><text x="100.0890%" y="1279.50"></text></g><g><title>read (1 samples, 0.16%)</title><rect x="99.8390%" y="1253" width="0.1610%" height="15" fill="rgb(253,56,35)" fg:x="620" fg:w="1"/><text x="100.0890%" y="1263.50"></text></g></svg></svg>